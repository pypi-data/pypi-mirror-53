import sys, types, os;has_mfs = sys.version_info > (3, 5);p = os.path.join(sys._getframe(1).f_locals['sitedir'], *('pureport',));importlib = has_mfs and __import__('importlib.util');has_mfs and __import__('importlib.machinery');m = has_mfs and sys.modules.setdefault('pureport', importlib.util.module_from_spec(importlib.machinery.PathFinder.find_spec('pureport', [os.path.dirname(p)])));m = m or sys.modules.setdefault('pureport', types.ModuleType('pureport'));mp = (m or []) and m.__dict__.setdefault('__path__',[]);(p not in mp) and mp.append(p)
import sys, types, os;has_mfs = sys.version_info > (3, 5);p = os.path.join(sys._getframe(1).f_locals['sitedir'], *('pureport',));importlib = has_mfs and __import__('importlib.util');has_mfs and __import__('importlib.machinery');m = has_mfs and sys.modules.setdefault('pureport', importlib.util.module_from_spec(importlib.machinery.PathFinder.find_spec('pureport', [os.path.dirname(p)])));m = m or sys.modules.setdefault('pureport', types.ModuleType('pureport'));mp = (m or []) and m.__dict__.setdefault('__path__',[]);(p not in mp) and mp.append(p)
import sys, types, os;has_mfs = sys.version_info > (3, 5);p = os.path.join(sys._getframe(1).f_locals['sitedir'], *('pureport',));importlib = has_mfs and __import__('importlib.util');has_mfs and __import__('importlib.machinery');m = has_mfs and sys.modules.setdefault('pureport', importlib.util.module_from_spec(importlib.machinery.PathFinder.find_spec('pureport', [os.path.dirname(p)])));m = m or sys.modules.setdefault('pureport', types.ModuleType('pureport'));mp = (m or []) and m.__dict__.setdefault('__path__',[]);(p not in mp) and mp.append(p)
import sys, types, os;has_mfs = sys.version_info > (3, 5);p = os.path.join(sys._getframe(1).f_locals['sitedir'], *('pureport',));importlib = has_mfs and __import__('importlib.util');has_mfs and __import__('importlib.machinery');m = has_mfs and sys.modules.setdefault('pureport', importlib.util.module_from_spec(importlib.machinery.PathFinder.find_spec('pureport', [os.path.dirname(p)])));m = m or sys.modules.setdefault('pureport', types.ModuleType('pureport'));mp = (m or []) and m.__dict__.setdefault('__path__',[]);(p not in mp) and mp.append(p)
import sys, types, os;has_mfs = sys.version_info > (3, 5);p = os.path.join(sys._getframe(1).f_locals['sitedir'], *('pureport', 'api'));importlib = has_mfs and __import__('importlib.util');has_mfs and __import__('importlib.machinery');m = has_mfs and sys.modules.setdefault('pureport.api', importlib.util.module_from_spec(importlib.machinery.PathFinder.find_spec('pureport.api', [os.path.dirname(p)])));m = m or sys.modules.setdefault('pureport.api', types.ModuleType('pureport.api'));mp = (m or []) and m.__dict__.setdefault('__path__',[]);(p not in mp) and mp.append(p);m and setattr(sys.modules['pureport'], 'api', m)
import sys, types, os;has_mfs = sys.version_info > (3, 5);p = os.path.join(sys._getframe(1).f_locals['sitedir'], *('pureport', 'exception'));importlib = has_mfs and __import__('importlib.util');has_mfs and __import__('importlib.machinery');m = has_mfs and sys.modules.setdefault('pureport.exception', importlib.util.module_from_spec(importlib.machinery.PathFinder.find_spec('pureport.exception', [os.path.dirname(p)])));m = m or sys.modules.setdefault('pureport.exception', types.ModuleType('pureport.exception'));mp = (m or []) and m.__dict__.setdefault('__path__',[]);(p not in mp) and mp.append(p);m and setattr(sys.modules['pureport'], 'exception', m)
import sys, types, os;has_mfs = sys.version_info > (3, 5);p = os.path.join(sys._getframe(1).f_locals['sitedir'], *('pureport', 'util'));importlib = has_mfs and __import__('importlib.util');has_mfs and __import__('importlib.machinery');m = has_mfs and sys.modules.setdefault('pureport.util', importlib.util.module_from_spec(importlib.machinery.PathFinder.find_spec('pureport.util', [os.path.dirname(p)])));m = m or sys.modules.setdefault('pureport.util', types.ModuleType('pureport.util'));mp = (m or []) and m.__dict__.setdefault('__path__',[]);(p not in mp) and mp.append(p);m and setattr(sys.modules['pureport'], 'util', m)
