{"version":3,"sources":["webpack:///./src/common/dom/setup-leaflet-map.ts","webpack:///./src/data/core.ts","webpack:///./src/components/timezone-datalist.ts","webpack:///./src/components/map/ha-location-editor.ts","webpack:///./src/onboarding/onboarding-core-config.ts"],"names":["__webpack_require__","d","__webpack_exports__","setupLeafletMap","createTileLayer","async","mapElement","darkMode","parentNode","Error","Leaflet","e","then","t","bind","Icon","Default","imagePath","map","style","document","createElement","setAttribute","appendChild","setView","addTo","leaflet","tileLayer","Browser","retina","attribution","subdomains","minZoom","maxZoom","saveCoreConfig","detectCoreConfig","hass","values","callWS","Object","assign","type","createTimezoneListEl","google_timezones_json__WEBPACK_IMPORTED_MODULE_0__","google_timezones_json__WEBPACK_IMPORTED_MODULE_0___default","n","list","id","keys","a","forEach","key","option","value","innerHTML","LocationEditor","lit_element__WEBPACK_IMPORTED_MODULE_1__","[object Object]","this","fitZoom","_leafletMap","location","changedProps","super","firstUpdated","_initMap","updated","_updateMarker","_ignoreFitToMap","fitMap","undefined","_mapEl","shadowRoot","querySelector","_common_dom_setup_leaflet_map__WEBPACK_IMPORTED_MODULE_2__","addEventListener","ev","_updateLocation","latlng","invalidateSize","lat","lng","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_3__","bubbles","_locationMarker","setLatLng","marker","draggable","target","getLatLng","addLayer","remove","styles","tslib__WEBPACK_IMPORTED_MODULE_0__","amsterdam","OnboardingCoreConfig","_working","onboardingLocalize","user","name","_nameValue","_handleChange","_detect","_locationValue","_locationChanged","localize","_timeZoneValue","_elevationValue","_unitSystemValue","_unitSystemChanged","_save","setTimeout","focus","keyCode","inputElement","_components_timezone_datalist__WEBPACK_IMPORTED_MODULE_9__","_name","_location","_elevation","_timeZone","_unitSystem","currentTarget","detail","_data_core__WEBPACK_IMPORTED_MODULE_6__","latitude","longitude","Number","elevation","String","unit_system","time_zone","err","alert","message","preventDefault","location_name","result","_data_onboarding__WEBPACK_IMPORTED_MODULE_7__","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_8__"],"mappings":"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","file":"chunk.921ac2b3164a5920e44b.js","sourcesContent":["import { Map } from \"leaflet\";\n\n// Sets up a Leaflet map on the provided DOM element\nexport type LeafletModuleType = typeof import(\"leaflet\");\n\nexport const setupLeafletMap = async (\n  mapElement: HTMLElement,\n  darkMode = false\n): Promise<[Map, LeafletModuleType]> => {\n  if (!mapElement.parentNode) {\n    throw new Error(\"Cannot setup Leaflet map on disconnected element\");\n  }\n  // tslint:disable-next-line\n  const Leaflet = (await import(/* webpackChunkName: \"leaflet\" */ \"leaflet\")) as LeafletModuleType;\n  Leaflet.Icon.Default.imagePath = \"/static/images/leaflet/images/\";\n\n  const map = Leaflet.map(mapElement);\n  const style = document.createElement(\"link\");\n  style.setAttribute(\"href\", \"/static/images/leaflet/leaflet.css\");\n  style.setAttribute(\"rel\", \"stylesheet\");\n  mapElement.parentNode.appendChild(style);\n  map.setView([52.3731339, 4.8903147], 13);\n  createTileLayer(Leaflet, darkMode).addTo(map);\n\n  return [map, Leaflet];\n};\n\nexport const createTileLayer = (\n  leaflet: LeafletModuleType,\n  darkMode: boolean\n) => {\n  return leaflet.tileLayer(\n    `https://{s}.basemaps.cartocdn.com/${\n      darkMode ? \"dark_all\" : \"light_all\"\n    }/{z}/{x}/{y}${leaflet.Browser.retina ? \"@2x.png\" : \".png\"}`,\n    {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>, &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n      subdomains: \"abcd\",\n      minZoom: 0,\n      maxZoom: 20,\n    }\n  );\n};\n","import { HomeAssistant } from \"../types\";\nimport { HassConfig } from \"home-assistant-js-websocket\";\n\nexport interface ConfigUpdateValues {\n  location_name: string;\n  latitude: number;\n  longitude: number;\n  elevation: number;\n  unit_system: \"metric\" | \"imperial\";\n  time_zone: string;\n}\n\nexport const saveCoreConfig = (\n  hass: HomeAssistant,\n  values: Partial<ConfigUpdateValues>\n) =>\n  hass.callWS<HassConfig>({\n    type: \"config/core/update\",\n    ...values,\n  });\n\nexport const detectCoreConfig = (hass: HomeAssistant) =>\n  hass.callWS<Partial<ConfigUpdateValues>>({\n    type: \"config/core/detect\",\n  });\n","import timezones from \"google-timezones-json\";\n\nexport const createTimezoneListEl = () => {\n  const list = document.createElement(\"datalist\");\n  list.id = \"timezones\";\n  Object.keys(timezones).forEach((key) => {\n    const option = document.createElement(\"option\");\n    option.value = key;\n    option.innerHTML = timezones[key];\n    list.appendChild(option);\n  });\n  return list;\n};\n","import {\n  LitElement,\n  property,\n  TemplateResult,\n  html,\n  CSSResult,\n  css,\n  customElement,\n  PropertyValues,\n} from \"lit-element\";\nimport { Marker, Map, LeafletMouseEvent, DragEndEvent, LatLng } from \"leaflet\";\nimport {\n  setupLeafletMap,\n  LeafletModuleType,\n} from \"../../common/dom/setup-leaflet-map\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\n@customElement(\"ha-location-editor\")\nclass LocationEditor extends LitElement {\n  @property() public location?: [number, number];\n  public fitZoom = 16;\n\n  private _ignoreFitToMap?: [number, number];\n\n  // tslint:disable-next-line\n  private Leaflet?: LeafletModuleType;\n  private _leafletMap?: Map;\n  private _locationMarker?: Marker;\n\n  public fitMap(): void {\n    if (!this._leafletMap || !this.location) {\n      return;\n    }\n    this._leafletMap.setView(this.location, this.fitZoom);\n  }\n\n  protected render(): TemplateResult | void {\n    return html`\n      <div id=\"map\"></div>\n    `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues): void {\n    super.firstUpdated(changedProps);\n    this._initMap();\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n\n    // Still loading.\n    if (!this.Leaflet) {\n      return;\n    }\n\n    this._updateMarker();\n    if (!this._ignoreFitToMap || this._ignoreFitToMap !== this.location) {\n      this.fitMap();\n    }\n    this._ignoreFitToMap = undefined;\n  }\n\n  private get _mapEl(): HTMLDivElement {\n    return this.shadowRoot!.querySelector(\"div\")!;\n  }\n\n  private async _initMap(): Promise<void> {\n    [this._leafletMap, this.Leaflet] = await setupLeafletMap(this._mapEl);\n    this._leafletMap.addEventListener(\n      \"click\",\n      // @ts-ignore\n      (ev: LeafletMouseEvent) => this._updateLocation(ev.latlng)\n    );\n    this._updateMarker();\n    this.fitMap();\n    this._leafletMap.invalidateSize();\n  }\n\n  private _updateLocation(latlng: LatLng) {\n    this.location = this._ignoreFitToMap = [latlng.lat, latlng.lng];\n    fireEvent(this, \"change\", undefined, { bubbles: false });\n  }\n\n  private _updateMarker(): void {\n    if (!this.location) {\n      if (this._locationMarker) {\n        this._locationMarker.remove();\n        this._locationMarker = undefined;\n      }\n      return;\n    }\n\n    if (this._locationMarker) {\n      this._locationMarker.setLatLng(this.location);\n      return;\n    }\n    this._locationMarker = this.Leaflet!.marker(this.location, {\n      draggable: true,\n    });\n    this._locationMarker.addEventListener(\n      \"dragend\",\n      // @ts-ignore\n      (ev: DragEndEvent) => this._updateLocation(ev.target.getLatLng())\n    );\n    this._leafletMap!.addLayer(this._locationMarker);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        height: 300px;\n      }\n      #map {\n        height: 100%;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-location-editor\": LocationEditor;\n  }\n}\n","import {\n  LitElement,\n  customElement,\n  property,\n  TemplateResult,\n  html,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport \"@material/mwc-button/mwc-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-radio-group/paper-radio-group\";\nimport \"@polymer/paper-radio-button/paper-radio-button\";\n// tslint:disable-next-line: no-duplicate-imports\nimport { PaperInputElement } from \"@polymer/paper-input/paper-input\";\nimport { HomeAssistant } from \"../types\";\nimport {\n  ConfigUpdateValues,\n  detectCoreConfig,\n  saveCoreConfig,\n} from \"../data/core\";\nimport { PolymerChangedEvent } from \"../polymer-types\";\nimport { onboardCoreConfigStep } from \"../data/onboarding\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { LocalizeFunc } from \"../common/translations/localize\";\nimport { createTimezoneListEl } from \"../components/timezone-datalist\";\nimport \"../components/map/ha-location-editor\";\n\nconst amsterdam = [52.3731339, 4.8903147];\n\n@customElement(\"onboarding-core-config\")\nclass OnboardingCoreConfig extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public onboardingLocalize!: LocalizeFunc;\n\n  @property() private _working = false;\n\n  @property() private _name!: ConfigUpdateValues[\"location_name\"];\n  @property() private _location!: [number, number];\n  @property() private _elevation!: string;\n  @property() private _unitSystem!: ConfigUpdateValues[\"unit_system\"];\n  @property() private _timeZone!: string;\n\n  protected render(): TemplateResult | void {\n    return html`\n      <p>\n        ${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.intro\",\n          \"name\",\n          this.hass.user!.name\n        )}\n      </p>\n\n      <paper-input\n        .label=${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.location_name\"\n        )}\n        name=\"name\"\n        .disabled=${this._working}\n        .value=${this._nameValue}\n        @value-changed=${this._handleChange}\n      ></paper-input>\n\n      <div class=\"middle-text\">\n        <p>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.intro_location\"\n          )}\n        </p>\n\n        <div class=\"row\">\n          <div>\n            ${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.core-config.intro_location_detect\"\n            )}\n          </div>\n          <mwc-button @click=${this._detect}>\n            ${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.core-config.button_detect\"\n            )}\n          </mwc-button>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <ha-location-editor\n          class=\"flex\"\n          .location=${this._locationValue}\n          .fitZoom=${14}\n          @change=${this._locationChanged}\n        ></ha-location-editor>\n      </div>\n\n      <div class=\"row\">\n        <paper-input\n          class=\"flex\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.time_zone\"\n          )}\n          name=\"timeZone\"\n          list=\"timezones\"\n          .disabled=${this._working}\n          .value=${this._timeZoneValue}\n          @value-changed=${this._handleChange}\n        ></paper-input>\n\n        <paper-input\n          class=\"flex\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.elevation\"\n          )}\n          name=\"elevation\"\n          type=\"number\"\n          .disabled=${this._working}\n          .value=${this._elevationValue}\n          @value-changed=${this._handleChange}\n        >\n          <span slot=\"suffix\">\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.elevation_meters\"\n            )}\n          </span>\n        </paper-input>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"flex\">\n          ${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.unit_system\"\n          )}\n        </div>\n        <paper-radio-group\n          class=\"flex\"\n          .selected=${this._unitSystemValue}\n          @selected-changed=${this._unitSystemChanged}\n        >\n          <paper-radio-button name=\"metric\" .disabled=${this._working}>\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.unit_system_metric\"\n            )}\n            <div class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.panel.config.core.section.core.core_config.metric_example\"\n              )}\n            </div>\n          </paper-radio-button>\n          <paper-radio-button name=\"imperial\" .disabled=${this._working}>\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.unit_system_imperial\"\n            )}\n            <div class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.panel.config.core.section.core.core_config.imperial_example\"\n              )}\n            </div>\n          </paper-radio-button>\n        </paper-radio-group>\n      </div>\n\n      <div class=\"footer\">\n        <mwc-button @click=${this._save} .disabled=${this._working}>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.finish\"\n          )}\n        </mwc-button>\n      </div>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    setTimeout(\n      () => this.shadowRoot!.querySelector(\"paper-input\")!.focus(),\n      100\n    );\n    this.addEventListener(\"keypress\", (ev) => {\n      if (ev.keyCode === 13) {\n        this._save(ev);\n      }\n    });\n    const input = this.shadowRoot!.querySelector(\n      \"[name=timeZone]\"\n    ) as PaperInputElement;\n    input.inputElement.appendChild(createTimezoneListEl());\n  }\n\n  private get _nameValue() {\n    return this._name !== undefined\n      ? this._name\n      : this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.location_name_default\"\n        );\n  }\n\n  private get _locationValue() {\n    return this._location || amsterdam;\n  }\n\n  private get _elevationValue() {\n    return this._elevation !== undefined ? this._elevation : 0;\n  }\n\n  private get _timeZoneValue() {\n    return this._timeZone;\n  }\n\n  private get _unitSystemValue() {\n    return this._unitSystem !== undefined ? this._unitSystem : \"metric\";\n  }\n\n  private _handleChange(ev: PolymerChangedEvent<string>) {\n    const target = ev.currentTarget as PaperInputElement;\n    this[`_${target.name}`] = target.value;\n  }\n\n  private _locationChanged(ev) {\n    this._location = ev.currentTarget.location;\n  }\n\n  private _unitSystemChanged(\n    ev: PolymerChangedEvent<ConfigUpdateValues[\"unit_system\"]>\n  ) {\n    this._unitSystem = ev.detail.value;\n  }\n\n  private async _detect() {\n    this._working = true;\n    try {\n      const values = await detectCoreConfig(this.hass);\n      if (values.latitude && values.longitude) {\n        this._location = [Number(values.latitude), Number(values.longitude)];\n      }\n      if (values.elevation) {\n        this._elevation = String(values.elevation);\n      }\n      if (values.unit_system) {\n        this._unitSystem = values.unit_system;\n      }\n      if (values.time_zone) {\n        this._timeZone = values.time_zone;\n      }\n    } catch (err) {\n      alert(`Failed to detect location information: ${err.message}`);\n    } finally {\n      this._working = false;\n    }\n  }\n\n  private async _save(ev) {\n    ev.preventDefault();\n    this._working = true;\n    try {\n      const location = this._locationValue;\n      await saveCoreConfig(this.hass, {\n        location_name: this._nameValue,\n        latitude: location[0],\n        longitude: location[1],\n        elevation: Number(this._elevationValue),\n        unit_system: this._unitSystemValue,\n        time_zone: this._timeZoneValue || \"UTC\",\n      });\n      const result = await onboardCoreConfigStep(this.hass);\n      fireEvent(this, \"onboarding-step\", {\n        type: \"core_config\",\n        result,\n      });\n    } catch (err) {\n      this._working = false;\n      alert(\"FAIL\");\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .row {\n        display: flex;\n        flex-direction: row;\n        margin: 0 -8px;\n        align-items: center;\n      }\n\n      .secondary {\n        color: var(--secondary-text-color);\n      }\n\n      .flex {\n        flex: 1;\n      }\n\n      .middle-text {\n        margin: 24px 0;\n      }\n\n      .row > * {\n        margin: 0 8px;\n      }\n      .footer {\n        margin-top: 16px;\n        text-align: right;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"onboarding-core-config\": OnboardingCoreConfig;\n  }\n}\n"],"sourceRoot":""}