{"version":3,"sources":["webpack:///./src/common/config/is_component_loaded.ts","webpack:///./src/data/cloud.ts","webpack:///./src/common/dom/media_query.ts","webpack:///./src/panels/config/ha-panel-config.ts"],"names":["isComponentLoaded","hass","component","config","components","indexOf","__webpack_require__","d","__webpack_exports__","fetchCloudStatus","callWS","type","createCloudhook","webhookId","webhook_id","deleteCloudhook","connectCloudRemote","disconnectCloudRemote","fetchCloudSubscriptionInfo","updateCloudPref","prefs","Object","tslib__WEBPACK_IMPORTED_MODULE_0__","updateCloudGoogleEntityConfig","entityId","values","entity_id","cloudSyncGoogleAssistant","callApi","updateCloudAlexaEntityConfig","listenMediaQuery","mediaQuery","matchesChanged","mql","matchMedia","listener","e","matches","addListener","removeListener","_super","HaPanelConfig","_this","apply","this","arguments","routerOptions","defaultPage","cacheAll","preloadAll","routes","area_registry","tag","load","then","bind","automation","Promise","all","cloud","core","devices","server_control","customize","dashboard","entity_registry","integrations","person","script","users","zha","zwave","_wideSidebar","_wide","_listeners","tslib_es6","prototype","connectedCallback","call","push","frontend","connection","subscribe","coreUserData","_coreUserData","disconnectedCallback","length","pop","firstUpdated","changedProps","is_component_loaded","_updateCloudStatus","addEventListener","updatePageEl","el","showAdvanced","isWide","dockedSidebar","setProperties","route","routeTail","narrow","cloudStatus","_cloudStatus","_a","_b","sent","setTimeout","lit_element","hass_router_page"],"mappings":"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","file":"chunk.231be854b9a289e0d4a5.js","sourcesContent":["import { HomeAssistant } from \"../../types\";\n\n/** Return if a component is loaded. */\nexport default function isComponentLoaded(\n  hass: HomeAssistant,\n  component: string\n): boolean {\n  return hass && hass.config.components.indexOf(component) !== -1;\n}\n","import { HomeAssistant } from \"../types\";\nimport { EntityFilter } from \"../common/entity/entity_filter\";\n\ninterface CloudStatusBase {\n  logged_in: boolean;\n  cloud: \"disconnected\" | \"connecting\" | \"connected\";\n}\n\nexport interface GoogleEntityConfig {\n  should_expose?: boolean;\n  override_name?: string;\n  aliases?: string[];\n  disable_2fa?: boolean;\n}\n\nexport interface AlexaEntityConfig {\n  should_expose?: boolean;\n}\n\nexport interface CertificateInformation {\n  common_name: string;\n  expire_date: string;\n  fingerprint: string;\n}\n\nexport interface CloudPreferences {\n  google_enabled: boolean;\n  alexa_enabled: boolean;\n  remote_enabled: boolean;\n  google_secure_devices_pin: string | undefined;\n  cloudhooks: { [webhookId: string]: CloudWebhook };\n  google_entity_configs: {\n    [entityId: string]: GoogleEntityConfig;\n  };\n  alexa_entity_configs: {\n    [entityId: string]: AlexaEntityConfig;\n  };\n  alexa_report_state: boolean;\n  google_report_state: boolean;\n}\n\nexport type CloudStatusLoggedIn = CloudStatusBase & {\n  email: string;\n  google_entities: EntityFilter;\n  google_domains: string[];\n  alexa_entities: EntityFilter;\n  prefs: CloudPreferences;\n  remote_domain: string | undefined;\n  remote_connected: boolean;\n  remote_certificate: undefined | CertificateInformation;\n};\n\nexport type CloudStatus = CloudStatusBase | CloudStatusLoggedIn;\n\nexport interface SubscriptionInfo {\n  human_description: string;\n}\n\nexport interface CloudWebhook {\n  webhook_id: string;\n  cloudhook_id: string;\n  cloudhook_url: string;\n  managed?: boolean;\n}\n\nexport const fetchCloudStatus = (hass: HomeAssistant) =>\n  hass.callWS<CloudStatus>({ type: \"cloud/status\" });\n\nexport const createCloudhook = (hass: HomeAssistant, webhookId: string) =>\n  hass.callWS<CloudWebhook>({\n    type: \"cloud/cloudhook/create\",\n    webhook_id: webhookId,\n  });\n\nexport const deleteCloudhook = (hass: HomeAssistant, webhookId: string) =>\n  hass.callWS({\n    type: \"cloud/cloudhook/delete\",\n    webhook_id: webhookId,\n  });\n\nexport const connectCloudRemote = (hass: HomeAssistant) =>\n  hass.callWS({\n    type: \"cloud/remote/connect\",\n  });\n\nexport const disconnectCloudRemote = (hass: HomeAssistant) =>\n  hass.callWS({\n    type: \"cloud/remote/disconnect\",\n  });\n\nexport const fetchCloudSubscriptionInfo = (hass: HomeAssistant) =>\n  hass.callWS<SubscriptionInfo>({ type: \"cloud/subscription\" });\n\nexport const updateCloudPref = (\n  hass: HomeAssistant,\n  prefs: {\n    google_enabled?: CloudPreferences[\"google_enabled\"];\n    alexa_enabled?: CloudPreferences[\"alexa_enabled\"];\n    alexa_report_state?: CloudPreferences[\"alexa_report_state\"];\n    google_report_state?: CloudPreferences[\"google_report_state\"];\n    google_secure_devices_pin?: CloudPreferences[\"google_secure_devices_pin\"];\n  }\n) =>\n  hass.callWS({\n    type: \"cloud/update_prefs\",\n    ...prefs,\n  });\n\nexport const updateCloudGoogleEntityConfig = (\n  hass: HomeAssistant,\n  entityId: string,\n  values: GoogleEntityConfig\n) =>\n  hass.callWS<GoogleEntityConfig>({\n    type: \"cloud/google_assistant/entities/update\",\n    entity_id: entityId,\n    ...values,\n  });\n\nexport const cloudSyncGoogleAssistant = (hass: HomeAssistant) =>\n  hass.callApi(\"POST\", \"cloud/google_actions/sync\");\n\nexport const updateCloudAlexaEntityConfig = (\n  hass: HomeAssistant,\n  entityId: string,\n  values: AlexaEntityConfig\n) =>\n  hass.callWS<AlexaEntityConfig>({\n    type: \"cloud/alexa/entities/update\",\n    entity_id: entityId,\n    ...values,\n  });\n","/**\n * Attach a media query. Listener is called right away and when it matches.\n * @param mediaQuery media query to match.\n * @param listener listener to call when media query changes between match/unmatch\n * @returns function to remove the listener.\n */\nexport const listenMediaQuery = (\n  mediaQuery: string,\n  matchesChanged: (matches: boolean) => void\n) => {\n  const mql = matchMedia(mediaQuery);\n  const listener = (e) => matchesChanged(e.matches);\n  mql.addListener(listener);\n  matchesChanged(mql.matches);\n  return () => mql.removeListener(listener);\n};\n","import { property, PropertyValues, customElement } from \"lit-element\";\nimport \"../../layouts/hass-loading-screen\";\nimport isComponentLoaded from \"../../common/config/is_component_loaded\";\nimport { HomeAssistant } from \"../../types\";\nimport { CloudStatus, fetchCloudStatus } from \"../../data/cloud\";\nimport { listenMediaQuery } from \"../../common/dom/media_query\";\nimport { HassRouterPage, RouterOptions } from \"../../layouts/hass-router-page\";\nimport {\n  CoreFrontendUserData,\n  getOptimisticFrontendUserDataCollection,\n} from \"../../data/frontend\";\nimport { PolymerElement } from \"@polymer/polymer\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"ha-refresh-cloud-status\": undefined;\n  }\n}\n\n@customElement(\"ha-panel-config\")\nclass HaPanelConfig extends HassRouterPage {\n  @property() public hass!: HomeAssistant;\n  @property() public narrow!: boolean;\n\n  protected routerOptions: RouterOptions = {\n    defaultPage: \"dashboard\",\n    cacheAll: true,\n    preloadAll: true,\n    routes: {\n      area_registry: {\n        tag: \"ha-config-area-registry\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-area-registry\" */ \"./area_registry/ha-config-area-registry\"),\n      },\n      automation: {\n        tag: \"ha-config-automation\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-automation\" */ \"./automation/ha-config-automation\"),\n      },\n      cloud: {\n        tag: \"ha-config-cloud\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-cloud\" */ \"./cloud/ha-config-cloud\"),\n      },\n      core: {\n        tag: \"ha-config-core\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-core\" */ \"./core/ha-config-core\"),\n      },\n      devices: {\n        tag: \"ha-config-devices\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-devices\" */ \"./devices/ha-config-devices\"),\n      },\n      server_control: {\n        tag: \"ha-config-server-control\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-server-control\" */ \"./server_control/ha-config-server-control\"),\n      },\n      customize: {\n        tag: \"ha-config-customize\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-customize\" */ \"./customize/ha-config-customize\"),\n      },\n      dashboard: {\n        tag: \"ha-config-dashboard\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-dashboard\" */ \"./dashboard/ha-config-dashboard\"),\n      },\n      entity_registry: {\n        tag: \"ha-config-entity-registry\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-entity-registry\" */ \"./entity_registry/ha-config-entity-registry\"),\n      },\n      integrations: {\n        tag: \"ha-config-integrations\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-integrations\" */ \"./integrations/ha-config-integrations\"),\n      },\n      person: {\n        tag: \"ha-config-person\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-person\" */ \"./person/ha-config-person\"),\n      },\n      script: {\n        tag: \"ha-config-script\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-script\" */ \"./script/ha-config-script\"),\n      },\n      users: {\n        tag: \"ha-config-users\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-users\" */ \"./users/ha-config-users\"),\n      },\n      zha: {\n        tag: \"zha-config-panel\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-zha\" */ \"./zha/zha-config-panel\"),\n      },\n      zwave: {\n        tag: \"ha-config-zwave\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-zwave\" */ \"./zwave/ha-config-zwave\"),\n      },\n    },\n  };\n\n  @property() private _wideSidebar: boolean = false;\n  @property() private _wide: boolean = false;\n  @property() private _coreUserData?: CoreFrontendUserData;\n  @property() private _cloudStatus?: CloudStatus;\n\n  private _listeners: Array<() => void> = [];\n\n  public connectedCallback() {\n    super.connectedCallback();\n    this._listeners.push(\n      listenMediaQuery(\"(min-width: 1040px)\", (matches) => {\n        this._wide = matches;\n      })\n    );\n    this._listeners.push(\n      listenMediaQuery(\"(min-width: 1296px)\", (matches) => {\n        this._wideSidebar = matches;\n      })\n    );\n    this._listeners.push(\n      getOptimisticFrontendUserDataCollection(\n        this.hass.connection,\n        \"core\"\n      ).subscribe((coreUserData) => {\n        this._coreUserData = coreUserData || {};\n      })\n    );\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    while (this._listeners.length) {\n      this._listeners.pop()!();\n    }\n  }\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n    if (isComponentLoaded(this.hass, \"cloud\")) {\n      this._updateCloudStatus();\n    }\n    this.addEventListener(\"ha-refresh-cloud-status\", () =>\n      this._updateCloudStatus()\n    );\n  }\n\n  protected updatePageEl(el) {\n    const showAdvanced = !!(\n      this._coreUserData && this._coreUserData.showAdvanced\n    );\n    const isWide =\n      this.hass.dockedSidebar === \"docked\" ? this._wideSidebar : this._wide;\n\n    if (\"setProperties\" in el) {\n      // As long as we have Polymer panels\n      (el as PolymerElement).setProperties({\n        route: this.routeTail,\n        hass: this.hass,\n        showAdvanced,\n        isWide,\n        narrow: this.narrow,\n        cloudStatus: this._cloudStatus,\n      });\n    } else {\n      el.route = this.routeTail;\n      el.hass = this.hass;\n      el.showAdvanced = showAdvanced;\n      el.isWide = isWide;\n      el.narrow = this.narrow;\n      el.cloudStatus = this._cloudStatus;\n    }\n  }\n\n  private async _updateCloudStatus() {\n    this._cloudStatus = await fetchCloudStatus(this.hass);\n\n    if (this._cloudStatus.cloud === \"connecting\") {\n      setTimeout(() => this._updateCloudStatus(), 5000);\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-panel-config\": HaPanelConfig;\n  }\n}\n"],"sourceRoot":""}