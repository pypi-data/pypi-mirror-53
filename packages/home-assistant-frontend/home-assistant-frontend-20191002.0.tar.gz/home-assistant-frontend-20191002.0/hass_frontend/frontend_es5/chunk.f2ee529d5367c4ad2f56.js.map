{"version":3,"sources":["webpack:///./src/common/dom/setup-leaflet-map.ts","webpack:///./src/data/core.ts","webpack:///./src/components/timezone-datalist.ts","webpack:///./src/components/map/ha-location-editor.ts","webpack:///./src/onboarding/onboarding-core-config.ts"],"names":["setupLeafletMap","mapElement","darkMode","parentNode","Error","__webpack_require__","e","then","t","bind","Leaflet","_a","sent","Icon","Default","imagePath","map","style","document","createElement","setAttribute","appendChild","setView","createTileLayer","addTo","leaflet","tileLayer","Browser","retina","attribution","subdomains","minZoom","maxZoom","saveCoreConfig","hass","values","callWS","Object","tslib__WEBPACK_IMPORTED_MODULE_0__","type","detectCoreConfig","d","__webpack_exports__","createTimezoneListEl","google_timezones_json__WEBPACK_IMPORTED_MODULE_0__","google_timezones_json__WEBPACK_IMPORTED_MODULE_0___default","n","list","id","keys","a","forEach","key","option","value","innerHTML","_super","LocationEditor","_this","apply","this","arguments","fitZoom","prototype","fitMap","_leafletMap","location","render","lit_element__WEBPACK_IMPORTED_MODULE_1__","templateObject_1","firstUpdated","changedProps","call","_initMap","updated","_updateMarker","_ignoreFitToMap","undefined","defineProperty","shadowRoot","querySelector","_common_dom_setup_leaflet_map__WEBPACK_IMPORTED_MODULE_2__","_mapEl","_b","addEventListener","ev","_updateLocation","latlng","invalidateSize","lat","lng","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_3__","bubbles","_locationMarker","setLatLng","marker","draggable","target","getLatLng","addLayer","remove","templateObject_2","amsterdam","OnboardingCoreConfig","_working","onboardingLocalize","user","name","_nameValue","_handleChange","_detect","_locationValue","_locationChanged","localize","_timeZoneValue","_elevationValue","_unitSystemValue","_unitSystemChanged","_save","setTimeout","focus","keyCode","inputElement","_components_timezone_datalist__WEBPACK_IMPORTED_MODULE_9__","_name","_location","_elevation","_timeZone","_unitSystem","currentTarget","detail","_data_core__WEBPACK_IMPORTED_MODULE_6__","latitude","longitude","Number","elevation","String","unit_system","time_zone","alert","err_1","message","preventDefault","location_1","location_name","_data_onboarding__WEBPACK_IMPORTED_MODULE_7__","result","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_8__"],"mappings":"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","file":"chunk.f2ee529d5367c4ad2f56.js","sourcesContent":["import { Map } from \"leaflet\";\n\n// Sets up a Leaflet map on the provided DOM element\nexport type LeafletModuleType = typeof import(\"leaflet\");\n\nexport const setupLeafletMap = async (\n  mapElement: HTMLElement,\n  darkMode = false\n): Promise<[Map, LeafletModuleType]> => {\n  if (!mapElement.parentNode) {\n    throw new Error(\"Cannot setup Leaflet map on disconnected element\");\n  }\n  // tslint:disable-next-line\n  const Leaflet = (await import(/* webpackChunkName: \"leaflet\" */ \"leaflet\")) as LeafletModuleType;\n  Leaflet.Icon.Default.imagePath = \"/static/images/leaflet/images/\";\n\n  const map = Leaflet.map(mapElement);\n  const style = document.createElement(\"link\");\n  style.setAttribute(\"href\", \"/static/images/leaflet/leaflet.css\");\n  style.setAttribute(\"rel\", \"stylesheet\");\n  mapElement.parentNode.appendChild(style);\n  map.setView([52.3731339, 4.8903147], 13);\n  createTileLayer(Leaflet, darkMode).addTo(map);\n\n  return [map, Leaflet];\n};\n\nexport const createTileLayer = (\n  leaflet: LeafletModuleType,\n  darkMode: boolean\n) => {\n  return leaflet.tileLayer(\n    `https://{s}.basemaps.cartocdn.com/${\n      darkMode ? \"dark_all\" : \"light_all\"\n    }/{z}/{x}/{y}${leaflet.Browser.retina ? \"@2x.png\" : \".png\"}`,\n    {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>, &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n      subdomains: \"abcd\",\n      minZoom: 0,\n      maxZoom: 20,\n    }\n  );\n};\n","import { HomeAssistant } from \"../types\";\nimport { HassConfig } from \"home-assistant-js-websocket\";\n\nexport interface ConfigUpdateValues {\n  location_name: string;\n  latitude: number;\n  longitude: number;\n  elevation: number;\n  unit_system: \"metric\" | \"imperial\";\n  time_zone: string;\n}\n\nexport const saveCoreConfig = (\n  hass: HomeAssistant,\n  values: Partial<ConfigUpdateValues>\n) =>\n  hass.callWS<HassConfig>({\n    type: \"config/core/update\",\n    ...values,\n  });\n\nexport const detectCoreConfig = (hass: HomeAssistant) =>\n  hass.callWS<Partial<ConfigUpdateValues>>({\n    type: \"config/core/detect\",\n  });\n","import timezones from \"google-timezones-json\";\n\nexport const createTimezoneListEl = () => {\n  const list = document.createElement(\"datalist\");\n  list.id = \"timezones\";\n  Object.keys(timezones).forEach((key) => {\n    const option = document.createElement(\"option\");\n    option.value = key;\n    option.innerHTML = timezones[key];\n    list.appendChild(option);\n  });\n  return list;\n};\n","import {\n  LitElement,\n  property,\n  TemplateResult,\n  html,\n  CSSResult,\n  css,\n  customElement,\n  PropertyValues,\n} from \"lit-element\";\nimport { Marker, Map, LeafletMouseEvent, DragEndEvent, LatLng } from \"leaflet\";\nimport {\n  setupLeafletMap,\n  LeafletModuleType,\n} from \"../../common/dom/setup-leaflet-map\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\n@customElement(\"ha-location-editor\")\nclass LocationEditor extends LitElement {\n  @property() public location?: [number, number];\n  public fitZoom = 16;\n\n  private _ignoreFitToMap?: [number, number];\n\n  // tslint:disable-next-line\n  private Leaflet?: LeafletModuleType;\n  private _leafletMap?: Map;\n  private _locationMarker?: Marker;\n\n  public fitMap(): void {\n    if (!this._leafletMap || !this.location) {\n      return;\n    }\n    this._leafletMap.setView(this.location, this.fitZoom);\n  }\n\n  protected render(): TemplateResult | void {\n    return html`\n      <div id=\"map\"></div>\n    `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues): void {\n    super.firstUpdated(changedProps);\n    this._initMap();\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n\n    // Still loading.\n    if (!this.Leaflet) {\n      return;\n    }\n\n    this._updateMarker();\n    if (!this._ignoreFitToMap || this._ignoreFitToMap !== this.location) {\n      this.fitMap();\n    }\n    this._ignoreFitToMap = undefined;\n  }\n\n  private get _mapEl(): HTMLDivElement {\n    return this.shadowRoot!.querySelector(\"div\")!;\n  }\n\n  private async _initMap(): Promise<void> {\n    [this._leafletMap, this.Leaflet] = await setupLeafletMap(this._mapEl);\n    this._leafletMap.addEventListener(\n      \"click\",\n      // @ts-ignore\n      (ev: LeafletMouseEvent) => this._updateLocation(ev.latlng)\n    );\n    this._updateMarker();\n    this.fitMap();\n    this._leafletMap.invalidateSize();\n  }\n\n  private _updateLocation(latlng: LatLng) {\n    this.location = this._ignoreFitToMap = [latlng.lat, latlng.lng];\n    fireEvent(this, \"change\", undefined, { bubbles: false });\n  }\n\n  private _updateMarker(): void {\n    if (!this.location) {\n      if (this._locationMarker) {\n        this._locationMarker.remove();\n        this._locationMarker = undefined;\n      }\n      return;\n    }\n\n    if (this._locationMarker) {\n      this._locationMarker.setLatLng(this.location);\n      return;\n    }\n    this._locationMarker = this.Leaflet!.marker(this.location, {\n      draggable: true,\n    });\n    this._locationMarker.addEventListener(\n      \"dragend\",\n      // @ts-ignore\n      (ev: DragEndEvent) => this._updateLocation(ev.target.getLatLng())\n    );\n    this._leafletMap!.addLayer(this._locationMarker);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        height: 300px;\n      }\n      #map {\n        height: 100%;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-location-editor\": LocationEditor;\n  }\n}\n","import {\n  LitElement,\n  customElement,\n  property,\n  TemplateResult,\n  html,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport \"@material/mwc-button/mwc-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-radio-group/paper-radio-group\";\nimport \"@polymer/paper-radio-button/paper-radio-button\";\n// tslint:disable-next-line: no-duplicate-imports\nimport { PaperInputElement } from \"@polymer/paper-input/paper-input\";\nimport { HomeAssistant } from \"../types\";\nimport {\n  ConfigUpdateValues,\n  detectCoreConfig,\n  saveCoreConfig,\n} from \"../data/core\";\nimport { PolymerChangedEvent } from \"../polymer-types\";\nimport { onboardCoreConfigStep } from \"../data/onboarding\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { LocalizeFunc } from \"../common/translations/localize\";\nimport { createTimezoneListEl } from \"../components/timezone-datalist\";\nimport \"../components/map/ha-location-editor\";\n\nconst amsterdam = [52.3731339, 4.8903147];\n\n@customElement(\"onboarding-core-config\")\nclass OnboardingCoreConfig extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public onboardingLocalize!: LocalizeFunc;\n\n  @property() private _working = false;\n\n  @property() private _name!: ConfigUpdateValues[\"location_name\"];\n  @property() private _location!: [number, number];\n  @property() private _elevation!: string;\n  @property() private _unitSystem!: ConfigUpdateValues[\"unit_system\"];\n  @property() private _timeZone!: string;\n\n  protected render(): TemplateResult | void {\n    return html`\n      <p>\n        ${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.intro\",\n          \"name\",\n          this.hass.user!.name\n        )}\n      </p>\n\n      <paper-input\n        .label=${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.location_name\"\n        )}\n        name=\"name\"\n        .disabled=${this._working}\n        .value=${this._nameValue}\n        @value-changed=${this._handleChange}\n      ></paper-input>\n\n      <div class=\"middle-text\">\n        <p>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.intro_location\"\n          )}\n        </p>\n\n        <div class=\"row\">\n          <div>\n            ${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.core-config.intro_location_detect\"\n            )}\n          </div>\n          <mwc-button @click=${this._detect}>\n            ${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.core-config.button_detect\"\n            )}\n          </mwc-button>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <ha-location-editor\n          class=\"flex\"\n          .location=${this._locationValue}\n          .fitZoom=${14}\n          @change=${this._locationChanged}\n        ></ha-location-editor>\n      </div>\n\n      <div class=\"row\">\n        <paper-input\n          class=\"flex\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.time_zone\"\n          )}\n          name=\"timeZone\"\n          list=\"timezones\"\n          .disabled=${this._working}\n          .value=${this._timeZoneValue}\n          @value-changed=${this._handleChange}\n        ></paper-input>\n\n        <paper-input\n          class=\"flex\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.elevation\"\n          )}\n          name=\"elevation\"\n          type=\"number\"\n          .disabled=${this._working}\n          .value=${this._elevationValue}\n          @value-changed=${this._handleChange}\n        >\n          <span slot=\"suffix\">\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.elevation_meters\"\n            )}\n          </span>\n        </paper-input>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"flex\">\n          ${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.unit_system\"\n          )}\n        </div>\n        <paper-radio-group\n          class=\"flex\"\n          .selected=${this._unitSystemValue}\n          @selected-changed=${this._unitSystemChanged}\n        >\n          <paper-radio-button name=\"metric\" .disabled=${this._working}>\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.unit_system_metric\"\n            )}\n            <div class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.panel.config.core.section.core.core_config.metric_example\"\n              )}\n            </div>\n          </paper-radio-button>\n          <paper-radio-button name=\"imperial\" .disabled=${this._working}>\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.unit_system_imperial\"\n            )}\n            <div class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.panel.config.core.section.core.core_config.imperial_example\"\n              )}\n            </div>\n          </paper-radio-button>\n        </paper-radio-group>\n      </div>\n\n      <div class=\"footer\">\n        <mwc-button @click=${this._save} .disabled=${this._working}>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.finish\"\n          )}\n        </mwc-button>\n      </div>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    setTimeout(\n      () => this.shadowRoot!.querySelector(\"paper-input\")!.focus(),\n      100\n    );\n    this.addEventListener(\"keypress\", (ev) => {\n      if (ev.keyCode === 13) {\n        this._save(ev);\n      }\n    });\n    const input = this.shadowRoot!.querySelector(\n      \"[name=timeZone]\"\n    ) as PaperInputElement;\n    input.inputElement.appendChild(createTimezoneListEl());\n  }\n\n  private get _nameValue() {\n    return this._name !== undefined\n      ? this._name\n      : this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.location_name_default\"\n        );\n  }\n\n  private get _locationValue() {\n    return this._location || amsterdam;\n  }\n\n  private get _elevationValue() {\n    return this._elevation !== undefined ? this._elevation : 0;\n  }\n\n  private get _timeZoneValue() {\n    return this._timeZone;\n  }\n\n  private get _unitSystemValue() {\n    return this._unitSystem !== undefined ? this._unitSystem : \"metric\";\n  }\n\n  private _handleChange(ev: PolymerChangedEvent<string>) {\n    const target = ev.currentTarget as PaperInputElement;\n    this[`_${target.name}`] = target.value;\n  }\n\n  private _locationChanged(ev) {\n    this._location = ev.currentTarget.location;\n  }\n\n  private _unitSystemChanged(\n    ev: PolymerChangedEvent<ConfigUpdateValues[\"unit_system\"]>\n  ) {\n    this._unitSystem = ev.detail.value;\n  }\n\n  private async _detect() {\n    this._working = true;\n    try {\n      const values = await detectCoreConfig(this.hass);\n      if (values.latitude && values.longitude) {\n        this._location = [Number(values.latitude), Number(values.longitude)];\n      }\n      if (values.elevation) {\n        this._elevation = String(values.elevation);\n      }\n      if (values.unit_system) {\n        this._unitSystem = values.unit_system;\n      }\n      if (values.time_zone) {\n        this._timeZone = values.time_zone;\n      }\n    } catch (err) {\n      alert(`Failed to detect location information: ${err.message}`);\n    } finally {\n      this._working = false;\n    }\n  }\n\n  private async _save(ev) {\n    ev.preventDefault();\n    this._working = true;\n    try {\n      const location = this._locationValue;\n      await saveCoreConfig(this.hass, {\n        location_name: this._nameValue,\n        latitude: location[0],\n        longitude: location[1],\n        elevation: Number(this._elevationValue),\n        unit_system: this._unitSystemValue,\n        time_zone: this._timeZoneValue || \"UTC\",\n      });\n      const result = await onboardCoreConfigStep(this.hass);\n      fireEvent(this, \"onboarding-step\", {\n        type: \"core_config\",\n        result,\n      });\n    } catch (err) {\n      this._working = false;\n      alert(\"FAIL\");\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .row {\n        display: flex;\n        flex-direction: row;\n        margin: 0 -8px;\n        align-items: center;\n      }\n\n      .secondary {\n        color: var(--secondary-text-color);\n      }\n\n      .flex {\n        flex: 1;\n      }\n\n      .middle-text {\n        margin: 24px 0;\n      }\n\n      .row > * {\n        margin: 0 8px;\n      }\n      .footer {\n        margin-top: 16px;\n        text-align: right;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"onboarding-core-config\": OnboardingCoreConfig;\n  }\n}\n"],"sourceRoot":""}