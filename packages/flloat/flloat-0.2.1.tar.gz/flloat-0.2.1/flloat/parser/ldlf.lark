start: ldlf_formula
ldlf_formula:  ldlf_wrapped
             | ldlf_equivalence
             | ldlf_implication
             | ldlf_or
             | ldlf_and
             | ldlf_box
             | ldlf_diamond
             | ldlf_not
             | ldlf_atom


ldlf_wrapped: LSEPARATOR ldlf_formula RSEPARATOR
ldlf_equivalence.6: ldlf_formula EQUIVALENCE ldlf_formula
ldlf_implication.5: ldlf_formula IMPLY ldlf_formula
ldlf_or.4: ldlf_formula OR ldlf_formula
ldlf_and.3: ldlf_formula AND ldlf_formula
ldlf_box.2: BOXLSEPARATOR regular_expression BOXRSEPARATOR ldlf_formula
ldlf_diamond.2: DIAMONDLSEPARATOR regular_expression DIAMONDRSEPARATOR ldlf_formula
ldlf_not.1: NOT ldlf_formula
ldlf_atom:   ldlf_tt
           | ldlf_ff
           | ldlf_last
           | ldlf_end
           | ldlf_true
           | ldlf_false
           | ldlf_symbol

ldlf_tt: TT
ldlf_ff: FF
ldlf_last: LAST
ldlf_end: END
ldlf_true: true_prop
ldlf_false: false_prop
ldlf_symbol: string

regular_expression: wrapped_regular_expression
                  | regular_expression_union
                  | regular_expression_sequence
                  | regular_expression_test
                  | regular_expression_star
                  | regular_expression_propositional

wrapped_regular_expression: LSEPARATOR regular_expression RSEPARATOR
regular_expression_union.3: regular_expression UNION regular_expression
regular_expression_sequence.3: regular_expression SEQ regular_expression
regular_expression_test.2: ldlf_formula TEST
regular_expression_star.2: regular_expression STAR
regular_expression_propositional.1: propositional_formula


%import common.ESCAPED_STRING
WHITESPACE: (" " | "\n")+
BOXLSEPARATOR: "["
BOXRSEPARATOR: "]"
DIAMONDLSEPARATOR: "<"
DIAMONDRSEPARATOR: ">"
TT: "tt"
FF: "ff"
LAST: "last"
END: "end"
UNION: "+"
SEQ: ";"
TEST: "?"
STAR: "*"
%ignore WHITESPACE
%import .pl.start -> propositional_formula
%import .pl.string -> string
%import .pl.true_prop -> true_prop
%import .pl.false_prop -> false_prop
%import .pl.EQUIVALENCE -> EQUIVALENCE
%import .pl.IMPLY -> IMPLY
%import .pl.OR -> OR
%import .pl.AND -> AND
%import .pl.NOT -> NOT
%import .pl.LSEPARATOR -> LSEPARATOR
%import .pl.RSEPARATOR -> RSEPARATOR

