start: ltlf_formula
ltlf_formula: ltlf_wrapped
            | ltlf_equivalence
            | ltlf_implication
            | ltlf_or
            | ltlf_and
            | ltlf_until
            | ltlf_release
            | ltlf_always
            | ltlf_eventually
            | ltlf_next
            | ltlf_weak_next
            | ltlf_not
            | ltlf_atom

ltlf_wrapped:     LSEPARATOR ltlf_formula RSEPARATOR
ltlf_equivalence.8: ltlf_formula EQUIVALENCE ltlf_formula
ltlf_implication.7: ltlf_formula IMPLY ltlf_formula
ltlf_or.6:          ltlf_formula OR ltlf_formula
ltlf_and.5:         ltlf_formula AND ltlf_formula
ltlf_until.4:       ltlf_formula UNTIL ltlf_formula
ltlf_release.4:     ltlf_formula RELEASE ltlf_formula
ltlf_always.3:      ALWAYS ltlf_formula
ltlf_eventually.3:  EVENTUALLY ltlf_formula
ltlf_next.2:        NEXT ltlf_formula
ltlf_weak_next.2:   WEAK_NEXT ltlf_formula
ltlf_not.1:         NOT ltlf_formula
ltlf_atom:        ltlf_symbol
         |        ltlf_true
         |        ltlf_false

ltlf_true: true_prop
ltlf_false: false_prop
ltlf_symbol: string
UNTIL: "U"
RELEASE: "R"
ALWAYS: "G"
EVENTUALLY: "F"
NEXT: "X"
WEAK_NEXT: "WX"
END: "END"|"end"|"End"
LAST: "LAST"|"last"|"Last"

WHITESPACE: (" " | "\n")+
%ignore WHITESPACE
%import .pl.string -> string
%import .pl.true_prop -> true_prop
%import .pl.false_prop -> false_prop
%import .pl.NOT -> NOT
%import .pl.OR -> OR
%import .pl.AND -> AND
%import .pl.EQUIVALENCE -> EQUIVALENCE
%import .pl.IMPLY -> IMPLY
%import .pl.LSEPARATOR -> LSEPARATOR
%import .pl.RSEPARATOR -> RSEPARATOR
