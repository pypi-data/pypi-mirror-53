Metadata-Version: 1.2
Name: solcore
Version: 5.6.0
Summary: Python-based solar cell simulator
Home-page: https://github.com/dalonsoa/solcore5
Author: The Quantum Photovoltaics Group
Author-email: d.alonso-alvarez@imperial.ac.uk
License: GNU LGPL
Download-URL: https://github.com/dalonsoa/solcore5/archive/v5.6.0.tar.gz
Project-URL: Documentation, http://solcore5.readthedocs.io
Project-URL: Solcore research paper, https://doi.org/10.1007/s10825-018-1171-3
Description: .. image:: https://mybinder.org/badge_logo.svg
           :target: https://mybinder.org/v2/gh/qpv-research-group/solcore5/sunglass
        
        .. image:: https://zenodo.org/badge/DOI/10.5281/zenodo.1185316.svg
           :target: https://doi.org/10.5281/zenodo.1185316
        
        .. image:: https://img.shields.io/badge/License-LGPLv3-blue.svg
           :target: http://www.gnu.org/licenses/lgpl.html
           
        .. image:: http://readthedocs.org/projects/solcore5/badge/?version=latest
           :target: http://solcore5.readthedocs.io/en/latest/?badge=latest
           :alt: Documentation Status
           
        .. image:: https://travis-ci.com/dalonsoa/solcore5.svg?branch=master
           :target: https://travis-ci.com/dalonsoa/solcore5
        
        .. image:: https://coveralls.io/repos/github/dalonsoa/solcore5/badge.svg
           :target: https://coveralls.io/github/dalonsoa/solcore5
        
        
        Solcore
        =======
        
        **Solcore** was born as a modular set of tools, written (almost) entirely in Python 3, to address some of the task we had to solve more. With time, however, it has evolved as a complete semiconductor solver able of modelling the optical and electrical properties of a wide range of solar cells, from quantum well devices to multi-junction solar cells.
        
        Please, visit `Solcore's Documentation <http://docs.solcore.solar>`__, the `Tutorial <docs/source/Examples/tutorial.rst>`__ for a step-by-step example of how to use *Solcore* to model a solar cell and also check the `Examples folder <examples>`__ for more specific information and examples of usage.
        
        .. figure:: docs/source/Infographics.jpg
           :alt: Overview of Solcore
        
        Contributors
        ------------
        
        Solcore is the result of many years of developement by many people,
        trying to put together in a consistent way the tools that the `Quantum
        Photovoltaics Group at Imperial College
        London <https://www.imperial.ac.uk/quantum-photovoltaics/>`__ needs for
        its research in solar cells and photovoltaics. The list of original contributors
        (hopefully I am not forgetting anyone!) is below, but check the `contributors list <https://github.com/dalonsoa/solcore5/graphs/contributors>`__ for those currently active:
        
        -  Diego Alonso-Álvarez
        -  Thomas Wilson
        -  Phoebe Pearce
        -  Markus Führer
        -  Daniel Farrell
        -  Tomos Thomas
        -  Alvin Chan
        -  Ned Ekins-Daukes
        
        .. |DOI| image:: https://zenodo.org/badge/DOI/10.5281/zenodo.1185316.svg
           :target: https://doi.org/10.5281/zenodo.1185316
        .. |Documentation Status| image:: https://readthedocs.org/projects/solcore5/badge/?version=latest
           :target: http://solcore5.readthedocs.io/en/latest/?badge=latest
        .. |LGPLv3 license| image:: https://img.shields.io/badge/License-LGPLv3-blue.svg
           :target: http://www.gnu.org/licenses/lgpl.html
        
Keywords: photovoltaics modelling physics
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved
Classifier: License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Physics
Requires-Python: >=3.4
