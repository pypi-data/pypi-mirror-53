Metadata-Version: 2.1
Name: openapi_resolver
Version: 0.0.7rc2
Summary: Resolve and bundle openapi v3 specs.
Home-page: https://github.com/ioggstream/openapi-resolver
Author: Roberto Polli
Author-email: robipolli@gmail.com
License: UNKNOWN
Description: # OpenAPI Resolver
        
        [![CircleCI](https://circleci.com/gh/ioggstream/openapi-resolver.svg?style=svg)](https://circleci.com/gh/ioggstream/openapi-resolver)
        [![CodeCov](https://codecov.io/gh/ioggstream/openapi-resolver/branch/master/graph/badge.svg)](https://codecov.io/gh/ioggstream/openapi-resolver)
        
        This module recursively parses openapi specs resolving references.
        
        ## Test
        
        Tests run locally via 
        
                tox
        
        Or via [circleci-local](https://circleci.com/docs/2.0/local-cli/)
        
                circleci build 
        
        
        ## Usage
        
        The module has an embedded script that can be run via
        
                $ python -m openapi_resolver --help
        
                usage: __main__.py [-h] src_file [dst_file]
        
                Recursively resolves and bundles OpenAPI v3 files.
        
                positional arguments:
                  src_file    An OpenAPI v3 yaml file.
                  dst_file    Destination file, default is stdout.
        
                optional arguments:
                  -h, --help  show this help message and exit
        
        To create an openapi bundle from a spec file just run
        
                $ python -m openapi_resolver sample.yaml
        
        You can use this module to normalize two specs before diffing, eg:
        
                $ python -m openapi_resolver one.yaml normal-one.yaml
                $ python -m openapi_resolver two.yaml normal-two.yaml
                $ diff normal-one.yaml normal-two.yaml
        
        ## Use with docker
        
        Build the image with:
        
        ```
        $ docker build --tag openapi-resolver . 
        ```
        
        then run docker mapping the openapi.yaml directory
        to the `/code` volume.
        
        ```
        docker run -it --rm -v $(dirname path-to-openapi.yaml):/code \
            openapi-resolver /code/openapi.yaml /code/bundle.yaml
        ```
        
Keywords: openapi,rest,swagger
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
