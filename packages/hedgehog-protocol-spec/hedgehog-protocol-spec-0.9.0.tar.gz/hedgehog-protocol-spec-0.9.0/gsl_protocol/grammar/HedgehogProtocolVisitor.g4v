visitor HedgehogProtocolVisitor for grammar HedgehogProtocol;

model = Model(
  messages=message*,
  //protos=Proto(path, name, messages),
  //pymodules=PyModule(path, name, messageClasses, complexMessages),
);

message = Message(
  qualifiedName=qualifiedName,
  discriminator=`discriminator`,
  label=`label`,
  docstring=[docstring],
  fields=(field | oneof)*,
  messageClasses=messageClass*,
  //name, proto,
  //requestClasses, replyClasses,
);

field = Field(
  nested=`nested`?,
  repeated=`rep`?,
  fieldType=`fieldType`,
  name=`name`,
  label=`label`,
);

oneof = Oneof(
  name=`name`,
  fields=field*,
);

messageClass = MessageClass(
  direction=direction,
  qualifiedName=qualifiedName,
  params=paramList,
  docstring=[docstring],
  //name, pymodule, message,
);

paramList = (mandatoryParam | repeatedParam | optionalParam)*;
mandatoryParam = MandatoryParam(name=identifier);
repeatedParam = RepeatedParam(name=identifier);
optionalParam = OptionalParam(options=identifier*);

qualifiedName = QualifiedName(
  path=[`path`],
  file=`fileName`,
  name=`name`,
);

qualifiedIdentifier = identifier*;
identifier = .;
number = .;
docstring = .;
string = .;
direction = .;
