Metadata-Version: 2.1
Name: lab
Version: 4.2
Summary: Benchmark your code
Home-page: https://bitbucket.org/jendrikseipp/lab
Author: Jendrik Seipp
Author-email: jendrikseipp@gmail.com
License: GPL3+
Keywords: benchmarks cluster grid
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Scientific/Engineering
Description-Content-Type: text/x-rst
Requires-Dist: matplotlib
Requires-Dist: simplejson

Downward Lab
============

The **Downward Lab** Python package facilitates running experiments for
the `Fast Downward <http://www.fast-downward.org>`_ planning system. It
uses the generic experimentation package **Lab**.

**Lab** is a Python package for running code on a large set of
benchmarks. Experiments can be conducted on a single machine or on a
cluster. The package also contains code for parsing results and creating
reports. Currently, Lab comes bundled with Downward Lab.

**Code**: https://bitbucket.org/jendrikseipp/lab

**Documentation**: https://lab.readthedocs.io

**Cite**: please cite Downward Lab by using

::

    @Misc{seipp-et-al-misc2017,
      author =       "Jendrik Seipp and Florian Pommerening and
                      Silvan Sievers and Malte Helmert",
      title =        "{Downward} {Lab}",
      year =         "2017",
      doi =          "10.5281/zenodo.790461",
      url =          "https://doi.org/10.5281/zenodo.790461",
      howpublished = "\url{https://doi.org/10.5281/zenodo.790461}"
    }


Install Lab in a virtual environment
------------------------------------

We recommend installing Lab in a `Python virtual environment
<https://docs.python.org/3/tutorial/venv.html>`_. This has the advantage
that there are no modifications to the system-wide configuration, and
that you can create multiple environments with different Lab versions
(e.g., for different papers) without conflicts. Using Python 3, you
would proceed like this::

    # Install required packages, including virtualenv.
    sudo apt install mercurial python3 python3-venv

    # Create and activate a Python 3 virtual environment for Lab.
    python3 -m venv lab-venv  # or any other path instead of lab-venv
    source lab-venv/bin/activate

    # Install Lab in the virtual environment.
    pip install lab  # or a specific version with lab==x.y

If you want to install the latest development version and/or need to
change Lab itself, you can clone the Lab repo and install it in the
virtual environment::

    hg clone https://bitbucket.org/jendrikseipp/lab /path/to/lab
    pip install --editable /path/to/lab

The ``--editable`` flag in the last command is optional. It installs the
project in "editable mode", which is needed if you want to change the
Lab source code, since any changes under ``/path/to/lab`` are
immediately reflected in the installed package.

Please note that before running an experiment script you need to
activate the virtual environment with::

    source lab-venv/bin/activate


Install Lab globally
--------------------

Alternatively, you can install Lab and its dependencies globally::

    # Install dependencies.
    sudo apt install mercurial python python-matplotlib python-simplejson
    # Clone Lab repository.
    hg clone https://bitbucket.org/jendrikseipp/lab /path/to/lab

Add to your ``.bashrc`` to make Lab available on the ``PYTHONPATH``::

    export PYTHONPATH=/path/to/lab

Update shell configuration::

    source ~/.bashrc


Notes about requirements
------------------------

* Lab needs Python 2.7 or Python >= 3.5.
* matplotlib is only needed for reports that generate graphs.
* simplejson is optional, but speeds up generating reports.


