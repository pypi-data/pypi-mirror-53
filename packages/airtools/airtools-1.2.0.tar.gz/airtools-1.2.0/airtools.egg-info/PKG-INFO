Metadata-Version: 2.1
Name: airtools
Version: 1.2.0
Summary: Python port of Matlab AIRtools and ReguTools regularization toolbox
Home-page: https://github.com/scivision/airtools
Author: Michael Hirsch, Ph.D.
Author-email: scivision@users.noreply.github.com
License: UNKNOWN
Description: 
        [![Actions Status](https://github.com/scivision/airtools/workflows/ci/badge.svg)](https://github.com/scivision/airtools/actions)
        
        [![PyPi versions](https://img.shields.io/pypi/pyversions/airtools.svg)](https://pypi.python.org/pypi/airtools)
        [![PyPi Download stats](http://pepy.tech/badge/airtools)](http://pepy.tech/project/airtools)
        
        # AIRtools
        
        Limited subset of P.C. Hansen and J. S. JÃ¸rgensen
        [AIRtools 1.0](http://www2.compute.dtu.dk/~pcha/AIRtoolsII/)
        Matlab suite of inversion / regularization tools, along with some ReguTools functions.
        Also includes linear constrained least squares solver using cvxopt in `lsqlin.py`
        
        More function are available in Matlab from
        [AIRtools 2](https://github.com/jakobsj/AIRToolsII).
        
        
        ## Install
        
        ```sh
        python -m pip install -e .
        ```
        
        ## Usage
        
        Just paste the code from each test into your console for the function
        you're interested in. Would you like to submit a pull request for an
        inversion example making a cool plot?
        
        * picard.py: Picard Plot
        * kaczmarz.py  Kaczmarz ART
        * maxent.py: Maximum Entropy Regularization  (from ReguTools)
        * rzr.py: remove unused or little used rows from tomographic projection matrix
        * lsqlin.py: linear constrained least squares solver
        * matlab/logmart.m:  Implementation of log-MART
        * fortran/logmart.f90: log-MART in Fortran
        
        
        ### Examples
        
        [tests/test_all.py](./tests/test_all.py)
        
        ### Tests
        
        Run a comparison of the Python code with the Matlab code in the [matlab](./matlab) directory by:
        
            python airtools/tests/test_octave.py
        
        which runs the Matlab version via
        [Oct2Py](https://blink1073.github.io/oct2py/).
        
Keywords: regularization
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Intended Audience :: End Users/Desktop
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Utilities
Requires-Python: >= 3.5
Description-Content-Type: text/markdown
Provides-Extra: tests
Provides-Extra: lint
