# coding: utf-8

"""
    Cloudera Edge Flow Manager REST API

    This REST API provides remote access to the EFM Server.                                             Endpoints that are marked as [BETA] are subject to change in future releases of the application without backwards compatibility and without a major version change.

    OpenAPI spec version: 1.0.0-SNAPSHOT
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class EventLinks(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'detail': 'Link',
        'source': 'Link',
        'agent_class': 'Link',
        '_self': 'Link',
        'other': 'list[Link]'
    }

    attribute_map = {
        'detail': 'detail',
        'source': 'source',
        'agent_class': 'agentClass',
        '_self': 'self',
        'other': 'other'
    }

    def __init__(self, detail=None, source=None, agent_class=None, _self=None, other=None):
        """
        EventLinks - a model defined in Swagger
        """

        self._detail = None
        self._source = None
        self._agent_class = None
        self.__self = None
        self._other = None

        if detail is not None:
          self.detail = detail
        if source is not None:
          self.source = source
        if agent_class is not None:
          self.agent_class = agent_class
        if _self is not None:
          self._self = _self
        if other is not None:
          self.other = other

    @property
    def detail(self):
        """
        Gets the detail of this EventLinks.
        Link to the event details, if applicable

        :return: The detail of this EventLinks.
        :rtype: Link
        """
        return self._detail

    @detail.setter
    def detail(self, detail):
        """
        Sets the detail of this EventLinks.
        Link to the event details, if applicable

        :param detail: The detail of this EventLinks.
        :type: Link
        """

        self._detail = detail

    @property
    def source(self):
        """
        Gets the source of this EventLinks.
        Link to the source of the event, if applicable

        :return: The source of this EventLinks.
        :rtype: Link
        """
        return self._source

    @source.setter
    def source(self, source):
        """
        Sets the source of this EventLinks.
        Link to the source of the event, if applicable

        :param source: The source of this EventLinks.
        :type: Link
        """

        self._source = source

    @property
    def agent_class(self):
        """
        Gets the agent_class of this EventLinks.
        Link to the event details, if applicable

        :return: The agent_class of this EventLinks.
        :rtype: Link
        """
        return self._agent_class

    @agent_class.setter
    def agent_class(self, agent_class):
        """
        Sets the agent_class of this EventLinks.
        Link to the event details, if applicable

        :param agent_class: The agent_class of this EventLinks.
        :type: Link
        """

        self._agent_class = agent_class

    @property
    def _self(self):
        """
        Gets the _self of this EventLinks.
        Link to this resource entity

        :return: The _self of this EventLinks.
        :rtype: Link
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """
        Sets the _self of this EventLinks.
        Link to this resource entity

        :param _self: The _self of this EventLinks.
        :type: Link
        """

        self.__self = _self

    @property
    def other(self):
        """
        Gets the other of this EventLinks.
        List of other rel links that have been set

        :return: The other of this EventLinks.
        :rtype: list[Link]
        """
        return self._other

    @other.setter
    def other(self, other):
        """
        Sets the other of this EventLinks.
        List of other rel links that have been set

        :param other: The other of this EventLinks.
        :type: list[Link]
        """

        self._other = other

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, EventLinks):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
