# coding: utf-8

"""
    Cloudera Edge Flow Manager REST API

    This REST API provides remote access to the EFM Server.                                             Endpoints that are marked as [BETA] are subject to change in future releases of the application without backwards compatibility and without a major version change.

    OpenAPI spec version: 1.0.0-SNAPSHOT
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class FDFlow(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'flow_metadata': 'FDFlowMetadata',
        'flow_content': 'VersionedProcessGroup',
        'version_info': 'FDVersionInfo',
        'local_flow_revision': 'int'
    }

    attribute_map = {
        'flow_metadata': 'flowMetadata',
        'flow_content': 'flowContent',
        'version_info': 'versionInfo',
        'local_flow_revision': 'localFlowRevision'
    }

    def __init__(self, flow_metadata=None, flow_content=None, version_info=None, local_flow_revision=None):
        """
        FDFlow - a model defined in Swagger
        """

        self._flow_metadata = None
        self._flow_content = None
        self._version_info = None
        self._local_flow_revision = None

        self.flow_metadata = flow_metadata
        self.flow_content = flow_content
        if version_info is not None:
          self.version_info = version_info
        self.local_flow_revision = local_flow_revision

    @property
    def flow_metadata(self):
        """
        Gets the flow_metadata of this FDFlow.
        The flow metadata

        :return: The flow_metadata of this FDFlow.
        :rtype: FDFlowMetadata
        """
        return self._flow_metadata

    @flow_metadata.setter
    def flow_metadata(self, flow_metadata):
        """
        Sets the flow_metadata of this FDFlow.
        The flow metadata

        :param flow_metadata: The flow_metadata of this FDFlow.
        :type: FDFlowMetadata
        """
        if flow_metadata is None:
            raise ValueError("Invalid value for `flow_metadata`, must not be `None`")

        self._flow_metadata = flow_metadata

    @property
    def flow_content(self):
        """
        Gets the flow_content of this FDFlow.
        The flow contents

        :return: The flow_content of this FDFlow.
        :rtype: VersionedProcessGroup
        """
        return self._flow_content

    @flow_content.setter
    def flow_content(self, flow_content):
        """
        Sets the flow_content of this FDFlow.
        The flow contents

        :param flow_content: The flow_content of this FDFlow.
        :type: VersionedProcessGroup
        """
        if flow_content is None:
            raise ValueError("Invalid value for `flow_content`, must not be `None`")

        self._flow_content = flow_content

    @property
    def version_info(self):
        """
        Gets the version_info of this FDFlow.
        The version information for the flow

        :return: The version_info of this FDFlow.
        :rtype: FDVersionInfo
        """
        return self._version_info

    @version_info.setter
    def version_info(self, version_info):
        """
        Sets the version_info of this FDFlow.
        The version information for the flow

        :param version_info: The version_info of this FDFlow.
        :type: FDVersionInfo
        """

        self._version_info = version_info

    @property
    def local_flow_revision(self):
        """
        Gets the local_flow_revision of this FDFlow.
        The local revision number for the given flow used to order flow events per flow

        :return: The local_flow_revision of this FDFlow.
        :rtype: int
        """
        return self._local_flow_revision

    @local_flow_revision.setter
    def local_flow_revision(self, local_flow_revision):
        """
        Sets the local_flow_revision of this FDFlow.
        The local revision number for the given flow used to order flow events per flow

        :param local_flow_revision: The local_flow_revision of this FDFlow.
        :type: int
        """
        if local_flow_revision is None:
            raise ValueError("Invalid value for `local_flow_revision`, must not be `None`")

        self._local_flow_revision = local_flow_revision

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, FDFlow):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
