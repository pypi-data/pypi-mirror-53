---
"$schema": "http://json-schema.org/schema#"
"title": "Schema validation for Gammapy high-level interface API configuration"

type: object
additionalProperties: true
properties:

    general:
        type: object
        additionalProperties: false
        properties:
            outdir: {type: string}
            logging:
                type: object
                additionalProperties: false
                properties:
                    level:
                        type: string
                        enum: [CRITICAL, 50,
                               ERROR, 40,
                               WARNING, 30,
                               INFO, 20,
                               DEBUG, 10,
                               NOTSET]
                    filename: {type: string}
                    filemode: {type: string}
                    format: {type: string}
                    datefmt: {type: string}
                required: [level]
                dependencies:
                    filemode: [filename]
        required: [outdir, logging]

    observations:
        type: object
        additionalProperties: false
        properties:
            datastore: {type: string}
            filters:
                type: array
                items:
                    type: object
                    additionalProperties: false
                    properties:
                        exclude: {type: boolean}
                        inverted: {type: boolean}
                        filter_type:
                            enum: [sky_circle,
                                   angle_box,
                                   par_box,
                                   par_value,
                                   ids,
                                   all]
                        frame:
                            enum: [galactic, icrs]
                        lon: {type: number}
                        lat: {type: number}
                        radius: {type: number}
                        border: {type: number}
                        variable: {type: string}
                        value_param: {type: string}
                        value_range:
                            type: array
                            items: {type: number}
                            minItems: 2
                            maxItems: 2
                        obs_ids:
                            type: array
                            items: {type: integer}
                    required: [filter_type]
        required: [datastore, filters]

    datasets:
        type: object
        additionalProperties: false
        properties:
            background:
                type: object
                additionalProperties: false
                properties:
                    background_estimator:
                        enum: [reflected, ring]
                    exclusion_mask:
                        type: object
                        additionalProperties: false
                        properties:
                            filename: {type: string}
                            hdu: {type: string}
                if:
                    properties:
                        exclusion_mask:
                            required: [filename]
            dataset-type:
                enum: [not assigned, SpectrumDatasetOnOff, MapDataset]
            stack-datasets: {type: boolean}
            containment_correction: {type: boolean}
            offset-max: {type: number}
            psf-kernel-radius: {type: number}
            geom:
                "$ref": "#/definitions/map_geom"
            geom-irf:
                "$ref": "#/definitions/map_geom"
        required: [dataset-type, geom, stack-datasets]
        allOf:
            - if:
                  properties:
                      dataset-type:
                          const: SpectrumDatasetOnOff
              then:
                  required: [background]
                  properties:
                      background:
                          required: [background_estimator]
            - if:
                  properties:
                      dataset-type:
                          const: MapDataset
              then:
                  required: [offset-max]

    fit:
        type: object
        additionalProperties: false
        properties:
            fit_range:
                type: object
                additionalProperties: false
                properties:
                    min: {type: number}
                    max: {type: number}
                dependencies:
                    min: [max]
                    max: [min]

    flux-points:
        type: object
        additionalProperties: false
        properties:
            fp_binning:
                "$ref": "#/definitions/map_axis"

if:
    properties:
        datasets:
            properties:
                dataset-type:
                    const: SpectrumDatasetOnOff
then:
    properties:
        flux-points:
            required: [fp_binning]
        datasets:
            properties:
                geom:
                    required: [region, axes]

required: [general, observations, datasets, fit]

definitions:

    map_axis:
        type: object
        additionalProperties: false
        properties:
            name: {type: string}
            lo_bnd: {type: number}
            hi_bnd: {type: number}
            nbin: {type: number}
            unit: {type: string}
            interp:
                type: string
                enum: [lin, log, sqrt]
            node_type:
                type: string
                enum: [edges, center]
        required: [lo_bnd, hi_bnd, nbin, unit]

    map_geom:
        type: object
        additionalProperties: false
        properties:
            region:
                type: object
                additionalProperties: false
                properties:
                    center:
                        type: array
                        items: {type: number}
                        minItems: 2
                        maxItems: 2
                    radius: {type: number}
                    frame:
                        enum: [galactic, icrs]
            binsz: {type: number}
            coordsys:
                type: string
                enum: [CEL, GAL]
            proj: {type: string}
            skydir:
                type: array
                items: {type: number}
                minItems: 2
                maxItems: 2
            width:
                type: array
                items: {type: number}
                minItems: 1
                maxItems: 2
            axes:
                type: array
                additionalProperties: false
                items:
                    "$ref": "#/definitions/map_axis"
        required: [axes]
