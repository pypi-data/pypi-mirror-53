swagger: '2.0'
x-interface-model: cluster
x-endpoint-name: dataeng
x-products: ALTUS
x-altus-releases: PUBLIC
info:
  version: 0.1-SNAPSHOT
  title: Cloudera Altus Data Engineering
  license:
    name: Apache 2.0
  description: Cloudera Altus Data Engineering is a web service that makes it easy to process large amounts of data efficiently.
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /dataeng/createAWSCluster:
    post:
      summary: Creates a new AWS cluster.
      description: Creates a new AWS cluster.
      operationId: createAWSCluster
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAWSClusterRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateAWSClusterResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dataeng/createAzureCluster:
    post:
      summary: Creates a new Azure cluster.
      description: Creates a new Azure cluster.
      operationId: createAzureCluster
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAzureClusterRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateAzureClusterResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dataeng/deleteCluster:
    post:
      summary: Deletes a cluster.
      description: Deletes a cluster.
      operationId: deleteCluster
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteClusterRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteClusterResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dataeng/listClusters:
    post:
      summary: Lists clusters.
      description: Lists clusters. If no cluster names are specified, the call lists all clusters.
      operationId: listClusters
      x-right: dataeng/listClusters
      x-paginates: true
      x-paging-default-max-items: 100
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListClustersRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListClustersResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dataeng/describeCluster:
    post:
      summary: Describe a cluster.
      description: Describe a cluster.
      operationId: describeCluster
      x-right: dataeng/listClusters
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeClusterRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeClusterResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dataeng/submitJobs:
    post:
      summary: Submit new jobs.
      description: Submits new jobs.
      operationId: submitJobs
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/SubmitJobsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/SubmitJobsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dataeng/terminateJob:
    post:
      summary: Terminate a job.
      description: Terminate a job.
      operationId: terminateJob
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/TerminateJobRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/TerminateJobResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dataeng/listJobs:
    post:
      summary: Lists jobs.
      description: Lists jobs. When listing jobs by cluster, jobs are ordered by job queue position. When listing jobs without a cluster filter, jobs are ordered by creation date. The order parameter controls whether the newest or oldest jobs are listed first.
      operationId: listJobs
      x-paginates: true
      x-paging-default-max-items: 250
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListJobsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListJobsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dataeng/describeJob:
    post:
      summary: Describe a job.
      description: Describe a job.
      operationId: describeJob
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeJobRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeJobResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
definitions:
  Error:
    type: object
    description: An object returned on an error.
    properties:
      code:
        type: string
        description: The error code.
      message:
        type: string
        description: The error message.
  EnvironmentType:
    type: string
    description: The type of environment.
    enum:
      - AWS
      - AZURE
  ClusterSummary:
    type: object
    description: Information about a cluster.
    required:
      - clusterName
      - crn
      - creationDate
      - cdhVersion
      - instanceType
      - workersGroupSize
      - serviceType
      - status
      - environmentType
      - environmentCrn
      - securityConfiguration
    properties:
      clusterName:
        type: string
        description: The name of the cluster.
      crn:
        type: string
        description: The CRN of the cluster.
      creationDate:
        type: string
        format: date-time
        description: The date when the cluster was created.
      status:
        $ref: '#/definitions/ClusterStatus'
        description: The status of the cluster.
      cdhVersion:
        type: string
        description: The CDH version for the cluster.
      instanceType:
        type: string
        description: The instance type for the worker instances.
      workersGroupSize:
        type: integer
        format: int32
        description: The worker group size.
      serviceType:
        type: string
        description: The service type for the cluster.
      environmentType:
        $ref: '#/definitions/EnvironmentType'
        description: The type of the environment.
      environmentCrn:
        type: string
        description: The CRN of the environment.
      securityConfiguration:
        type: object
        description: The cluster's security configuration.
        required:
          - enabled
        properties:
          enabled:
            type: boolean
            description: Whether cluster security is enabled. If enabled, cluster services require authentication and wire encryption is enabled. Cluster volumes are encrypted in a cloud provider specific manner.
      namespaceCrn:
        type: string
        description: The CRN of the cluster's Altus SDX namespace.
      publicIpsAssociated:
        type: boolean
        description: The public IP address of the instance. This will be set to 'none' if the instance was created as part of a cluster without public IP addresses.
  Cluster:
    type: object
    description: Information about a cluster.
    required:
      - clusterName
      - crn
      - creationDate
      - cdhVersion
      - instanceType
      - workersGroupSize
      - serviceType
      - status
      - environmentType
      - environmentCrn
      - automaticTerminationCondition
      - hasInstanceBootstrapScript
      - securityConfiguration
    x-limits:
      - scope: account
        value: 20
        doc: The maximum number of clusters that can be created in an account.
    properties:
      clusterName:
        type: string
        description: The name of the cluster.
      crn:
        type: string
        description: The CRN of the cluster.
      creationDate:
        type: string
        format: date-time
        description: The date when the cluster was created.
      status:
        $ref: '#/definitions/ClusterStatus'
        description: The status of the cluster.
      cdhVersion:
        type: string
        description: The CDH version for the cluster.
      instanceType:
        type: string
        description: The instance type for the worker instances.
      hasInstanceBootstrapScript:
        type: boolean
        description: A flag indicating if a bootstrap script was provided or not during the cluster create request. The script content is not returned because it may be sensitive.
      workersGroupSize:
        type: integer
        format: int32
        description: The worker group size.
      serviceType:
        type: string
        description: The service type for the cluster.
      environmentType:
        $ref: '#/definitions/EnvironmentType'
        description: The type of the environment.
      environmentCrn:
        type: string
        description: The CRN of the environment.
      automaticTerminationCondition:
        type: string
        description: The condition under which a cluster should be automatically terminated.
        enum:
          - NONE
          - EMPTY_JOB_QUEUE
      securityConfiguration:
        type: object
        description: The cluster's security configuration.
        required:
          - enabled
        properties:
          enabled:
            type: boolean
            description: Whether cluster security is enabled. If enabled, cluster services require authentication and wire encryption is enabled. Cluster volumes are encrypted in a cloud provider specific manner.
          awsDetails:
            type: object
            description: AWS-specific security configuration. This will only be populated for AWS clusters with security enabled.
            properties:
              ebsEncryptionKmsKey:
                type: string
                description: The ARN of the KMS key used to encrypt non-root EBS volumes. If not set, and security is enabled, the default AWS managed CMK for EBS was used.
      failureCodes:
        type: array
        items:
          type: string
        description: If the cluster's status is FAILED, this will be set with related failure codes.
      failureReason:
        type: string
        description: If the cluster's status is FAILED, this will be set with a message explaining the reason.
      logArchiveLocation:
        type: string
        description: The location where cluster and job logs will be placed.
      clouderaManagerEndpoint:
        $ref: '#/definitions/Endpoint'
        description: The connection endpoint of the cluster's Cloudera Manager.
      computeWorkersConfiguration:
        type: object
        description: Compute workers group configuration.
        required:
          - groupSize
        properties:
          groupSize:
            type: integer
            format: int32
            description: The compute workers group size.
          awsDetails:
            description: AWS-specific instance configuration.
            $ref: '#/definitions/AWSInstanceConfiguration'
      workersConfiguration:
        type: object
        description: Workers group configuration.
        properties:
          awsDetails:
            description: AWS-specific instance configuration.
            $ref: '#/definitions/AWSInstanceConfiguration'
          azureDetails:
            description: Azure-specific instance configuration.
            $ref: '#/definitions/AzureInstanceConfiguration'
      workloadAnalyticsEnabled:
        type: boolean
        description: Whether this cluster was configured to send data to Altus Workload Analytics.
      navigatorConfiguration:
        type: object
        description: Navigator integration configuration.
        properties:
          clouderaNavigatorIntegrationEnabled:
            type: boolean
            description: Whether this cluster was configured to be integrated with Cloudera Navigator.
          awsDetails:
            type: object
            description: AWS-specific Cloudera Navigator integration configuration.
            properties:
              navigatorDataBucket:
                type: string
                description: The S3 bucket where metadata and lineage information used by Cloudera Navigator is stored.
      additionalClusterResourceTags:
        type: array
        description: Tags that were added to cluster-associated resources at cluster creation time. This list does not include those that the Altus service sets.
        items:
          $ref: '#/definitions/ClusterResourceTagResponse'
      namespaceCrn:
        type: string
        description: The CRN of the cluster's Altus SDX namespace.
      publicIpsAssociated:
        type: boolean
        description: The public IP address of the instance. This will be set to 'none' if the instance was created as part of a cluster without public IP addresses.
  Endpoint:
    type: object
    description: A network endpoint that has both a public and a private IP address.
    required:
      - privateIpAddress
      - publicIpAddress
      - port
    properties:
      privateIpAddress:
        type: string
        description: A private IP address. This is only accessible from within the local network.
      publicIpAddress:
        type: string
        description: A public IP address. This is internet routable. 'none' if the cluster was created without public IP addresses.
      port:
        type: integer
        format: int32
        description: A port.
  ClusterStatus:
    type: string
    description: The status of a cluster.
    enum:
      - CREATING
      - CREATED
      - TERMINATING
      - FAILED
  AWSInstanceConfiguration:
    type: object
    description: AWS-specific instance configuration.
    properties:
      useSpot:
        type: boolean
        description: Use AWS spot instances for this group (bidUSDPerHr becomes mandatory).
      bidUSDPerHr:
        type: number
        format: float
        description: Bid price for AWS Spot instances in USD / hour.
      ebsConfiguration:
        $ref: '#/definitions/EbsConfiguration'
        description: The per-instance EBS configuration.
  AzureInstanceConfiguration:
    type: object
    description: Azure-specific instance configuration.
    properties:
      diskConfiguration:
        $ref: '#/definitions/DiskConfiguration'
        description: The per-instance Azure Disk storage configuration.
  EbsConfiguration:
    type: object
    description: An EBS configuration for an instance. Any EBS disks configured are added in addition to the root volume.
    required:
      - sizeInGiB
      - volumeType
      - volumesPerInstance
    properties:
      sizeInGiB:
        type: integer
        format: int32
        minimum: 1
        maximum: 16384
        description: Size for each volume in GiB.
      volumeType:
        type: string
        description: The volume type.
        x-supported-options:
          - gp2
          - st1
          - sc1
      volumesPerInstance:
        type: integer
        format: int32
        minimum: 1
        maximum: 15
        description: Number of volumes per instance. The default and minimum number is 1. The maximum number is 15.
  EbsConfigurationRequest:
    type: object
    description: Object used to describe EBS configuration request. Any EBS disks configured here are added in addition to the root volume.
    required:
      - sizeInGiB
      - volumeType
    properties:
      sizeInGiB:
        type: integer
        format: int32
        minimum: 1
        maximum: 16384
        description: Size for each volume in GiB.
      volumeType:
        type: string
        description: The volume type.
        x-supported-options:
          - gp2
          - st1
          - sc1
      volumesPerInstance:
        type: integer
        format: int32
        minimum: 1
        maximum: 15
        description: Number of volumes per instance. The default and minimum number is 1. The maximum number is 15.
  DiskConfiguration:
    type: object
    description: A Disk storage configuration for an instance. Any disks configured are added in addition to the root volume.
    required:
      - sizeGB
      - storageAccountType
      - dataDisksPerInstance
    properties:
      sizeGB:
        type: integer
        format: int32
        minimum: 1
        maximum: 4095
        description: Size of each data disk in GB.
      dataDisksPerInstance:
        type: integer
        format: int32
        minimum: 1
        maximum: 15
        description: Number of data disks per instance. The default and minimum number is 1. The maximum number is 15.
      storageAccountType:
        type: string
        description: The storage account type.
        x-supported-options:
          - Premium_LRS
          - Standard_LRS
  DiskConfigurationRequest:
    type: object
    description: Object used to describe Disk storage configuration request. Any disks configured here are added in addition to the root volume.
    required:
      - sizeGB
      - storageAccountType
    properties:
      sizeGB:
        type: integer
        format: int32
        minimum: 1
        maximum: 4095
        description: Size of each data disk in GB.
      storageAccountType:
        type: string
        description: The storage account type.
        x-supported-options:
          - Premium_LRS
          - Standard_LRS
      dataDisksPerInstance:
        type: integer
        format: int32
        minimum: 1
        maximum: 15
        description: Number of data disks per instance. The default and minimum number is 1. The maximum number is 15.
  JobSummary:
    type: object
    description: Information about a job.
    required:
      - jobId
      - jobName
      - crn
      - creationDate
      - clusterCrn
      - submitterCrn
      - status
      - jobType
      - failureAction
      - jobSubmissionGroupId
      - jobSubmissionGroupName
      - jobSubmissionGroupIndex
      - jobSubmissionGroupSize
    properties:
      jobId:
        type: string
        description: The ID of the job.
      jobName:
        type: string
        description: The name of the job.
      crn:
        type: string
        description: The CRN of the job.
      creationDate:
        type: string
        format: date-time
        description: The date when the job was created.
      status:
        $ref: '#/definitions/JobStatus'
        description: The status of a job.
      clusterCrn:
        type: string
        description: The CRN of the cluster.
      submitterCrn:
        type: string
        description: The CRN of the job submitter.
      jobType:
        type: string
        description: The type of job.
        x-supported-options:
          - HIVE
          - SPARK
          - PYSPARK
          - MR2
      failureAction:
        $ref: '#/definitions/JobFailureAction'
        description: The action taken on failure if an error is encountered processing the job.
      jobSubmissionGroupId:
        type: string
        description: An ID assigned to the job shared by all jobs submitted in the same submit-jobs or create-cluster request.
      jobSubmissionGroupName:
        type: string
        description: A name assigned to the job shared by all jobs submitted in the same submit-jobs or create-cluster request.
      jobSubmissionGroupIndex:
        type: integer
        format: int32
        description: The index of this job in the job list in its submit-jobs or create-cluster request.
      jobSubmissionGroupSize:
        type: integer
        format: int32
        description: The total number of jobs submitted in its submit-jobs or create-cluster request.
      environmentCrn:
        type: string
        description: The CRN of the environment.
      environmentType:
        $ref: '#/definitions/EnvironmentType'
        description: The type of the environment.
  Job:
    type: object
    description: Information about a job.
    required:
      - jobId
      - jobName
      - crn
      - creationDate
      - clusterCrn
      - submitterCrn
      - status
      - jobType
      - failureAction
      - jobSubmissionGroupId
      - jobSubmissionGroupName
      - jobSubmissionGroupIndex
      - jobSubmissionGroupSize
    x-limits:
      - scope: cluster
        value: 1000
        doc: The maximum number of jobs that can be active for a cluster.
    properties:
      jobId:
        type: string
        description: The ID of the job.
      jobName:
        type: string
        description: The name of the job.
      crn:
        type: string
        description: The CRN of the job.
      creationDate:
        type: string
        format: date-time
        description: The date when the job was created.
      status:
        $ref: '#/definitions/JobStatus'
        description: The status of a job.
      clusterCrn:
        type: string
        description: The CRN of the cluster.
      submitterCrn:
        type: string
        description: The CRN of the job submitter.
      jobType:
        type: string
        description: The type of job.
        x-supported-options:
          - HIVE
          - SPARK
          - PYSPARK
          - MR2
      failureAction:
        $ref: '#/definitions/JobFailureAction'
        description: The action taken on failure if an error is encountered processing the job.
      jobSubmissionGroupId:
        type: string
        description: An ID assigned to the job shared by all jobs submitted in the same submit-jobs or create-cluster request.
      jobSubmissionGroupName:
        type: string
        description: A name assigned to the job shared by all jobs submitted in the same submit-jobs or create-cluster request.
      jobSubmissionGroupIndex:
        type: integer
        format: int32
        description: The index of this job in the job list in its submit-jobs or create-cluster request.
      jobSubmissionGroupSize:
        type: integer
        format: int32
        description: The total number of jobs submitted in its submit-jobs or create-cluster request.
      workloadAnalyticsEnabled:
        type: boolean
        description: Whether this job was run against a cluster configured to send data to Altus Workload Analytics.
      environmentCrn:
        type: string
        description: The CRN of the environment.
      environmentType:
        $ref: '#/definitions/EnvironmentType'
        description: The type of the environment.
      hiveJobDetails:
        type: object
        description: Hive specific job information. This is only ever present for HIVE jobs.
        required:
          - script
        properties:
          script:
            type: string
            description: The actual content of the Hive script to execute. This script can be templatized with variables of the form ${VARIABLE} that will be provided as params.
          params:
            type: array
            items:
              type: string
            description: 'Parameters to be passed to the Hive script. For example: InputDir=/home/input-data or OutputDir=/output.'
          jobXml:
            type: string
            description: XML document containing configuration for Beeline.
      sparkJobDetails:
        type: object
        description: Spark specific job information. This is only ever present for SPARK jobs.
        required:
          - jars
        properties:
          jars:
            type: array
            items:
              type: string
            description: A list of jars to be added to the classpath (e.g. s3a://bucket-name/app.jar). If your code depends on other projects, you will need to package them alongside your application in order to distribute the code to a Spark cluster. Our recommendation is to create an assembly jar (or uber jar) containing your code and its dependencies. Both sbt and Maven have assembly plugins. When creating assembly jars, list Spark and Hadoop as provided dependencies; these need not be bundled since they are provided by the cluster manager at runtime.
          mainClass:
            type: string
            description: Spark application main class. The entry point for your application (e.g. org.apache.spark.examples.SparkPi). This is not required if the jar has a main declaration in its manifest.
          applicationArguments:
            type: array
            items:
              type: string
            description: Arguments for the Spark application. They will be passed to the main method of the main class.
          sparkArguments:
            type: string
            description: Arguments for Spark itself respresented by a string (e.g. --executor-memory 4G --num-executors 50 --conf spark.app.name=MyApp).
          propertiesFile:
            type: string
            description: Only available in CDH513 and above. Text contents of the Spark properties file from which Spark loads extra Spark properties.
      pySparkJobDetails:
        type: object
        description: PySpark specific job information. This is only ever present for PYSPARK jobs.
        required:
          - mainPy
        properties:
          mainPy:
            type: string
            description: Spark application main python file. The entry point for your PySpark application. This is required for all PySpark application.
          pyFiles:
            type: array
            items:
              type: string
              x-no-paramfile: true
            description: PySpark job dependencies, such as .zip, .egg, or .py files, to be place on the PYTHONPATH for Python apps.
          applicationArguments:
            type: array
            items:
              type: string
            description: Arguments for the PySpark application. They will be passed to the main python file.
          sparkArguments:
            type: string
            description: Arguments for Spark itself respresented by a string (e.g. --executor-memory 4G --num-executors 50 --conf spark.app.name=MyApp).
          propertiesFile:
            type: string
            description: Only available in CDH513 and above. Contents of the Spark properties file from which Spark loads extra Spark properties.
      mr2JobDetails:
        type: object
        description: MR2 specific details of job. This will be set if the jobType is MR2.
        required:
          - mainClass
        properties:
          mainClass:
            type: string
            description: MR2 application main class.
          jars:
            type: array
            items:
              type: string
            description: A list of jar files.
          arguments:
            type: array
            items:
              type: string
            description: Arguments for the MR2 application.
          javaOpts:
            type: string
            description: A list of Java JVM options.
          jobXml:
            type: string
            description: XML document containing configuration for MR2.
  JobStatus:
    type: string
    description: The status of a job.
    enum:
      - QUEUED
      - SUBMITTING
      - RUNNING
      - COMPLETED
      - TERMINATING
      - TERMINATED
      - FAILED
      - INTERRUPTED
  JobOrder:
    type: string
    description: The job ordering.
    enum:
      - OLDEST_TO_NEWEST
      - NEWEST_TO_OLDEST
  JobFailureAction:
    type: string
    description: The action to take if an error is encountered processing a job.
    enum:
      - NONE
      - INTERRUPT_JOB_QUEUE
  CreateAWSClusterRequest:
    type: object
    description: Request object for a create AWS cluster request.
    required:
      - clusterName
      - cdhVersion
      - workersGroupSize
      - serviceType
      - instanceType
      - environmentName
    properties:
      clusterName:
        type: string
        description: The name of the cluster. This name must be unique, must have a maximum of 128 characters, and must contain only alphanumeric characters and hyphens. Names are case-sensitive.
      cdhVersion:
        type: string
        description: The CDH version.
      instanceType:
        type: string
        description: The EC2 instance type for the worker nodes.
        x-supported-options:
          - c4.xlarge
          - c4.2xlarge
          - c4.4xlarge
          - c4.8xlarge
          - c5.xlarge
          - c5.2xlarge
          - c5.4xlarge
          - c5.9xlarge
          - c5.18xlarge
          - m4.large
          - m4.xlarge
          - m4.2xlarge
          - m4.4xlarge
          - m4.10xlarge
          - m4.16xlarge
          - m5.large
          - m5.xlarge
          - m5.2xlarge
          - m5.4xlarge
          - m5.12xlarge
          - m5.24xlarge
          - r4.large
          - r4.xlarge
          - r4.2xlarge
          - r4.4xlarge
          - r4.8xlarge
          - r4.16xlarge
          - r5.large
          - r5.xlarge
          - r5.2xlarge
          - r5.4xlarge
          - r5.12xlarge
          - r5.24xlarge
      serviceType:
        type: string
        description: The service type.
        x-supported-options:
          - HIVE
          - HIVE_ON_SPARK
          - SPARK
          - SPARK_16
          - MR2
          - MULTI
      environmentName:
        type: string
        description: Name or CRN of the environment to use when creating the the cluster. The environment must be an AWS environment.
      workersGroupSize:
        type: integer
        format: int32
        x-service-side-minimum: 3
        description: The worker nodes group size.
      sshPrivateKey:
        type: string
        description: The ssh private key. Deprecated please use public key instead.
        x-sensitive: true
        x-deprecated: true
      instanceBootstrapScript:
        type: string
        description: Instance bootstrap script that is executed on all the cluster instances immediately after startup before any services are configured and started. You can use it to install additional OS packages or application dependencies. This is not intended to be a mechanism for cluster configuration.
        x-sensitive: true
      computeWorkersConfiguration:
        type: object
        description: Defines compute workers group configuration, such as, size, bidding price and custom volume configurations.
        required:
          - groupSize
        properties:
          groupSize:
            type: integer
            format: int32
            minimum: 0
            description: The compute workers group size.
          useSpot:
            type: boolean
            description: Use AWS spot instances for this group (bidUSDPerHr becomes mandatory).
          bidUSDPerHr:
            type: number
            format: float
            description: Bid price for AWS Spot instances in USD per hour.
          ebsConfiguration:
            description: Defines an EBS configuration. Any EBS disks configured here are added in addition to the root volume.
            $ref: '#/definitions/EbsConfigurationRequest'
      workersConfiguration:
        type: object
        description: Defines workers group configuration, such as, custom volume configurations.
        properties:
          ebsConfiguration:
            description: Defines an EBS configuration. Any EBS disks configured here are added in addition to the root volume.
            $ref: '#/definitions/EbsConfigurationRequest'
      namespaceName:
        type: string
        description: A name or a CRN of an existing Altus SDX namespace.
      clouderaManagerUsername:
        type: string
        description: The username to login to cluster's Cloudera Manager as readonly user. The default is 'guest'.
      clouderaManagerPassword:
        type: string
        description: The password to login to cluster's Cloudera Manager as readonly user. The default is autogenerated random UUID.
        x-sensitive: true
      automaticTerminationCondition:
        type: string
        description: The condition under which a cluster should be automatically terminated. If not specified, NONE will be used. If EMPTY_JOB_QUEUE is specified, then a list of jobs must also be specified as part of the cluster creation request.
        enum:
          - NONE
          - EMPTY_JOB_QUEUE
      jobSubmissionGroupName:
        type: string
        description: A name for the group of submitted jobs. If not specified and this is a request to submit a single, named job, the job submission group name will match the job name. Otherwise, the job submission group name will match the generated job submission group ID. This name must have a maximum of 128 characters, and must contain only alphanumeric characters, spaces, colons, hyphens and underscores. Names are case-sensitive.
      jobs:
        type: array
        items:
          $ref: '#/definitions/JobRequest'
        description: A list of jobs to submit to the cluster. Each job in the list should specify only one of hiveJob, sparkJob, pySparkJob, or mr2Job.
        minLength: 1
        maxLength: 1000
      publicKey:
        type: string
        description: The SSH public key to connect to the cluster. The user uses the private key that corresponds to the public key to SSH into the cluster.
        x-skip-logging: true
      additionalClusterResourceTags:
        type: array
        description: Tags added to cluster-associated resources at cluster creation time. These tags are in addition to those that the Altus service sets. See the AWS documentation for tagging restrictions.
        items:
          $ref: '#/definitions/ClusterResourceTagRequest'
        maxLength: 45
  CreateAWSClusterResponse:
    type: object
    description: Response object for a create AWS cluster request.
    required:
      - cluster
      - clouderaManagerUsername
      - clouderaManagerPassword
    properties:
      cluster:
        $ref: '#/definitions/Cluster'
        description: The cluster that was created.
      clouderaManagerUsername:
        type: string
        description: The username that was created to login to cluster's Cloudera Manager as a readonly user. This value cannot be retrieved later.
      clouderaManagerPassword:
        type: string
        description: The password that was created to login to cluster's Cloudera Manager as a readonly user. This value cannot be retrieved later.
        x-sensitive: true
  CreateAzureClusterRequest:
    type: object
    description: Request object for a create Azure cluster request.
    required:
      - clusterName
      - cdhVersion
      - workersGroupSize
      - serviceType
      - instanceType
      - environmentName
    properties:
      clusterName:
        type: string
        description: The name of the cluster. This name must be unique, must have a maximum of 128 characters, and must contain only alphanumeric characters and hyphens. Names are case-sensitive.
      cdhVersion:
        type: string
        description: The CDH version.
      instanceType:
        type: string
        description: The instance type for the worker nodes.
        x-supported-options:
          - STANDARD_D4S_V3
          - STANDARD_D8S_V3
          - STANDARD_D16S_V3
          - STANDARD_D32S_V3
          - STANDARD_D64S_V3
          - STANDARD_DS12_V2
          - STANDARD_DS13_V2
          - STANDARD_DS14_V2
          - STANDARD_DS15_V2
          - STANDARD_E4S_V3
          - STANDARD_E8S_V3
          - STANDARD_E16S_V3
          - STANDARD_E32S_V3
          - STANDARD_E64S_V3
      serviceType:
        type: string
        description: The service type.
        x-supported-options:
          - HIVE
          - HIVE_ON_SPARK
          - SPARK
          - SPARK_16
          - MR2
          - MULTI
      environmentName:
        type: string
        description: Name or CRN of the environment to use when creating the the cluster. The environment must be an Azure environment.
      workersGroupSize:
        type: integer
        format: int32
        x-service-side-minimum: 3
        description: The worker nodes group size.
      publicKey:
        type: string
        description: The SSH public key to connect to the cluster. The user uses the private key that corresponds to the public key to SSH into the cluster.
        x-skip-logging: true
      instanceBootstrapScript:
        type: string
        description: Instance bootstrap script that is executed on all the cluster instances immediately after startup before any services are configured and started. You can use it to install additional OS packages or application dependencies. This is not intended to be a mechanism for cluster configuration.
        x-sensitive: true
      workersConfiguration:
        type: object
        description: Defines workers group configuration, such as, custom volume configurations.
        properties:
          diskConfiguration:
            description: Defines a Disk storage configuration. Any disks configured here are added in addition to the root volume.
            $ref: '#/definitions/DiskConfigurationRequest'
      namespaceName:
        type: string
        description: A name or a CRN of an existing Altus SDX namespace.
      clouderaManagerUsername:
        type: string
        description: The username to login to cluster's Cloudera Manager as readonly user. The default is 'guest'.
      clouderaManagerPassword:
        type: string
        description: The password to login to cluster's Cloudera Manager as readonly user. The default is autogenerated random UUID.
        x-sensitive: true
      automaticTerminationCondition:
        type: string
        description: The condition under which a cluster should be automatically terminated. If not specified, NONE will be used. If EMPTY_JOB_QUEUE is specified, then a list of jobs must also be specified as part of the cluster creation request.
        enum:
          - NONE
          - EMPTY_JOB_QUEUE
      jobSubmissionGroupName:
        type: string
        description: A name for the group of submitted jobs. If not specified and this is a request to submit a single, named job, the job submission group name will match the job name. Otherwise, the job submission group name will match the generated job submission group ID. This name must have a maximum of 128 characters, and must contain only alphanumeric characters, spaces, colons, hyphens and underscores. Names are case-sensitive.
      jobs:
        type: array
        items:
          $ref: '#/definitions/JobRequest'
        description: A list of jobs to submit to the cluster. Each job in the list should only specify only one of hiveJob.
        minLength: 1
        maxLength: 1000
      additionalClusterResourceTags:
        type: array
        description: Tags added to cluster-associated resources at cluster creation time. These tags are in addition to those that the Altus service sets. See the Azure documentation for tagging restrictions.
        items:
          $ref: '#/definitions/ClusterResourceTagRequest'
        maxLength: 45
  CreateAzureClusterResponse:
    type: object
    description: Response object for a create Azure cluster request.
    required:
      - cluster
      - clouderaManagerUsername
      - clouderaManagerPassword
    properties:
      cluster:
        $ref: '#/definitions/Cluster'
        description: The cluster that was created.
      clouderaManagerUsername:
        type: string
        description: The username that was created to login to cluster's Cloudera Manager as a readonly user. This value cannot be retrieved later.
      clouderaManagerPassword:
        type: string
        description: The password that was created to login to cluster's Cloudera Manager as a readonly user. This value cannot be retrieved later.
        x-sensitive: true
  DeleteClusterRequest:
    type: object
    description: Request object for a delete cluster request.
    required:
      - clusterName
    properties:
      clusterName:
        type: string
        description: The name or CRN of the cluster.
  DeleteClusterResponse:
    type: object
    description: Response object for a delete cluster request.
  ListClustersRequest:
    type: object
    description: Request object for a list clusters request.
    properties:
      clusterNames:
        type: array
        items:
          type: string
        description: The names or CRNs of the clusters.
      pageSize:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        x-paging-page-size: true
        description: The size of each page.
      startingToken:
        type: string
        x-paging-input-token: true
        description: A token to specify where to start paginating. This is the nextToken from a previously truncated response.
  ListClustersResponse:
    type: object
    description: Response object for a list clusters request.
    required:
      - clusters
    properties:
      clusters:
        type: array
        items:
          $ref: '#/definitions/ClusterSummary'
        x-paging-result: true
        description: The clusters.
      nextToken:
        type: string
        x-paging-output-token: true
        description: The token to use when requesting the next set of results. If not present, there are no additional results.
  DescribeClusterRequest:
    type: object
    description: Request object for a describe cluster request.
    required:
      - clusterName
    properties:
      clusterName:
        type: string
        description: The name or CRN of the cluster.
  DescribeClusterResponse:
    type: object
    description: Response object for a describe cluster request.
    required:
      - cluster
    properties:
      cluster:
        $ref: '#/definitions/Cluster'
        description: The cluster.
  SparkJobRequest:
    type: object
    description: Object used to submit a Spark job.
    required:
      - jars
    properties:
      jars:
        type: array
        items:
          type: string
          x-no-paramfile: true
        description: A list of jars to be added to the classpath (e.g. s3a://bucket-name/app.jar). If your code depends on other projects, you will need to package them alongside your application in order to distribute the code to a Spark cluster. Our recommendation is to create an assembly jar (or uber jar) containing your code and its dependencies. Both sbt and Maven have assembly plugins. When creating assembly jars, list Spark and Hadoop as provided dependencies; these need not be bundled since they are provided by the cluster manager at runtime.
      mainClass:
        type: string
        description: Spark application main class. The entry point for your application (e.g. org.apache.spark.examples.SparkPi). This is not required if the jar has a main declaration in its manifest.
      applicationArguments:
        type: array
        items:
          type: string
        description: Arguments for the Spark application. They will be passed to the main method of the main class.
      sparkArguments:
        type: string
        description: Arguments for Spark itself respresented by a string (e.g. --executor-memory 4G --num-executors 50 --conf spark.app.name=MyApp).
      propertiesFile:
        type: string
        description: Only available in CDH513 and above. Contents of the Spark properties file from which Spark loads extra Spark properties. Note that you should use this argument instead of passing '--properties-file' as a part of --spark-arguments above. This can be a local path when using the CLI (e.g. file:///absolute/path/to/propertiesFile).
  PySparkJobRequest:
    type: object
    description: Object used to submit a PySpark job.
    required:
      - mainPy
    properties:
      mainPy:
        type: string
        x-no-paramfile: true
        description: Spark application main python file. The entry point for your PySpark application. This is required for all PySpark application.
      pyFiles:
        type: array
        items:
          type: string
          x-no-paramfile: true
        description: PySpark job dependencies, such as .zip, .egg, or .py files, to be place on the PYTHONPATH for Python apps.
      applicationArguments:
        type: array
        items:
          type: string
        description: Arguments for the PySpark application. They will be passed to the main python file.
      sparkArguments:
        type: string
        description: Arguments for Spark itself respresented by a string (e.g. --executor-memory 4G --num-executors 50 --conf spark.app.name=MyApp).
      propertiesFile:
        type: string
        description: Only available in CDH513 and above. Contents of the Spark properties file from which Spark loads extra Spark properties. Note that you should use this argument instead of passing '--properties-file' as a part of --spark-arguments above. This can be a local path when using the CLI (e.g. file:///absolute/path/to/propertiesFile).
  MR2JobRequest:
    type: object
    description: Object used to submit a MR2 job.
    required:
      - mainClass
      - jars
    properties:
      mainClass:
        type: string
        description: MR2 application main class. The entry point for your application.
      jars:
        type: array
        items:
          type: string
          x-no-paramfile: true
        description: A list of jars to be added to the classpath (e.g. s3a://bucket-name/wordcount.jar).
      arguments:
        type: array
        items:
          type: string
        description: Arguments for the MR2 application. They will be passed to the main method of the main class.
      javaOpts:
        type: string
        description: A list of Java options for the JVM.
      jobXml:
        type: string
        description: An optional XML document containing client configurations for MR2 or a local path when using the CLI (e.g. file:///absolute/path/to/job1.xml).
  HiveJobRequest:
    type: object
    description: Object used to submit a HIVE job.
    required:
      - script
    properties:
      script:
        type: string
        description: The actual content of the Hive script to execute. This script can be templatized with variables of the form ${VARIABLE} that will be provided as params. When using the CLI this can be a local path (e.g. file:///absolute/path/to/script.hql).
      params:
        type: array
        items:
          type: string
        description: 'Parameters to be passed to the Hive script. For example: InputDir=/home/input-data or OutputDir=/output.'
      jobXml:
        type: string
        description: An optional XML document containing client configurations for Beeline or local path when using the CLI (e.g. file:///absolute/path/to/job1.xml). These are the same configurations that usually go into hive-site.xml to drive Beeline as a client of Hive Server 2. An example can be downloaded from Cloudera Manager (navigate to Hive service, click "Actions" and then "Download Client Configuration").
  JobRequest:
    type: object
    description: Object used to submit a job of any type.
    properties:
      name:
        type: string
        description: A name for the job. If not specified, the job name depends on whether the job was submitted individually or in a list of jobs. If submitted individually the job name will be the job ID. If submitted in a list of jobs, the job will be named after the job submission group and the job's index in the list. This name must have at least one character and a maximum of 128 characters. It must contain only alphanumeric characters, spaces, colons, hyphens and underscores, and can only start and end with alphanumeric characters and underscores. Names are case-sensitive.
      failureAction:
        $ref: '#/definitions/JobFailureAction'
        description: The action taken on failure if an error is encountered processing the job. If not specified, INTERRUPT_JOB_QUEUE will be used for the job.
      hiveJob:
        $ref: '#/definitions/HiveJobRequest'
        description: The Hive specific portion of the job request. This must be set for a Hive job and must not be set for other job types.
      sparkJob:
        $ref: '#/definitions/SparkJobRequest'
        description: The Spark specific portion of the job request. This must be set for a Spark job and must not be set for other job types.
      pySparkJob:
        $ref: '#/definitions/PySparkJobRequest'
        description: The PySpark specific portion of the job request. This must be set for a PySpark job and must not be set for other job types.
      mr2Job:
        $ref: '#/definitions/MR2JobRequest'
        description: The MR2 specific portion of the job request. This must be set for an MR2 job and must not be set for other job types.
  SubmitJobsRequest:
    type: object
    description: Request object for a submit jobs request.
    required:
      - clusterName
      - jobs
    properties:
      clusterName:
        type: string
        description: The name or CRN cluster on which to run the job.
      jobs:
        type: array
        items:
          $ref: '#/definitions/JobRequest'
        description: The jobs to submit. Each job in the list should specify only one of hiveJob, sparkJob, pySparkJob, or mr2Job.
      jobSubmissionGroupName:
        type: string
        description: A name for the group of submitted jobs. If not specified and this is a request to submit a single, named job, the job submission group name will match the job name. Otherwise, the job submission group name will match the generated job submission group ID. This name must have at least one character and a maximum of 128 characters. It must contain only alphanumeric characters, spaces, colons, hyphens and underscores, and can only start and end with alphanumeric characters and underscores. Names are case-sensitive.
  SubmitJobsResponse:
    type: object
    description: Response object for a submit jobs request.
    required:
      - jobs
    properties:
      jobs:
        type: array
        items:
          $ref: '#/definitions/Job'
        description: The submitted jobs.
        minLength: 1
        maxLength: 1000
  ListJobsRequest:
    type: object
    description: Request object for a list jobs request. One or more filters can be applied. If multiple filters are specified, all of them will be applied.
    properties:
      jobIds:
        type: array
        items:
          type: string
        description: The IDs of the jobs.
      environmentCrn:
        type: string
        description: Filters the job list to the jobs with this environment.
      clusterCrn:
        type: string
        description: Filters the job list to the jobs with this cluster.
      submitterCrn:
        type: string
        description: Filters the job list to the jobs with this submitter.
      jobTypes:
        type: array
        items:
          type: string
          description: The type of job.
          x-supported-options:
            - HIVE
            - SPARK
            - PYSPARK
            - MR2
        description: Filters the job list to the jobs with these job types.
      jobStatuses:
        type: array
        items:
          $ref: '#/definitions/JobStatus'
        description: Filters the job list to the jobs with these statuses.
      creationDateAfter:
        type: string
        format: date-time
        description: Filters the job list to jobs with creation dates at or after this value.
      creationDateBefore:
        type: string
        format: date-time
        description: Filters the job list to jobs with creation dates at or before this value.
      order:
        $ref: '#/definitions/JobOrder'
        description: Controls the order in which jobs are returned. The default is NEWEST_TO_OLDEST.
      pageSize:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        x-paging-page-size: true
        description: The size of each page.
      startingToken:
        type: string
        x-paging-input-token: true
        description: A token to specify where to start paginating. This is the nextToken from a previously truncated response.
  ListJobsResponse:
    type: object
    description: Response object for a list jobs request.
    required:
      - jobs
    properties:
      jobs:
        type: array
        items:
          $ref: '#/definitions/JobSummary'
        x-paging-result: true
        description: The jobs.
      nextToken:
        type: string
        x-paging-output-token: true
        description: The token to use when requesting the next set of results. If not present, there are no additional results.
  DescribeJobRequest:
    type: object
    description: Request object for a describe job request.
    required:
      - jobId
    properties:
      jobId:
        type: string
        description: The ID or CRN of the job.
  DescribeJobResponse:
    type: object
    description: Response object for a describe job request.
    required:
      - job
    properties:
      job:
        $ref: '#/definitions/Job'
        description: The job.
  TerminateJobRequest:
    type: object
    description: Request object for a terminate job request.
    required:
      - jobId
    properties:
      jobId:
        type: string
        description: The ID or CRN of the job to terminate.
  TerminateJobResponse:
    type: object
    description: Response object for a terminate job request.
  ClusterResourceTagRequest:
    type: object
    description: Tag for a cluster resource.
    required:
      - key
      - value
    properties:
      key:
        type: string
        description: The key of tag.
      value:
        type: string
        description: The value of the tag.
  ClusterResourceTagResponse:
    type: object
    description: Tag for a cluster resource.
    required:
      - key
      - value
    properties:
      key:
        type: string
        description: The key of tag.
      value:
        type: string
        description: The value of the tag.
