#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.7.1 on Wed Mar 02 20:17:35 2016
#

import wx
from wx.lib.agw.floatspin import FloatSpin, EVT_FLOATSPIN, FS_LEFT, FS_RIGHT, FS_CENTRE, FS_READONLY

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class PanelPrepMegalaserUI(wx.Panel):
    def __init__(self, *args, **kwds):
        # begin wxGlade: PanelPrepMegalaserUI.__init__
        kwds["style"] = wx.TAB_TRAVERSAL
        wx.Panel.__init__(self, *args, **kwds)
        self.SplitterWindow = wx.SplitterWindow(self, wx.ID_ANY, style=wx.SP_3D | wx.SP_BORDER)
        self.PanelPrepFidsum = wx.Panel(self.SplitterWindow, wx.ID_ANY)
        self.SpinFidIndex = wx.SpinCtrl(self.PanelPrepFidsum, wx.ID_ANY, "", min=0, max=100)
        self.FloatGaussianApodization = FloatSpin(self.PanelPrepFidsum, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=1.0, agwStyle=FS_LEFT)
        self.FloatPeakShiftValue = FloatSpin(self.PanelPrepFidsum, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=1.0, agwStyle=FS_LEFT)
        self.SpinFidLeftShift = wx.SpinCtrl(self.PanelPrepFidsum, wx.ID_ANY, "", min=-100, max=100)
        self.FloatPhase0 = FloatSpin(self.PanelPrepFidsum, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=1.0, agwStyle=FS_LEFT)
        self.label_4 = wx.StaticText(self.PanelPrepFidsum, wx.ID_ANY, "Global Phase 1 [deg]:")
        self.FloatPhase1 = FloatSpin(self.PanelPrepFidsum, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=1.0, agwStyle=FS_LEFT)
        self.sizer_7_staticbox = wx.StaticBox(self.PanelPrepFidsum, wx.ID_ANY, "Data Processing and Manual Corrections")
        self.CheckApplyPeakShift = wx.CheckBox(self.PanelPrepFidsum, wx.ID_ANY, "AutoCalc Peak Shift")
        self.ButtonResetPeakShift = wx.Button(self.PanelPrepFidsum, wx.ID_ANY, "Reset Peak Shifts")
        self.FloatReferencePeakCenter = FloatSpin(self.PanelPrepFidsum, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=1.0, agwStyle=FS_LEFT)
        self.FloatPeakSearchWidth = FloatSpin(self.PanelPrepFidsum, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=1.0, agwStyle=FS_LEFT)
        self.SpinFidLeftShiftB0 = wx.SpinCtrl(self.PanelPrepFidsum, wx.ID_ANY, "", min=0, max=100)
        self.sizer_5_staticbox = wx.StaticBox(self.PanelPrepFidsum, wx.ID_ANY, "Peak Shift - Algorithm Settings")
        self.CheckApplyPhase0 = wx.CheckBox(self.PanelPrepFidsum, wx.ID_ANY, " AutoCalc Phase0")
        self.ButtonResetPhase0 = wx.Button(self.PanelPrepFidsum, wx.ID_ANY, "Reset Phase0 Values")
        self.FloatPhase0RangeStart = FloatSpin(self.PanelPrepFidsum, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=1.0, agwStyle=FS_LEFT)
        self.FloatPhase0RangeEnd = FloatSpin(self.PanelPrepFidsum, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=1.0, agwStyle=FS_LEFT)
        self.SpinFidLeftShiftPhase0 = wx.SpinCtrl(self.PanelPrepFidsum, wx.ID_ANY, "", min=0, max=100)
        self.ComboRefSpectrumSource = wx.ComboBox(self.PanelPrepFidsum, wx.ID_ANY, choices=["Average of All FIDs", "Singlet Centered in Range"], style=wx.CB_READONLY)
        self.SpinRefPeakLineWidth = wx.SpinCtrl(self.PanelPrepFidsum, wx.ID_ANY, "3", min=1, max=100)
        self.SpinConstantPhase0Offset = wx.SpinCtrl(self.PanelPrepFidsum, wx.ID_ANY, "", min=0, max=100)
        self.sizer_8_staticbox = wx.StaticBox(self.PanelPrepFidsum, wx.ID_ANY, "Phase 0 - Algorithm Settings")
        self.sizer_9_staticbox = wx.StaticBox(self.PanelPrepFidsum, wx.ID_ANY, "Automated Data Corrections")
        self.window_1_pane_2 = wx.Panel(self.SplitterWindow, wx.ID_ANY)
        self.PanelViewPrepFidsum = wx.Panel(self.window_1_pane_2, wx.ID_ANY)
        self.sizer_4_staticbox = wx.StaticBox(self.window_1_pane_2, wx.ID_ANY, "")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_SPINCTRL, self.on_fid_index, self.SpinFidIndex)
        self.Bind(wx.EVT_SPINCTRL, self.on_fid_left_shift, self.SpinFidLeftShift)
        self.Bind(wx.EVT_CHECKBOX, self.on_apply_peak_shift, self.CheckApplyPeakShift)
        self.Bind(wx.EVT_BUTTON, self.on_reset_peak_shift, self.ButtonResetPeakShift)
        self.Bind(wx.EVT_SPINCTRL, self.on_fid_left_shift_b0, self.SpinFidLeftShiftB0)
        self.Bind(wx.EVT_CHECKBOX, self.on_apply_phase0, self.CheckApplyPhase0)
        self.Bind(wx.EVT_BUTTON, self.on_reset_phase0, self.ButtonResetPhase0)
        self.Bind(wx.EVT_SPINCTRL, self.on_fid_left_shift_phase0, self.SpinFidLeftShiftPhase0)
        self.Bind(wx.EVT_COMBOBOX, self.on_ref_spectrum_source, self.ComboRefSpectrumSource)
        self.Bind(wx.EVT_SPINCTRL, self.on_ref_peak_line_width, self.SpinRefPeakLineWidth)
        self.Bind(wx.EVT_SPINCTRL, self.on_constant_phase0_offset, self.SpinConstantPhase0Offset)
        self.Bind(wx.EVT_SPLITTER_SASH_POS_CHANGED, self.on_splitter, self.SplitterWindow)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: PanelPrepMegalaserUI.__set_properties
        self.CheckApplyPeakShift.SetValue(1)
        self.CheckApplyPhase0.SetValue(1)
        self.ComboRefSpectrumSource.SetSelection(0)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: PanelPrepMegalaserUI.__do_layout
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        self.sizer_4_staticbox.Lower()
        sizer_4 = wx.StaticBoxSizer(self.sizer_4_staticbox, wx.HORIZONTAL)
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        self.sizer_9_staticbox.Lower()
        sizer_9 = wx.StaticBoxSizer(self.sizer_9_staticbox, wx.VERTICAL)
        self.sizer_8_staticbox.Lower()
        sizer_8 = wx.StaticBoxSizer(self.sizer_8_staticbox, wx.HORIZONTAL)
        grid_sizer_2 = wx.FlexGridSizer(4, 2, 4, 4)
        self.sizer_5_staticbox.Lower()
        sizer_5 = wx.StaticBoxSizer(self.sizer_5_staticbox, wx.HORIZONTAL)
        grid_sizer_1 = wx.FlexGridSizer(4, 2, 4, 4)
        self.sizer_7_staticbox.Lower()
        sizer_7 = wx.StaticBoxSizer(self.sizer_7_staticbox, wx.VERTICAL)
        grid_sizer_6 = wx.FlexGridSizer(3, 4, 4, 4)
        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        label_1 = wx.StaticText(self.PanelPrepFidsum, wx.ID_ANY, "FID index:")
        sizer_6.Add(label_1, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.RIGHT, 2)
        sizer_6.Add(self.SpinFidIndex, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_1.Add(sizer_6, 0, wx.ALL | wx.EXPAND, 4)
        label_9 = wx.StaticText(self.PanelPrepFidsum, wx.ID_ANY, "Gauss apodize [Hz]:")
        grid_sizer_6.Add(label_9, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.LEFT, 12)
        grid_sizer_6.Add(self.FloatGaussianApodization, 0, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
        label_11 = wx.StaticText(self.PanelPrepFidsum, wx.ID_ANY, "Peak shift [Hz]:")
        grid_sizer_6.Add(label_11, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.LEFT, 12)
        grid_sizer_6.Add(self.FloatPeakShiftValue, 0, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
        label_2 = wx.StaticText(self.PanelPrepFidsum, wx.ID_ANY, "FID left shift [pts]:")
        grid_sizer_6.Add(label_2, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.LEFT, 8)
        grid_sizer_6.Add(self.SpinFidLeftShift, 0, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
        label_3 = wx.StaticText(self.PanelPrepFidsum, wx.ID_ANY, "Phase 0 [deg]:")
        grid_sizer_6.Add(label_3, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.LEFT, 8)
        grid_sizer_6.Add(self.FloatPhase0, 0, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
        grid_sizer_6.Add((20, 20), 0, 0, 0)
        grid_sizer_6.Add((20, 20), 0, 0, 0)
        grid_sizer_6.Add(self.label_4, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.LEFT, 8)
        grid_sizer_6.Add(self.FloatPhase1, 1, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
        sizer_7.Add(grid_sizer_6, 0, wx.ALL | wx.EXPAND, 4)
        sizer_1.Add(sizer_7, 0, wx.ALL | wx.EXPAND, 4)
        grid_sizer_1.Add(self.CheckApplyPeakShift, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.ButtonResetPeakShift, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)
        label_8 = wx.StaticText(self.PanelPrepFidsum, wx.ID_ANY, "Reference peak center [ppm]:")
        grid_sizer_1.Add(label_8, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)
        grid_sizer_1.Add(self.FloatReferencePeakCenter, 1, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
        label_10 = wx.StaticText(self.PanelPrepFidsum, wx.ID_ANY, "Peak search width [+/- ppm]:")
        grid_sizer_1.Add(label_10, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)
        grid_sizer_1.Add(self.FloatPeakSearchWidth, 1, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
        label_7 = wx.StaticText(self.PanelPrepFidsum, wx.ID_ANY, " FID left shift for B0 [pts]:")
        grid_sizer_1.Add(label_7, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)
        grid_sizer_1.Add(self.SpinFidLeftShiftB0, 0, 0, 0)
        sizer_5.Add(grid_sizer_1, 0, wx.EXPAND, 0)
        sizer_9.Add(sizer_5, 0, wx.ALL | wx.EXPAND, 4)
        grid_sizer_2.Add(self.CheckApplyPhase0, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_2.Add(self.ButtonResetPhase0, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)
        label_5 = wx.StaticText(self.PanelPrepFidsum, wx.ID_ANY, "Optimization Range Start [ppm]:")
        grid_sizer_2.Add(label_5, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)
        grid_sizer_2.Add(self.FloatPhase0RangeStart, 0, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
        label_6 = wx.StaticText(self.PanelPrepFidsum, wx.ID_ANY, "Optimization Range End [ppm]:")
        grid_sizer_2.Add(label_6, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)
        grid_sizer_2.Add(self.FloatPhase0RangeEnd, 0, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
        label_12 = wx.StaticText(self.PanelPrepFidsum, wx.ID_ANY, " FID left shift for Phase0 [pts]:")
        grid_sizer_2.Add(label_12, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)
        grid_sizer_2.Add(self.SpinFidLeftShiftPhase0, 0, 0, 0)
        label_13 = wx.StaticText(self.PanelPrepFidsum, wx.ID_ANY, "Reference Spectrum from:")
        grid_sizer_2.Add(label_13, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)
        grid_sizer_2.Add(self.ComboRefSpectrumSource, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        label_14 = wx.StaticText(self.PanelPrepFidsum, wx.ID_ANY, "Ref Peak Line Width [Hz]:")
        grid_sizer_2.Add(label_14, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)
        grid_sizer_2.Add(self.SpinRefPeakLineWidth, 0, 0, 0)
        label_15 = wx.StaticText(self.PanelPrepFidsum, wx.ID_ANY, "Constant Phase0 Offset [deg]:")
        grid_sizer_2.Add(label_15, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)
        grid_sizer_2.Add(self.SpinConstantPhase0Offset, 0, 0, 0)
        sizer_8.Add(grid_sizer_2, 0, wx.EXPAND, 0)
        sizer_9.Add(sizer_8, 0, wx.ALL | wx.EXPAND, 4)
        sizer_1.Add(sizer_9, 0, wx.ALL | wx.EXPAND, 4)
        self.PanelPrepFidsum.SetSizer(sizer_1)
        sizer_4.Add(self.PanelViewPrepFidsum, 1, wx.EXPAND, 0)
        self.window_1_pane_2.SetSizer(sizer_4)
        self.SplitterWindow.SplitVertically(self.PanelPrepFidsum, self.window_1_pane_2)
        sizer_3.Add(self.SplitterWindow, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_3)
        sizer_3.Fit(self)
        self.Layout()
        # end wxGlade

    def on_fid_index(self, event):  # wxGlade: PanelPrepMegalaserUI.<event_handler>
        print "Event handler 'on_fid_index' not implemented!"
        event.Skip()

    def on_fid_left_shift(self, event):  # wxGlade: PanelPrepMegalaserUI.<event_handler>
        print "Event handler 'on_fid_left_shift' not implemented!"
        event.Skip()

    def on_apply_peak_shift(self, event):  # wxGlade: PanelPrepMegalaserUI.<event_handler>
        print "Event handler 'on_apply_peak_shift' not implemented!"
        event.Skip()

    def on_reset_peak_shift(self, event):  # wxGlade: PanelPrepMegalaserUI.<event_handler>
        print "Event handler 'on_reset_peak_shift' not implemented!"
        event.Skip()

    def on_fid_left_shift_b0(self, event):  # wxGlade: PanelPrepMegalaserUI.<event_handler>
        print "Event handler 'on_fid_left_shift_b0' not implemented!"
        event.Skip()

    def on_apply_phase0(self, event):  # wxGlade: PanelPrepMegalaserUI.<event_handler>
        print "Event handler 'on_apply_phase0' not implemented!"
        event.Skip()

    def on_reset_phase0(self, event):  # wxGlade: PanelPrepMegalaserUI.<event_handler>
        print "Event handler 'on_reset_phase0' not implemented!"
        event.Skip()

    def on_fid_left_shift_phase0(self, event):  # wxGlade: PanelPrepMegalaserUI.<event_handler>
        print "Event handler 'on_fid_left_shift_phase0' not implemented!"
        event.Skip()

    def on_ref_spectrum_source(self, event):  # wxGlade: PanelPrepMegalaserUI.<event_handler>
        print "Event handler 'on_ref_spectrum_source' not implemented!"
        event.Skip()

    def on_ref_peak_line_width(self, event):  # wxGlade: PanelPrepMegalaserUI.<event_handler>
        print "Event handler 'on_ref_peak_line_width' not implemented!"
        event.Skip()

    def on_constant_phase0_offset(self, event):  # wxGlade: PanelPrepMegalaserUI.<event_handler>
        print "Event handler 'on_constant_phase0_offset' not implemented!"
        event.Skip()

    def on_splitter(self, event):  # wxGlade: PanelPrepMegalaserUI.<event_handler>
        print "Event handler 'on_splitter' not implemented!"
        event.Skip()

# end of class PanelPrepMegalaserUI

class MyFrame1(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame1.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.PanelPrepMegalaserUI = PanelPrepMegalaserUI(self, wx.ID_ANY)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame1.__set_properties
        self.SetTitle("frame_2")
        self.SetSize((730, 624))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame1.__do_layout
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_2.Add(self.PanelPrepMegalaserUI, 1, wx.ALL | wx.EXPAND, 4)
        self.SetSizer(sizer_2)
        self.Layout()
        # end wxGlade

# end of class MyFrame1
