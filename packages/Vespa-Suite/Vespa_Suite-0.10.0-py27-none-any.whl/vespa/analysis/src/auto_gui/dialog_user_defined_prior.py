# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.9.3 on Wed Sep 11 12:13:21 2019
#

import wx

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyDialog(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyDialog.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_DIALOG_STYLE | wx.RESIZE_BORDER
        wx.Dialog.__init__(self, *args, **kwds)
        self.PanelUserDefinedPrior = wx.Panel(self, wx.ID_ANY)
        self.label_2 = wx.StaticText(self.PanelUserDefinedPrior, wx.ID_ANY, "Comment - Describe the details of prior info and basis set here", style=wx.ALIGN_LEFT)
        self.TextCtrlComment = wx.TextCtrl(self.PanelUserDefinedPrior, wx.ID_ANY, "", style=wx.TE_MULTILINE)
        self.ButtonAddGroup = wx.Button(self.PanelUserDefinedPrior, wx.ID_ANY, "Add a Metabolite Group")
        self.ButtonEditGroup = wx.Button(self.PanelUserDefinedPrior, wx.ID_ANY, "Edit Selected Group")
        self.ButtonDeleteGroup = wx.Button(self.PanelUserDefinedPrior, wx.ID_ANY, "Delete Selected Group(s)")
        self.PanelGroups = wx.Panel(self.PanelUserDefinedPrior, wx.ID_ANY)
        self.LabelPlaceholderGroups = wx.StaticText(self.PanelGroups, wx.ID_ANY, "Placeholder for metabolite groups")
        self.ButtonAddEquality = wx.Button(self.PanelUserDefinedPrior, wx.ID_ANY, "Add an Equality Contstraint")
        self.ButtonDeleteEquality = wx.Button(self.PanelUserDefinedPrior, wx.ID_ANY, "Delete Selected Constraint(s)")
        self.PanelEquality = wx.Panel(self.PanelUserDefinedPrior, wx.ID_ANY)
        self.LabelPlaceholderEquality = wx.StaticText(self.PanelEquality, wx.ID_ANY, "Placeholder for equality constraints")
        self.ButtonAddInequality = wx.Button(self.PanelUserDefinedPrior, wx.ID_ANY, "Add an Inequality Contstraint")
        self.ButtonDeleteInequality = wx.Button(self.PanelUserDefinedPrior, wx.ID_ANY, "Delete Selected Constraint(s)")
        self.PanelInequality = wx.Panel(self.PanelUserDefinedPrior, wx.ID_ANY)
        self.LabelPlaceholderInequality = wx.StaticText(self.PanelInequality, wx.ID_ANY, "Placeholder for inequality constraints")
        self.LabelOKCancelPlaceholder = wx.StaticText(self, wx.ID_ANY, "LabelOKCancelPlaceholder")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.on_add_group, self.ButtonAddGroup)
        self.Bind(wx.EVT_BUTTON, self.on_edit_group, self.ButtonEditGroup)
        self.Bind(wx.EVT_BUTTON, self.on_delete_group, self.ButtonDeleteGroup)
        self.Bind(wx.EVT_BUTTON, self.on_add_equality, self.ButtonAddEquality)
        self.Bind(wx.EVT_BUTTON, self.on_delete_equality, self.ButtonDeleteEquality)
        self.Bind(wx.EVT_BUTTON, self.on_add_inequality, self.ButtonAddInequality)
        self.Bind(wx.EVT_BUTTON, self.on_delete_inequality, self.ButtonDeleteInequality)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyDialog.__set_properties
        self.SetTitle("Create/Edit Metbolite Groups and Constraints")
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyDialog.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_6 = wx.BoxSizer(wx.VERTICAL)
        sizer_15 = wx.StaticBoxSizer(wx.StaticBox(self.PanelUserDefinedPrior, wx.ID_ANY, ""), wx.VERTICAL)
        sizer_10 = wx.StaticBoxSizer(wx.StaticBox(self.PanelUserDefinedPrior, wx.ID_ANY, "Fitting Constraints - Inequality"), wx.VERTICAL)
        GridSizerInequality = wx.FlexGridSizer(1, 2, 5, 5)
        sizer_14 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_9 = wx.StaticBoxSizer(wx.StaticBox(self.PanelUserDefinedPrior, wx.ID_ANY, "Fitting Constraints - Equality"), wx.VERTICAL)
        GridSizerEquality = wx.FlexGridSizer(1, 2, 5, 5)
        sizer_13 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_12 = wx.StaticBoxSizer(wx.StaticBox(self.PanelUserDefinedPrior, wx.ID_ANY, "Metabolite Groups"), wx.VERTICAL)
        GridSizerGroups = wx.FlexGridSizer(1, 3, 5, 5)
        sizer_11 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        label_1 = wx.StaticText(self.PanelUserDefinedPrior, wx.ID_ANY, "Warning: If you Add or Delete a metabolite group the contraint equations become \ninvalid and they will be deleted. Set up Groups before writing Constraints.")
        sizer_3.Add(label_1, 0, wx.ALL, 8)
        sizer_3.Add(self.label_2, 0, wx.LEFT, 10)
        sizer_3.Add(self.TextCtrlComment, 1, wx.BOTTOM | wx.EXPAND | wx.LEFT | wx.RIGHT, 10)
        sizer_15.Add(sizer_3, 1, wx.EXPAND, 0)
        sizer_11.Add(self.ButtonAddGroup, 0, wx.RIGHT, 4)
        sizer_11.Add(self.ButtonEditGroup, 0, wx.RIGHT, 4)
        sizer_11.Add(self.ButtonDeleteGroup, 0, wx.RIGHT, 4)
        sizer_12.Add(sizer_11, 0, wx.BOTTOM | wx.EXPAND | wx.TOP, 6)
        GridSizerGroups.Add(self.LabelPlaceholderGroups, 0, 0, 0)
        GridSizerGroups.Add((0, 0), 0, 0, 0)
        GridSizerGroups.Add((0, 0), 0, 0, 0)
        self.PanelGroups.SetSizer(GridSizerGroups)
        GridSizerGroups.AddGrowableCol(1)
        GridSizerGroups.AddGrowableCol(2)
        sizer_12.Add(self.PanelGroups, 0, wx.EXPAND, 0)
        sizer_15.Add(sizer_12, 1, wx.ALL | wx.EXPAND, 8)
        sizer_13.Add(self.ButtonAddEquality, 0, wx.RIGHT, 4)
        sizer_13.Add(self.ButtonDeleteEquality, 0, wx.RIGHT, 4)
        sizer_9.Add(sizer_13, 0, wx.BOTTOM | wx.EXPAND | wx.TOP, 6)
        GridSizerEquality.Add(self.LabelPlaceholderEquality, 0, 0, 0)
        GridSizerEquality.Add((0, 0), 0, 0, 0)
        self.PanelEquality.SetSizer(GridSizerEquality)
        GridSizerEquality.AddGrowableCol(1)
        sizer_9.Add(self.PanelEquality, 0, wx.EXPAND, 0)
        sizer_15.Add(sizer_9, 1, wx.ALL | wx.EXPAND, 8)
        sizer_14.Add(self.ButtonAddInequality, 0, wx.RIGHT, 4)
        sizer_14.Add(self.ButtonDeleteInequality, 0, wx.RIGHT, 4)
        sizer_10.Add(sizer_14, 0, wx.BOTTOM | wx.EXPAND | wx.TOP, 6)
        GridSizerInequality.Add(self.LabelPlaceholderInequality, 0, 0, 0)
        GridSizerInequality.Add((0, 0), 0, 0, 0)
        self.PanelInequality.SetSizer(GridSizerInequality)
        GridSizerInequality.AddGrowableCol(1)
        sizer_10.Add(self.PanelInequality, 0, wx.EXPAND, 0)
        sizer_15.Add(sizer_10, 1, wx.ALL | wx.EXPAND, 8)
        self.PanelUserDefinedPrior.SetSizer(sizer_15)
        sizer_6.Add(self.PanelUserDefinedPrior, 1, wx.EXPAND, 0)
        sizer_1.Add(sizer_6, 1, wx.EXPAND, 0)
        sizer_2.Add(self.LabelOKCancelPlaceholder, 0, 0, 0)
        sizer_1.Add(sizer_2, 0, 0, 10)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        # end wxGlade

    def on_add_group(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_add_group' not implemented!")
        event.Skip()

    def on_edit_group(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_edit_group' not implemented!")
        event.Skip()

    def on_delete_group(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_delete_group' not implemented!")
        event.Skip()

    def on_add_equality(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_add_equality' not implemented!")
        event.Skip()

    def on_delete_equality(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_delete_equality' not implemented!")
        event.Skip()

    def on_add_inequality(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_add_inequality' not implemented!")
        event.Skip()

    def on_delete_inequality(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_delete_inequality' not implemented!")
        event.Skip()

# end of class MyDialog
