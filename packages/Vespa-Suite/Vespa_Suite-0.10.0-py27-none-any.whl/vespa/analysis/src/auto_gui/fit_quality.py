# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.9.3 on Wed Sep 11 12:18:41 2019
#

import wx
from wx.lib.agw.floatspin import FloatSpin, EVT_FLOATSPIN, FS_LEFT, FS_RIGHT, FS_CENTRE, FS_READONLY

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class PanelQuality(wx.Panel):
    def __init__(self, *args, **kwds):
        # begin wxGlade: PanelQuality.__init__
        kwds["style"] = kwds.get("style", 0) | wx.TAB_TRAVERSAL
        wx.Panel.__init__(self, *args, **kwds)
        self.CheckConfidenceIntervalsFlag = wx.CheckBox(self, wx.ID_ANY, " Do Confidence Intervals")
        self.labelAlpha = wx.StaticText(self, wx.ID_ANY, "Alpha:")
        self.FloatConfidenceAlpha = FloatSpin(self, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=1.0, agwStyle=FS_LEFT, style=wx.SP_ARROW_KEYS | wx.TE_PROCESS_ENTER)
        self.labelCalc = wx.StaticText(self, wx.ID_ANY, "Calculate for: ")
        self.CheckConfidenceAreaFlagFlag = wx.CheckBox(self, wx.ID_ANY, "Area")
        self.CheckCofidencePpmFlag = wx.CheckBox(self, wx.ID_ANY, "PPM  ")
        self.CheckConfidenceLinewidthFlag = wx.CheckBox(self, wx.ID_ANY, "Linewidth")
        self.CheckConfidencePhaseFlag = wx.CheckBox(self, wx.ID_ANY, "Phase")
        self.CheckCramerRaoFlag = wx.CheckBox(self, wx.ID_ANY, " Do Cramer-Rao Bounds")
        self.labelNoiseStr = wx.StaticText(self, wx.ID_ANY, "Start: ")
        self.FloatCramerRaoPpmStart = FloatSpin(self, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=1.0, agwStyle=FS_LEFT, style=wx.SP_ARROW_KEYS | wx.TE_PROCESS_ENTER)
        self.labelNoiseEnd = wx.StaticText(self, wx.ID_ANY, "End: ")
        self.FloatCramerRaoPpmEnd = FloatSpin(self, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=1.0, agwStyle=FS_LEFT, style=wx.SP_ARROW_KEYS | wx.TE_PROCESS_ENTER)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_CHECKBOX, self.on_confidence_intervals_flag, self.CheckConfidenceIntervalsFlag)
        self.Bind( EVT_FLOATSPIN, self.on_confidence_alpha, self.FloatConfidenceAlpha)
        self.Bind(wx.EVT_CHECKBOX, self.on_confidence_area_flag, self.CheckConfidenceAreaFlagFlag)
        self.Bind(wx.EVT_CHECKBOX, self.on_confidence_ppm_flag, self.CheckCofidencePpmFlag)
        self.Bind(wx.EVT_CHECKBOX, self.on_confidence_linewidth_flag, self.CheckConfidenceLinewidthFlag)
        self.Bind(wx.EVT_CHECKBOX, self.on_confidence_phase_flag, self.CheckConfidencePhaseFlag)
        self.Bind(wx.EVT_CHECKBOX, self.on_cramer_rao_flag, self.CheckCramerRaoFlag)
        self.Bind( EVT_FLOATSPIN, self.on_cramer_rao_ppm_start, self.FloatCramerRaoPpmStart)
        self.Bind( EVT_FLOATSPIN, self.on_cramer_rao_ppm_end, self.FloatCramerRaoPpmEnd)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: PanelQuality.__set_properties
        pass
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: PanelQuality.__do_layout
        sizer_71 = wx.BoxSizer(wx.VERTICAL)
        sizer_33 = wx.StaticBoxSizer(wx.StaticBox(self, wx.ID_ANY, "Cramer-Rao Bounds"), wx.VERTICAL)
        sizer_75 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_74 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_9 = wx.StaticBoxSizer(wx.StaticBox(self, wx.ID_ANY, "Confidence Intervals"), wx.VERTICAL)
        sizer_73 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_72 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_72.Add(self.CheckConfidenceIntervalsFlag, 0, wx.ALIGN_CENTER_VERTICAL | wx.RIGHT, 12)
        sizer_72.Add(self.labelAlpha, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT | wx.RIGHT, 4)
        sizer_72.Add(self.FloatConfidenceAlpha, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_9.Add(sizer_72, 0, wx.BOTTOM | wx.EXPAND | wx.TOP, 4)
        sizer_73.Add(self.labelCalc, 0, wx.ALIGN_CENTER_VERTICAL | wx.RIGHT, 3)
        sizer_73.Add(self.CheckConfidenceAreaFlagFlag, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT | wx.RIGHT, 8)
        sizer_73.Add(self.CheckCofidencePpmFlag, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT | wx.RIGHT, 4)
        sizer_73.Add(self.CheckConfidenceLinewidthFlag, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT | wx.RIGHT, 4)
        sizer_73.Add(self.CheckConfidencePhaseFlag, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT | wx.RIGHT, 4)
        sizer_9.Add(sizer_73, 0, wx.BOTTOM | wx.EXPAND | wx.TOP, 4)
        sizer_71.Add(sizer_9, 0, wx.BOTTOM | wx.EXPAND | wx.TOP, 4)
        sizer_74.Add(self.CheckCramerRaoFlag, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT | wx.RIGHT, 0)
        sizer_33.Add(sizer_74, 0, wx.BOTTOM | wx.EXPAND | wx.TOP, 4)
        labelNoise = wx.StaticText(self, wx.ID_ANY, "Noise Measure Range [PPM]:")
        sizer_75.Add(labelNoise, 0, wx.ALIGN_CENTER_VERTICAL | wx.RIGHT, 4)
        sizer_75.Add(self.labelNoiseStr, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT | wx.RIGHT, 4)
        sizer_75.Add(self.FloatCramerRaoPpmStart, 0, wx.ALIGN_CENTER_VERTICAL | wx.RIGHT, 4)
        sizer_75.Add(self.labelNoiseEnd, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT | wx.RIGHT, 4)
        sizer_75.Add(self.FloatCramerRaoPpmEnd, 0, 0, 0)
        sizer_33.Add(sizer_75, 0, wx.BOTTOM | wx.EXPAND | wx.TOP, 2)
        sizer_71.Add(sizer_33, 0, wx.BOTTOM | wx.EXPAND | wx.TOP, 4)
        self.SetSizer(sizer_71)
        sizer_71.Fit(self)
        self.Layout()
        # end wxGlade

    def on_confidence_intervals_flag(self, event):  # wxGlade: PanelQuality.<event_handler>
        print("Event handler 'on_confidence_intervals_flag' not implemented!")
        event.Skip()

    def on_confidence_alpha(self, event):  # wxGlade: PanelQuality.<event_handler>
        print("Event handler 'on_confidence_alpha' not implemented!")
        event.Skip()

    def on_confidence_area_flag(self, event):  # wxGlade: PanelQuality.<event_handler>
        print("Event handler 'on_confidence_area_flag' not implemented!")
        event.Skip()

    def on_confidence_ppm_flag(self, event):  # wxGlade: PanelQuality.<event_handler>
        print("Event handler 'on_confidence_ppm_flag' not implemented!")
        event.Skip()

    def on_confidence_linewidth_flag(self, event):  # wxGlade: PanelQuality.<event_handler>
        print("Event handler 'on_confidence_linewidth_flag' not implemented!")
        event.Skip()

    def on_confidence_phase_flag(self, event):  # wxGlade: PanelQuality.<event_handler>
        print("Event handler 'on_confidence_phase_flag' not implemented!")
        event.Skip()

    def on_cramer_rao_flag(self, event):  # wxGlade: PanelQuality.<event_handler>
        print("Event handler 'on_cramer_rao_flag' not implemented!")
        event.Skip()

    def on_cramer_rao_ppm_start(self, event):  # wxGlade: PanelQuality.<event_handler>
        print("Event handler 'on_cramer_rao_ppm_start' not implemented!")
        event.Skip()

    def on_cramer_rao_ppm_end(self, event):  # wxGlade: PanelQuality.<event_handler>
        print("Event handler 'on_cramer_rao_ppm_end' not implemented!")
        event.Skip()

# end of class PanelQuality

class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((1314, 1069))
        self.PanelQuality = PanelQuality(self, wx.ID_ANY)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("frame_1")
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_1.Add(self.PanelQuality, 0, 0, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

# end of class MyFrame
