Metadata-Version: 2.1
Name: PhotoDB
Version: 0.0.11
Summary: App for cataloguing vintage cameras, lenses, films, negatives & prints
Home-page: https://github.com/djjudas21/photodb-django
Author: Jonathan Gazeley
Author-email: photodb@jonathangazeley.com
License: MIT
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Other Environment
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.6
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: Django (==2.2.4)
Requires-Dist: pytz (==2019.2)
Requires-Dist: sqlparse (==0.3.0)
Requires-Dist: django-admin-tools (==0.8.1)
Requires-Dist: django-fluent-dashboard (==1.0.1)
Requires-Dist: django-money (==0.15)
Requires-Dist: django-choices (==1.7.0)
Requires-Dist: django-favicon (==0.1.3)

# PhotoDB

PhotoDB is an app for film photography that can be used to track cameras, lenses, accessories, films, negatives and prints, to fully
catalogue a collection of photographic equipment as well as the pictures that are made with them. Read the [Concepts](docs/CONCEPTS.md)
section for full details on the capabilities of PhotoDB.

## Installing PhotoDB

### From pip

```sh
pip install PhotoDB
```

### From source

To install PhotoDB from source, clone this repo and run:

```sh
pip install .
```

This method of installation is required if you want to work on the source code.

### With Docker

To create a named container running PhotoDB, use the following command. You can change the `-p` settings
if you wish to serve PhotoDB on a different port.

```sh
docker create --name photodb -p 8000:8000 djjudas21/photodb-django
```

## Configuring PhotoDB

PhotoDB will run out of the box with no additional configuration, by creating an SQLite database in its own directory.

If you wish to use an external database then copy `photodb/local_settings.py.template` to
`photodb/local_settings.py` and customise the database settings for your environment.

After the database is configured, apply the migrations and create your user account:

```sh
python manage.py migrate
python manage.py createsuperuser
```

## Running PhotoDB

### From pip or source

```sh
python manage.py runserver
```

and navigate to [http://localhost:8000](http://localhost:8000)

### From Docker

```sh
docker start photodb
```

## See also

* [Concepts](docs/CONCEPTS.md)
* [Contributing](docs/CONTRIBUTING.md)



