[tool.poetry]
name = "sitri"
version = "0.4.14"
description = "Library for one endpoint config and credentials managment"
authors = ["Alexander Lavrov <egnod@ya.ru>"]
license = "MIT"

keywords = ["packaging", "poetry"]

repository = "https://github.com/Egnod/sitri"
documentation = "https://sitri.readthedocs.io"

readme = "README.md"

[tool.poetry.dependencies]
python = "^3.7"


[tool.poetry.dev-dependencies]
pytest = "^5.2"
python-consul = "^1.1"
redis = "^3.3"
vedis = "^0.7.1"
pytest-mock = "^1.11"
mypy = "^0.730.0"
bumpversion = "^0.5.3"
pre-commit = "^1.18"
coverage = "^4.5"
pytest-cov = "^2.7"
vulture = "^1.1"
radon = "^4.0"
tidypy = "^0.11.0"
Sphinx = "^2.2"
rinohtype = "^0.3.1"
sphinx-autodoc-typehints = "^1.8"

[tool.black]
line-length = 120
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | migrations
  )
)
'''

[tool.tidypy]
exclude = [".*_cache/", "poetry.lock", "tests/", "stack.yml"]
merge-issues = true
workers = 3
disabled = []
noqa = true
extends = []
ignore-missing-extends = false

[tool.tidypy.2to3]
use = false
filters = ["\\.py$"]
disabled = []

[tool.tidypy.bandit]
use = true
filters = ["\\.py$"]
disabled = []

[tool.tidypy.bandit.options]
confidence = "low"
severity = "low"
ignore-nosec = false

[tool.tidypy.dlint]
use = true
filters = ["\\.py$"]
disabled = []

[tool.tidypy.eradicate]
use = true
filters = ["\\.py$"]
disabled = []

[tool.tidypy.jsonlint]
use = true
filters = ["\\.json$"]
disabled = []

[tool.tidypy.manifest]
use = true
filters = ["setup\\.py$"]
disabled = []

[tool.tidypy.mccabe]
use = true
filters = ["\\.py$"]
disabled = []

[tool.tidypy.mccabe.options]
max-complexity = 10

[tool.tidypy.polint]
use = true
filters = ["\\.pot?$"]
disabled = []

[tool.tidypy.polint.options]
variable-formats = ["python-brace-format", "python-format"]

[tool.tidypy.pycodestyle]
use = true
filters = ["\\.py$"]
disabled = []

[tool.tidypy.pycodestyle.options]
max-line-length = 79
hang-closing = false

[tool.tidypy.pydiatra]
use = true
filters = ["\\.py$"]
disabled = []

[tool.tidypy.pydocstyle]
use = true
filters = ["\\.py$"]
disabled = []

[tool.tidypy.pyflakes]
use = true
filters = ["\\.py$"]
disabled = []

[tool.tidypy.pylint]
use = true
filters = []
disabled = []

[tool.tidypy.pylint.options]
plugins = []
extension-pkg-whitelist = []

[tool.tidypy.pyroma]
use = true
filters = ["setup\\.py$"]
disabled = []

[tool.tidypy.rstlint]
use = true
filters = ["\\.rst$"]
disabled = []

[tool.tidypy.rstlint.options]
ignore-directives = []
ignore-roles = []
#sphinx-extensions = null  # To use: uncomment and replace null with value

[tool.tidypy.rstlint.options.load-directives]

[tool.tidypy.secrets]
use = true
filters = []
disabled = []

[tool.tidypy.vulture]
use = true
filters = ["\\.py$"]
disabled = []

[tool.tidypy.vulture.options]
#ignore-names = null  # To use: uncomment and replace null with value
#ignore-decorators = null  # To use: uncomment and replace null with value
min-confidence = 0
whitelist = []

[tool.tidypy.yamllint]
use = true
filters = ["\\.yaml$", "\\.yml$"]
disabled = []

[[tool.tidypy.requested_reports]]
type = "console"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
