{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"prin",
				"print to terminal overwriting last line output\tcomp"
			],
			[
				"sle",
				"time> sleep\tcomp"
			],
			[
				"ra",
				"random integer\tcomp"
			],
			[
				"fzi",
				"for items in zip lists\tcomp"
			],
			[
				"mutl",
				"fundamentals> multiprocess\tcomp"
			],
			[
				"fundatabase",
				"fundamentals> setup database connection from dictionary of settings\tcomp"
			],
			[
				"ty",
				"is instance of type\tcomp"
			],
			[
				"dicsql",
				"fundamentals> convert python dictionary to sql table\tcomp"
			],
			[
				"inlidic",
				"fundamentals> insert a list of python dictionaries into sql database\tcomp"
			],
			[
				"htmin",
				"hmpty> lookup coordinate trixel htm id\tcomp"
			],
			[
				"datdictiona",
				"fundamentals> setup database connection from dictionary of settings\tcomp"
			],
			[
				"man",
				"manyValueList〔argument〕"
			],
			[
				"sqwri",
				"fundamentals> sql write query\tcomp"
			],
			[
				"sdatacon",
				"fundamentals> setup database connection from dictionary of settings\tcomp"
			],
			[
				"sqlwr",
				"fundamentals> sql write query\tcomp"
			],
			[
				"sedatacon",
				"fundamentals> setup database connection from dictionary of settings\tcomp"
			],
			[
				"functmp",
				"tmpx> def function\tcomp"
			],
			[
				"mult",
				"fundamentals> multiprocess\tcomp"
			],
			[
				"compop",
				"subprocess> system command with popen\tcomp"
			],
			[
				"path",
				"dcu> add_directories_to_path\tcomp"
			],
			[
				"consql",
				"fundamentals> convert sqlite database to mysql\tcomp"
			],
			[
				"doop",
				"docopt> usage tempx\tcomp"
			],
			[
				"basna",
				"os> basename from path\tcomp"
			],
			[
				"funyaml",
				"fundamentals> import contents of single yaml file into database\tcomp"
			],
			[
				"docop",
				"docopt> usage tempx\tcomp"
			],
			[
				"regefi",
				"re> regex finditer function\tcomp"
			],
			[
				"fundict",
				"fundamentals> convert python dictionary to sql table\tcomp"
			],
			[
				"syspop",
				"subprocess> system command with popen\tcomp"
			],
			[
				"nowst",
				"time> now as string\tcomp"
			],
			[
				"remote",
				"remoteDBConn"
			],
			[
				"sqldate",
				"fundamentals> get now as mysql datetime\tcomp"
			],
			[
				"sqldat",
				"fundamentals> date:get now as mysql datetime\ttag"
			],
			[
				"nowsr",
				"time> now as string\tcomp"
			],
			[
				"proptmo",
				"tmpx> python property\tcomp"
			],
			[
				"unpac",
				"docopt> unpack clargs\tcomp"
			],
			[
				"module",
				"tmpx> marshall cgi page test module\tcomp"
			],
			[
				"locals",
				"unpack dictionary to local variables\tcomp"
			],
			[
				"stan",
				"tmpx> tmpx stand alone script\tcomp"
			],
			[
				"e",
				"error"
			],
			[
				"python",
				"sys> add to python path\tcomp"
			],
			[
				"syste",
				"subprocess> system command with popen\tcomp"
			],
			[
				"order",
				"collections> dict ordered\tcomp"
			],
			[
				"modi",
				"get file modified and created dates\tcomp"
			],
			[
				"listfiles",
				"fundamentals> recursively list files and or folders in a directory\tcomp"
			],
			[
				"remodirect",
				"shutil> remove non empty directory\tcomp"
			],
			[
				"remodirec",
				"os> remove empty directory\tcomp"
			],
			[
				"yamld",
				"yaml> dump to file onedoc\tcomp"
			],
			[
				"json",
				"json> dump json\tcomp"
			],
			[
				"tmpme",
				"tmpx> class method\tcomp"
			],
			[
				"tmmeth",
				"tmpx> get method tempx\tcomp"
			],
			[
				"proper",
				"tmpx> python property\tcomp"
			],
			[
				"pick",
				"pickle> un file\tcomp"
			],
			[
				"openfiwr",
				"tmpx> open file to write\tcomp"
			],
			[
				"condiction",
				"fundamentals> convert python dictionary to sql table\tcomp"
			],
			[
				"sqlread",
				"fundamentals> sql read query\tcomp"
			],
			[
				"tblexis",
				"fundamentals> test if mysql table exists\tcomp"
			],
			[
				"sqread",
				"fundamentals> sql read query\tcomp"
			],
			[
				"nrai",
				"nose> assert raises\tcomp"
			],
			[
				"norai",
				"nose> raises decorator\tcomp"
			],
			[
				"n",
				"nose> assert false\tcomp"
			],
			[
				"ass",
				"assert if expression is true\tcomp"
			],
			[
				"mkdir",
				"os> recursive mkdir\tcomp"
			],
			[
				"openwr",
				"tmpx> open file to write\tcomp"
			],
			[
				"s",
				"logging for console\tcomp"
			],
			[
				"function",
				"tmpx> function:def function\ttag"
			],
			[
				"funct",
				"tmpx> function:def with logger\ttag"
			],
			[
				"cod",
				"code block\tcomp"
			],
			[
				"patmo",
				"os> path:directory path of this module\ttag"
			],
			[
				"opefil",
				"open utf8 file to write\tcomp"
			],
			[
				"dloge",
				"tmpx> def with logger\tcomp"
			],
			[
				"pathtomod",
				"os> path:directory path of this module\ttag"
			],
			[
				"pathdir",
				"os> path to directory of file\tcomp"
			],
			[
				"pathto",
				"path to this module file\tcomp"
			],
			[
				"raw",
				"raw input with default value from previous settings\tcomp"
			],
			[
				"del",
				"dict delete key\tcomp"
			],
			[
				"exist",
				"tmpx> test does file exist\tcomp"
			],
			[
				"testwo",
				"docopt> test method function works as expected\tcomp"
			],
			[
				"tmp",
				"tmpx> bash cl script tmpx\tcomp"
			],
			[
				"add",
				"add_hook_to_bitbucket_repo  (module)"
			],
			[
				"url",
				"urllib> encode string for url\tcomp"
			],
			[
				"sys",
				"sys> exit\tcomp"
			],
			[
				"bas",
				"os> basename from path\tcomp"
			],
			[
				"log",
				"dl> log error\tcomp"
			],
			[
				"cop",
				"shutil> copy file\tcomp"
			],
			[
				"exis",
				"os> if file or folder exists\tcomp"
			],
			[
				"exi",
				"os> if file or folder exists\tcomp"
			],
			[
				"mod",
				"tmpx> packaged module\tcomp"
			],
			[
				"list",
				"list find index of item\tcomp"
			],
			[
				"syst",
				"subprocess> system command with popen\tcomp"
			],
			[
				"load",
				"yaml> load file onedoc\tcomp"
			],
			[
				"cd",
				"os> change directory cd\tcomp"
			],
			[
				"xkw",
				"xt-kwarg_key_and_value\tsnip"
			],
			[
				"redir",
				"shutil> remove non empty directory\tcomp"
			],
			[
				"remo",
				"os> remove file\tcomp"
			],
			[
				"try",
				"try pass\tcomp"
			],
			[
				"wri",
				"write to writeFile\tcomp"
			],
			[
				"openw",
				"tmpx> open file to write\tcomp"
			],
			[
				"copy",
				"subprocess> copy directory\tcomp"
			],
			[
				"w",
				"dryxPython.webcrawlers"
			],
			[
				"for",
				"for item in range len\tcomp"
			],
			[
				"xmlfin",
				"xml> find all direct children with tag of current element\tcomp"
			],
			[
				"deb",
				"dl> log debug\tcomp"
			],
			[
				"opew",
				"tmpx> open file to write\tcomp"
			],
			[
				"open",
				"tmpx> open:file open read\ttag"
			],
			[
				"iter",
				"xml> iterate over nodes with tag\tcomp"
			],
			[
				"forch",
				"xml> for child in root\tcomp"
			],
			[
				"findit",
				"xml> find all direct children with tag of current element\tcomp"
			],
			[
				"getel",
				"xml> get attribute of element\tcomp"
			],
			[
				"findal",
				"xml> find all direct children with tag of current element\tcomp"
			],
			[
				"read",
				"xml> read xml data from file\tcomp"
			],
			[
				"fileopen",
				"tmpx> file open read\tcomp"
			],
			[
				"web",
				"dwc> download single webpage from url\tcomp"
			],
			[
				"tmdef",
				"tmpx> def with logger\tcomp"
			],
			[
				"wcs",
				"wcs> print wsc contents\tcomp"
			],
			[
				"mv",
				"os> mv file\tcomp"
			],
			[
				"rase",
				"dat> ra sexegesimal to decimal\tcomp"
			],
			[
				"yaml",
				"yaml> load file onedoc\tcomp"
			],
			[
				"exten",
				"os> filename without extension\tcomp"
			],
			[
				"direct",
				"os> directory path of this module\tcomp"
			],
			[
				"page",
				"pageHeader\tdryx"
			],
			[
				"header",
				"pageHeader\tdryx"
			],
			[
				"col",
				"column-tbs\tdryx"
			],
			[
				"forro",
				"for-row-in-rows\tgen> for row in rows"
			],
			[
				"pro",
				"projectSetup\tdryx"
			],
			[
				"import",
				"import--matplotlib\tdryx"
			],
			[
				"t",
				"tag_file  (module)"
			],
			[
				"is",
				"is-instance-of-type\tgen> is instance of type"
			],
			[
				"reg",
				"regex-finditer-function\tre> regex search function"
			]
		]
	},
	"buffers":
	[
		{
			"file": "feeders/atlas/tests/test_data.py",
			"settings":
			{
				"buffer_size": 2234,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 192 files for \"ATLAS\" (case sensitive)\n\n/Users/Dave/git_repos/marshallEngine/marshallEngine/feeders/atlas/data.py:\n    4: *import the ATLAS stream into the marshall*\n   24:     *Import the ATLAS transient data into the marshall database*\n   60:         self.survey = \"ATLAS\"\n   80:             surveyName=\"ATLAS\", withinLastDays=withinLastDays)\n   92:         \"\"\"*clean up the list of dictionaries containing the ATLAS data, pre-ingest*\n   95:             - ``surveyName`` -- the ATLAS survey name\n  103:             To clean the data from the ATLAS survey:\n  107:                 dictList = ingesters._clean_data_pre_ingest(surveyName=\"ATLAS\")\n\n/Users/Dave/git_repos/marshallEngine/marshallEngine/feeders/atlas/images.py:\n    4: *cache the ATLAS image stamps*\n   28:     *cacher for the ATLAS image stamps*\n   65:             \"atlas\", \"ATLAS\"]\n   74:         self.survey = \"ATLAS\"\n\n/Users/Dave/git_repos/marshallEngine/marshallEngine/feeders/ATLAS/tests/test_data.py:\n   57:             surveyName=\"ATLAS\", withinLastDays=50)\n\n/Users/Dave/git_repos/marshallEngine/marshallEngine/feeders/atlas/tests/test_data.py:\n   57:             surveyName=\"ATLAS\", withinLastDays=50)\n\n14 matches across 4 files\n",
			"settings":
			{
				"buffer_size": 1209,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "feeders/__init__.py",
			"settings":
			{
				"buffer_size": 137,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "feeders/atlas/images.py",
			"settings":
			{
				"buffer_size": 1999,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "cl_utils.py",
			"settings":
			{
				"buffer_size": 6535,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/Dave/Dropbox/config/dave-macbook/marshallEngine/marshallEngine.yaml",
			"settings":
			{
				"buffer_size": 5086,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/Dave/git_repos/dryxPyramid/setup.py",
			"settings":
			{
				"buffer_size": 986,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "feeders/atlas/data.py",
			"settings":
			{
				"buffer_size": 6114,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "feeders/data.py",
			"settings":
			{
				"buffer_size": 14340,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 400.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"gist",
				"Gist: Add File to Gist"
			],
			[
				"add",
				"Gist: Add File to Gist"
			],
			[
				"publi",
				"Gist: Create Public Gist"
			],
			[
				"brows",
				"Gist: Open Gist in Browser"
			],
			[
				"gis",
				"Gist: Create Public Gist"
			],
			[
				"add gist",
				"Gist: Add File to Gist"
			],
			[
				"add ",
				"Git: Add Current File"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"pytohn",
				"PythonTest: Run project tests"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"finish",
				"Git-flow: Feature Finish"
			],
			[
				"git com",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Quick Add"
			],
			[
				"gitco",
				"Git: Commit"
			],
			[
				"finis",
				"Git-flow: Feature Finish"
			],
			[
				"gitfea",
				"Git-flow: Feature Start"
			],
			[
				"rst",
				"Set Syntax: reStructuredText"
			],
			[
				"synsublime",
				"Set Syntax: Sublime Text Snippet (Raw)"
			],
			[
				"gicom",
				"Git: Commit"
			],
			[
				"gitad",
				"Git: Add All"
			],
			[
				"rub",
				"Set Syntax: Ruby"
			],
			[
				"git push",
				"Git: Push Current Branch"
			],
			[
				"git ",
				"Git: Commit"
			],
			[
				"ipy",
				"SublimeREPL: Python - IPython"
			],
			[
				"python",
				"Set Syntax: Python"
			],
			[
				"run",
				"PythonTestRunner: Run test"
			],
			[
				"runtet",
				"PythonTestRunner: Run test"
			],
			[
				"test",
				"PythonTestRunner: Run test"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"package",
				"Package Control: Discover Packages"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Add Channel"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"subsav",
				"SublimeLinter: Load-Save Linting"
			],
			[
				"linter",
				"SublimeLinter: Background Linting"
			],
			[
				"sublin",
				"SublimeLinter: Show Error List"
			],
			[
				"pl",
				"Set Syntax: Plain Text"
			],
			[
				"Set Syntax: Tasks",
				"Set Syntax: Tasks"
			],
			[
				"html",
				"Set Syntax: HTML"
			],
			[
				"Snippet: type",
				"Snippet: gen> is instance of type"
			],
			[
				"plain",
				"Set Syntax: Plain Text"
			],
			[
				"Snippet: search",
				"Snippet: re> regex search function"
			],
			[
				"Snippet: searh",
				"Snippet: re> search for regex"
			],
			[
				"Snippet: sear",
				"Snippet: re> search for regex"
			],
			[
				"xml",
				"Set Syntax: XML"
			],
			[
				"syntax sni",
				"Set Syntax: Sublime Text Snippet (Raw)"
			],
			[
				"Snippet: mysqlw\t",
				"Snippet: dms> exe mysql write command given sql query"
			],
			[
				"Snippet: kwar\t",
				"Snippet: gen> kwargs"
			],
			[
				"bro",
				"Google Apps Scripts: Browse projects"
			],
			[
				"scriot",
				"Google Apps Scripts: Browse projects"
			],
			[
				"au",
				"Google Apps Scripts: Authenticate"
			],
			[
				"goo",
				"Google Apps Scripts: Authenticate"
			],
			[
				"google",
				"Google Apps Scripts: Authenticate"
			],
			[
				"googleapp",
				"Google Apps Scripts: Authenticate"
			],
			[
				"auth",
				"Google Apps Scripts: Authenticate"
			],
			[
				"brow",
				"Google Apps Scripts: Browse projects"
			],
			[
				"googlea",
				"Google Apps Scripts: Authenticate"
			],
			[
				"googler",
				"Google Apps Scripts: Authenticate"
			],
			[
				"google a",
				"Google Apps Scripts: Browse projects"
			],
			[
				"goog",
				"Google Apps Scripts: Browse projects"
			],
			[
				"Snippet: clss",
				"Snippet: gen> class tmpx"
			],
			[
				"Snippet: doc",
				"Snippet: docopt> usage tempx"
			],
			[
				"Snippet: docop",
				"Snippet: docopt> usage tempx"
			],
			[
				"Snippet: docop\t",
				"Snippet: docopt> usage tempx"
			],
			[
				"Snippet: tmpx",
				"Snippet: mpl> tmpx matplotlib figure plot"
			],
			[
				"Snippet: plot\t",
				"Snippet: mpl> mpl scatter plot"
			],
			[
				"Snippet: read\t",
				"Snippet: jq> ready event function"
			],
			[
				"Snippet: popen",
				"Snippet: subprocess> execute system command with popen"
			],
			[
				"Snippet: open\t",
				"Snippet: gen> file open read"
			],
			[
				"Snippet: def",
				"Snippet: gen> def"
			],
			[
				"Snippet: match\t",
				"Snippet: re> match with regex"
			],
			[
				"Snippet: parent\t",
				"Snippet: jq> get parent of each element in set of matched elements optionally filtered by selector"
			],
			[
				"Snippet: templa",
				"Snippet: jq> module template"
			],
			[
				"Snippet: docstrin",
				"Snippet: dpc> setup docstring keys from selected usage options"
			],
			[
				"Snippet: setupw",
				"Snippet: dpc> setup worker function parameters from usage method"
			],
			[
				"Snippet: mix\t",
				"Snippet: scss> mixin"
			],
			[
				"Snippet: mix",
				"Snippet: = Shortcut to @mixin"
			],
			[
				"css",
				"Set Syntax: CSS"
			],
			[
				"Snippet: mixin",
				"Snippet: = Shortcut to @mixin"
			],
			[
				"Snippet: darken",
				"Snippet: scss> darken color"
			],
			[
				"Snippet: sedoc",
				"Snippet: dpc> setup docstring keys from selected usage options"
			],
			[
				"Snippet: setpwo",
				"Snippet: dpc> setup worker function parameters from usage method"
			],
			[
				"Snippet: fill",
				"Snippet: dpc> fill kwargs for test method based on selected usage string"
			],
			[
				"Snippet: testcom",
				"Snippet: dpc> class method to test a command line usage"
			],
			[
				"Snippet: setdoc",
				"Snippet: dpc> setup docstring keys from selected usage options"
			],
			[
				"Snippet: setip",
				"Snippet: dpc> setup worker function parameters from usage method"
			],
			[
				"Snippet: dpcwor",
				"Snippet: dpc> setup worker function parameters from usage method"
			],
			[
				"Snippet: dpcke",
				"Snippet: dpc> setup worker function parameters from usage method"
			],
			[
				"Snippet: debu",
				"Snippet: dl> log debug"
			],
			[
				"Snippet: exist",
				"Snippet: gen> test directory path exists"
			],
			[
				"Snippet: module",
				"Snippet: os> directory path of this module"
			],
			[
				"Snippet: kw",
				"Snippet: dpc> fill kwargs for test method based on selected usage string"
			],
			[
				"Snippet: kwa",
				"Snippet: dpc> fill kwargs for test method based on selected usage string"
			],
			[
				"Snippet: kwar",
				"Snippet: dpc> fill kwargs for test method based on selected usage string"
			],
			[
				"java",
				"Set Syntax: Java"
			],
			[
				"perl",
				"SublimeREPL: Perl"
			],
			[
				"Snippet: cg",
				"Snippet: gen> module cgi"
			],
			[
				"Snippet: cgi",
				"Snippet: gen> module cgi"
			],
			[
				"Snippet: progre",
				"Snippet: dhf> get progress bar tbs style"
			],
			[
				"Snippet: ul",
				"Snippet: dhf> get unordered list"
			],
			[
				"Snippet: repsonse",
				"Snippet: dhf> create twitter bootstrap responsive nav bar component"
			],
			[
				"Snippet: dropdown",
				"Snippet: dhf> create dropdown option list"
			],
			[
				"Snippet: anc",
				"Snippet: dhf> get anchor"
			],
			[
				"Snippet: li",
				"Snippet: dhf> li"
			],
			[
				"Snippet: form",
				"Snippet: dhf> form"
			],
			[
				"Snippet: dhftab",
				"Snippet: dhf> get tabbable navigation"
			],
			[
				"Snippet: dhfdiv",
				"Snippet: dhf> get basic div w block content"
			],
			[
				"Snippet: conte",
				"Snippet: gen> append to content"
			],
			[
				"Snippet: unde",
				"Snippet: dhf> get unordered list"
			],
			[
				"Snippet: cont",
				"Snippet: gen> append to content"
			],
			[
				"Snippet: button\t",
				"Snippet: dhf> get button method"
			],
			[
				"Snippet: content",
				"Snippet: gen> append to content"
			],
			[
				"Snippet: con",
				"Snippet: gen> append to content"
			],
			[
				"synsubl",
				"Set Syntax: Sublime Completions"
			],
			[
				"Snippet: ap",
				"Snippet: gen> append to content"
			],
			[
				"Snippet: reg",
				"Snippet: snip> placeholder regex"
			],
			[
				"syntsublime",
				"Set Syntax: Sublime Text Commands"
			],
			[
				"syntsni",
				"Set Syntax: Sublime Text Snippet (Raw)"
			],
			[
				"Snippet: dhfcode",
				"Snippet: dhf> get code section"
			],
			[
				"Snippet:dhf column",
				"Snippet: dhf> get column block for twiiter bootstrap static layout grid"
			],
			[
				"Snippet: dhf div",
				"Snippet: dhf> get basic div w block content"
			],
			[
				"Snippet: dhfrow",
				"Snippet: dhf> create row using twitter bootstrap static layout grid"
			],
			[
				"scss",
				"Set Syntax: SCSS"
			],
			[
				"scope",
				"Scope Hunter: Show Scope Under Cursor(s)"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"syn",
				"Set Syntax: Python"
			],
			[
				"ipython",
				"SublimeREPL: Python - IPython"
			],
			[
				"ipyothn",
				"SublimeREPL: Python - IPython"
			]
		],
		"width": 632.0
	},
	"console":
	{
		"height": 326.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/Dave/git_repos/marshallEngine",
		"/Users/Dave/git_repos/marshallEngine/docs",
		"/Users/Dave/git_repos/marshallEngine/marshallEngine",
		"/Users/Dave/git_repos/marshallEngine/marshallEngine/feeders",
		"/Users/Dave/git_repos/marshallEngine/marshallEngine/feeders/atlas",
		"/Users/Dave/git_repos/marshallEngine/marshallEngine/feeders/atlas/tests",
		"/Users/Dave/git_repos/marshallEngine/marshallEngine/housekeeping",
		"/Users/Dave/git_repos/marshallEngine/marshallEngine/lightcurves",
		"/Users/Dave/git_repos/marshallEngine/marshallEngine/lightcurves/tests"
	],
	"file_history":
	[
		"/Users/Dave/git_repos/marshallEngine/marshallEngine/feeders/ATLAS/tests/test_images.py",
		"/Users/Dave/git_repos/marshallEngine/marshallEngine/lightcurves/tests/test_marshall_lightcurves.py",
		"/Users/Dave/git_repos/marshallEngine/marshallEngine/lightcurves/marshall_lightcurves.py",
		"/Users/Dave/Library/Application Support/Sublime Text 3/Packages/User/Python/module_snippets/fundamentals/Python.fundamentals.multiprocess.sublime-snippet",
		"/Users/Dave/git_repos/marshallEngine/marshallEngine/housekeeping/update_transient_summaries.py",
		"/Users/Dave/git_repos/marshallEngine/marshallEngine/cl_utils.py",
		"/Users/Dave/git_repos/marshallEngine/marshallEngine/feeders/images.py",
		"/Users/Dave/git_repos/marshallEngine/marshallEngine/feeders/data.py",
		"/Users/Dave/git_repos/marshallEngine/marshallEngine/feeders/panstarrs/data.py",
		"/Users/Dave/git_repos/marshallEngine/marshallEngine/feeders/atlas/data.py",
		"/Users/Dave/Dropbox/config/dave-macbook/marshallEngine/marshallEngine.yaml",
		"/Users/Dave/git_repos/marshall_webapp/marshall_webapp/settings/pessto_marshall_mac.yaml",
		"/Users/Dave/git_repos/marshallEngine/marshallEngine/feeders/panstarrs/tests/test_data.py",
		"/Users/Dave/git_repos/marshallEngine/marshallEngine/feeders/panstarrs/tests/test_images.py",
		"/Users/Dave/git_repos/marshallEngine/marshallEngine/feeders/panstarrs/images.py",
		"/Users/Dave/git_repos/marshallEngine/marshallEngine/lightcurves/__init__.py",
		"/Users/Dave/git_repos/marshallEngine/setup.py",
		"/Users/Dave/Dropbox/config/dave-macbook/pessto_marshall_engine/pessto_marshall_engine.yaml",
		"/Users/Dave/Library/Application Support/Sublime Text 3/Packages/User/Python/module_snippets/marshallEngine/Python.me.plot-marshall-lightcurves-for-sources.sublime-snippet",
		"/Users/Dave/anaconda/envs/marshallEngine/lib/python2.7/site-packages/pymysql/err.py",
		"/Users/Dave/git_repos/marshallEngine/marshallEngine/feeders/__init__.py",
		"/Users/Dave/Dropbox/Desktop/my_back.cnf",
		"/Users/Dave/git_repos/marshallEngine/marshallEngine/feeders/panstarrs/__init__.py",
		"/Users/Dave/Library/Caches/com.binarynights.ForkLift-3/FileCache/9E20132B-9B9B-492A-A93E-B7B4B6FD1B03/my.cnf",
		"/etc/my.cnf",
		"/usr/local/mysql/data/mysql-error.err",
		"/usr/local/var/mysql/*.err",
		"/private/etc/hosts",
		"/private/etc/services",
		"/Users/Dave/git_repos/marshallEngine/marshallEngine/utKit.py",
		"/Users/Dave/git_repos/marshallEngine/marshallEngine/__init__.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py",
		"/Users/Dave/git_repos/fundamentals/setup.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/tests/input/mysql_scripts/42340d_since_20160921_tns_conesearch_spec copy.sql",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/tests/input/mysql_scripts/42340d_since_20160921_tns_conesearch_sources.sql",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/tests/input/mysql_scripts/42340d_since_20160921_tns_conesearch_sources copy.sql",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/tests/input/mysql_scripts/42340d_since_20160921_tns_conesearch_phot.sql",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/tests/input/mysql_scripts/42340d_since_20160921_tns_conesearch_phot copy.sql",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/tests/input/mysql_scripts/42340d_since_20160921_tns_conesearch_relatedFiles copy.sql",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/writequery.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/download/multiobject_download.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/download/extract_filename_from_url.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/times.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/readquery.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/files/tests/test_recursive_directory_listing.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/files/tests/test_tag.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/setup_database_connection.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/yaml_to_database.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/files/list_of_dictionaries_to_mysql_inserts.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/files/recursive_directory_listing.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/table_exists.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/renderer/list_of_dictionaries.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/renderer/tests/test_list_of_dictionaries.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/tests/test_fmultiprocess.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/tests/test_database.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/files/tests/test_fileChunker.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/files/fileChunker.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals.sublime-project",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/yaml_to_database.py.bak",
		"/Users/Dave/git_repos/fundamentals/fundamentals/download/tests/test__dump_files_to_local_drive.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/download/tests/test__fetch.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/download/tests/test_append_now_datestamp_to_filename.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/download/tests/test_extract_filename_from_url.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/download/tests/test_get_now_datetime_filestamp.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/download/tests/test_multiobject_download.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/directory_script_runner.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/tests/input/mysql_scripts/42340d_since_20160921_tns_conesearch_spec.sql",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/tests/test_readquery.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/tests/test_setup_database_connection.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/tests/test_directory_script_runner.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/tests/test_get_database_table_column_names.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py",
		"/Users/Dave/git_repos/fundamentals/nose2.cfg",
		"/Users/Dave/git_repos/fundamentals/fundamentals/logs.py",
		"/private/tmp/australia",
		"/Users/Dave/Library/Caches/com.binarynights.ForkLift-3/FileCache/AB23AE44-B513-461C-9E27-6A90D6FDEF6E/breaker.yaml",
		"/Users/Dave/Dropbox/config/dave-macbook/breaker/breaker.yaml",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/tests/test_sqlite2mysql.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/tests/test_table_exists.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/tests/test_writequery.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/tests/test_yaml_to_database.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/convert_dictionary_to_mysql_table.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/tests/output/example_settings_2.yaml",
		"/Users/Dave/git_repos/fundamentals/fundamentals/tests/test_logs.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/tests/test_times.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/tests/test_utKit.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/tests/input/example_settings_2.yaml",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/directory_script_runner.py.bak",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/sqlite2mysql.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/tools.py.bak",
		"/Users/Dave/git_repos/fundamentals/docs/source/_includes/tutorial.rst",
		"/Users/Dave/git_repos/fundamentals/docs/source/index.rst",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/database.py",
		"/Users/Dave/git_repos/sherlock/sherlock/database.py",
		"/Users/Dave/git_repos/sherlock/sherlock/transient_classifier.py",
		"/Users/Dave/Dropbox/config/dave-macbook/sherlock/sherlock_mac_marshall.yaml",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/Find Results",
		"/Users/Dave/git_repos/fundamentals/fundamentals/tools.py",
		"/Users/Dave/git_repos/fundamentals/fundamentals/mysql/pso3user@psdb2::3306",
		"/Users/Dave/Dropbox/config/dave-macbook/breaker/![](https:::live.staticflickr.com:7858:32637593677",
		"/Users/Dave/Dropbox/config/dave-macbook/breaker/https:::psweb.mp.qub.ac.uk:sne:pso3:psdb:candidate",
		"/Users/Dave/git_repos/fundamentals/docs/source/conf.py",
		"/Users/Dave/git_repos/fundamentals/docs/Makefile",
		"/Users/Dave/git_repos/fundamentals/README.rst",
		"/Users/Dave/git_repos/fundamentals/README.md",
		"/Users/Dave/.ssh/config",
		"/Users/Dave/git_repos/fundamentals/docs/source/_includes/usage.rst",
		"/Users/Dave/git_repos/fundamentals/docs/source/_includes/index.rst",
		"/Users/Dave/git_repos/fundamentals/fundamentals/fmultiprocess.py",
		"/Users/Dave/.bashrc",
		"/Users/Dave/.config/breaker/breaker.yaml",
		"/Users/Dave/git_repos/fundamentals/docs/source/_templates/layout.html",
		"/Users/Dave/git_repos/fundamentals/docs/source/_includes/description.rst",
		"/Users/Dave/git_repos/fundamentals/fundamentals/download/_dump_files_to_local_drive.py",
		"/Users/Dave/Dropbox/terminal/dryx_terminal_aliases.sh",
		"/Users/Dave/Dropbox/Desktop/ztf19aafmytc/README.md",
		"/Users/Dave/Dropbox/Desktop/eca650d6799d8f692bb827118acae1e7/2019_02_08_768543036215015007.avro",
		"/Users/Dave/Dropbox/Desktop/ztf19aafmytc/2019_02_08_768543036215015007.avro",
		"/Users/Dave/Dropbox/Desktop/ztf19aafmytc/plot_ztf_lightcurve_from_avro.py",
		"/Users/Dave/Desktop/mmd_to_rst.sh",
		"/Users/Dave/git_repos/pessto_marshall_quickstart_files/pessto_marshall_quickstart.yaml",
		"/Users/Dave/Dropbox/Desktop/ZTF19aahxpxd_spec_v_fainter_19p5_cls_g13_s1.obx",
		"/Users/Dave/git_repos/fundamentals/docs/source/_includes/license.rst",
		"/Users/Dave/git_repos/fundamentals/fundamentals.sublime-workspace",
		"/usr/local/bin/pinboard_tag_tidy_up",
		"/usr/local/bin/pinboard_workflow_tweaks"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 112.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"here",
			"ATLAS",
			"insert_new_marshall_objects",
			"ps1",
			"nullValue",
			"atlas",
			"update pesstoObjects set master_pessto_lightcurve = 1 where transientBucketId",
			"_plot_one",
			"_select_data_for_transient",
			"print",
			"marshall_lightcurves",
			"self.settings",
			"filepa",
			"insert_list_of_dictionaries_into_database_tables",
			"self.transientBucketIds",
			"_add_galactic_coords",
			"retu",
			"dbco",
			"print ",
			"return",
			"self.transientBucketIds",
			"transientBucketIds",
			"self.transientBucketIds",
			"self.",
			"dbconn=",
			"_batch_generate_lightcurves",
			"saveFileName",
			"saveLocation",
			"objectNames",
			"log",
			"_import_unmatched_feeder_survey_sources_to_transientbucket",
			"update_transient_summaries",
			"update_",
			"surveyName",
			"survey",
			"update_database",
			"stampFlagColumns",
			"non",
			"print",
			"=",
			"download_image_array",
			"=",
			"download_image_array",
			" + self.survey ",
			"stampFlagColumns",
			"dbSurveyNames",
			"self.survey",
			"if ra_deg < 0",
			"self.dic",
			"csvDicts",
			"self.dictList",
			"self.dbConn",
			"_import_to_feeder_survey_table",
			"get_csv_data",
			"mysql-error.err",
			"3",
			"300",
			"tmp",
			"innodb_read_io_threads",
			"pid",
			";",
			"; ",
			"pid",
			"insert_list_of_dictionaries_into_database_tables",
			"csvDicts = ",
			"self.csv",
			"csvDicts",
			"insert_list_of_dictionaries_into_database_tables",
			"_feeder_survey_transientbucket_crossmatch",
			"_feeder_survey_transientbucket_name_match_and_import",
			"_import_to_feeder_survey_table",
			"insert_list_of_dictionaries_into_database_tables",
			"insert",
			"50",
			"log2",
			"insert_list_of_dictionaries_into_database_tables",
			"_add_dictlist_to_database_via_load_in_file",
			"convert_dictionary_to_mysql_table",
			"tmpTable",
			"_add_dictlist_to_database_via_load_in_file",
			"batchSize"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 6,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "feeders/atlas/tests/test_data.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2234,
						"regions":
						{
						},
						"selection":
						[
							[
								1174,
								1174
							]
						],
						"settings":
						{
							"SL.332.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										1172,
										1173
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										1084,
										1085
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1209,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										144,
										149
									],
									[
										199,
										204
									],
									[
										278,
										283
									],
									[
										316,
										321
									],
									[
										423,
										428
									],
									[
										490,
										495
									],
									[
										554,
										559
									],
									[
										647,
										652
									],
									[
										751,
										756
									],
									[
										798,
										803
									],
									[
										847,
										852
									],
									[
										885,
										890
									],
									[
										1010,
										1015
									],
									[
										1155,
										1160
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										353,
										354
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"default_dir": "/Users/Dave/git_repos/marshallEngine/marshallEngine/feeders/ATLAS/tests",
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "feeders/__init__.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 137,
						"regions":
						{
						},
						"selection":
						[
							[
								137,
								137
							]
						],
						"settings":
						{
							"SL.385.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "feeders/atlas/images.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1999,
						"regions":
						{
						},
						"selection":
						[
							[
								1053,
								1252
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "cl_utils.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6535,
						"regions":
						{
						},
						"selection":
						[
							[
								5517,
								5517
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										5542,
										5543
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										5537,
										5538
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										5516,
										5517
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										5487,
										5488
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2202.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/Users/Dave/Dropbox/config/dave-macbook/marshallEngine/marshallEngine.yaml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5086,
						"regions":
						{
						},
						"selection":
						[
							[
								78,
								84
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/YAML/YAML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/Users/Dave/git_repos/dryxPyramid/setup.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 986,
						"regions":
						{
						},
						"selection":
						[
							[
								763,
								763
							]
						],
						"settings":
						{
							"SL.397.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										762,
										763
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/single_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										754,
										755
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "feeders/atlas/data.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6114,
						"regions":
						{
						},
						"selection":
						[
							[
								5939,
								5939
							]
						],
						"settings":
						{
							"SL.363.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										5938,
										5939
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										5923,
										5924
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "feeders/data.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14340,
						"regions":
						{
						},
						"selection":
						[
							[
								4159,
								4159
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2965.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 37.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.channel_repository_tools":
	{
		"height": 122.0
	},
	"output.exec":
	{
		"height": 312.0
	},
	"output.find_results":
	{
		"height": 161.0
	},
	"output.git":
	{
		"height": 110.0
	},
	"output.git-commit":
	{
		"height": 116.0
	},
	"output.git-flow-feature-finish":
	{
		"height": 116.0
	},
	"output.git-flow-feature-start":
	{
		"height": 116.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/Python.sublime-build",
	"project": "marshallEngine.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"readquery.py",
				"fundamentals/mysql/readquery.py"
			],
			[
				"convert_dictionary_to_mysql_table",
				"fundamentals/mysql/convert_dictionary_to_mysql_table.py"
			],
			[
				"direc",
				"fundamentals/mysql/tests/test_directory_script_runner.py"
			],
			[
				"dump",
				"fundamentals/download/_dump_files_to_local_drive.py"
			],
			[
				"con",
				"docs/source/conf.py"
			],
			[
				"list_of",
				"fundamentals/renderer/list_of_dictionaries.py"
			],
			[
				"list",
				"fundamentals/files/list_of_dictionaries_to_mysql_inserts.py"
			],
			[
				"insert_list_of_dictionaries_into_database_tables",
				"fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py"
			],
			[
				"sql",
				"fundamentals/mysql/sqlite2mysql.py"
			],
			[
				"fm",
				"fundamentals/fmultiprocess.py"
			],
			[
				"multipro",
				"fundamentals/fmultiprocess.py"
			],
			[
				"write",
				"fundamentals/mysql/writequery.py"
			],
			[
				"ins",
				"fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py"
			],
			[
				"inse",
				"fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py"
			],
			[
				"writequery",
				"fundamentals/mysql/writequery.py"
			],
			[
				"listof",
				"fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py"
			],
			[
				"lis",
				"fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py"
			],
			[
				"fmu",
				"fundamentals/fmultiprocess.py"
			],
			[
				"set",
				"fundamentals/mysql/setup_database_connection.py"
			],
			[
				"data",
				"fundamentals/mysql/database.py"
			],
			[
				"li",
				"fundamentals/files/list_of_dictionaries_to_mysql_inserts.py"
			],
			[
				"test_list",
				"fundamentals/renderer/tests/test_list_of_dictionaries.py"
			],
			[
				"renderpy",
				"fundamentals/renderer/list_of_dictionaries.py"
			],
			[
				"directory_script_runner.py",
				"fundamentals/mysql/directory_script_runner.py"
			],
			[
				"readq",
				"fundamentals/fundamentals/mysql/readquery.py"
			],
			[
				"read",
				"fundamentals/fundamentals/mysql/readquery.py"
			],
			[
				"conf",
				"fundamentals/docs/source/conf.py"
			],
			[
				"make",
				"fundamentals/docs/Makefile"
			],
			[
				"ma",
				"fundamentals/docs/Makefile"
			],
			[
				"pos",
				"~/.virtualenvs/postmkvirtualenv"
			],
			[
				"nos",
				"fundamentals/nose2.cfg"
			],
			[
				"nose",
				"fundamentals/nose2.cfg"
			],
			[
				"testlo",
				"fundamentals/fundamentals/tests/test_logs.py"
			],
			[
				"test_readquery.py",
				"fundamentals/fundamentals/mysql/tests/test_readquery.py"
			],
			[
				"convert_dictionary_to_mysql_table.py",
				"fundamentals/fundamentals/mysql/convert_dictionary_to_mysql_table.py"
			],
			[
				"seet",
				"fundamentals/fundamentals/mysql/setup_database_connection.py"
			],
			[
				"wr",
				"fundamentals/fundamentals/mysql/writequery.py"
			],
			[
				"wri",
				"fundamentals/fundamentals/mysql/writequery.py"
			],
			[
				"lsit",
				"fundamentals/fundamentals/files/list_of_dictionaries_to_mysql_inserts.py"
			],
			[
				"ver",
				"fundamentals/fundamentals/__version__.py"
			],
			[
				"tool",
				"fundamentals/fundamentals/tools.py"
			],
			[
				"test_list_of_dictionaries_to_mysql_inserts.py",
				"fundamentals/fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py"
			],
			[
				"mu",
				"fundamentals/download/multiobject_download.py"
			],
			[
				"testclo",
				"repster/tests/test_clone_github_repo_wiki.py"
			],
			[
				"hoo",
				"gitflow/add_hook_to_bitbucket_repo.py"
			],
			[
				"tesad",
				"gitflow/tests/test_add_hook_to_bitbucket_repo.py"
			],
			[
				"tesgi",
				"gitflow/tests/test_add_git_repo_to_tower.py"
			],
			[
				"csv",
				"dryxPython/dryxPython/csvtools/sqlquery_to_csv_file.py"
			],
			[
				"ads",
				"dryxPython/dryxPython/webcrawlers/papers/tests/test_ads_query.py"
			],
			[
				"etchsd",
				"dryxPython/dryxPython/astrotools/tests/test_check_for_sdss_coverage.py"
			],
			[
				"check",
				"dryxPython/dryxPython/astrotools/check_for_sdss_coverage.py"
			],
			[
				"testas",
				"dryxPython/dryxPython/astrotools/tests/test_astrometry_corrector.py"
			],
			[
				"sqlquery_to_csv_file.py",
				"dryxPython/dryxPython/csvtools/sqlquery_to_csv_file.py"
			],
			[
				"setup_main_clutil",
				"dryxPython/dryxPython/projectsetup/setup_main_clutil.py"
			],
			[
				"create",
				"dryxPython/dryxPython/packagecreator/createpythonpackage.py"
			],
			[
				"sca",
				"dryxPython/dryxPython/plotting/xy_scatter.py"
			],
			[
				"sqlquery_to_csv.py",
				"dryxPython/dryxPython/csvtools/sqlquery_to_csv_file.py"
			],
			[
				"human_readable",
				"dryxPython/dryxPython/csvtools/tests/test_human_readable.py"
			],
			[
				"teststrin",
				"dryxPython/dryxPython/convert/tests/test_string_of_values_to_list.py"
			],
			[
				"testx",
				"dryxPython/dryxPython/plotting/tests/test_xy_scatter.py"
			],
			[
				"xy",
				"dryxPython/dryxPython/plotting/xy_scatter.py"
			],
			[
				"table",
				"dryxPython/dryxPython/htmlframework/tables.py"
			],
			[
				"tesvoo",
				"dryxPython/dryxPython/tagging/tests/test_add_mavericks_tags_to_voodoopad.py"
			],
			[
				"",
				"dryxPython/dryxPython/tagging/add_mavericks_tags_to_voodoopad.py"
			],
			[
				"testadd",
				"dryxPython/dryxPython/tagging/tests/test_add_mavericks_tags_to_dayone.py"
			],
			[
				"voodoo",
				"dryxPython/dryxPython/tagging/add_mavericks_tags_to_voodoopad.py"
			],
			[
				"addtag",
				"dryxPython/dryxPython/tagging/add_mavericks_tags_to_dayone.py"
			],
			[
				"testdayone",
				"dryxPython/dryxPython/tagging/tests/test_add_mavericks_tags_to_dayone.py"
			],
			[
				"addon",
				"dryxPython/dryxPython/htmlframework/addons.py"
			],
			[
				"add",
				"dryxPython/dryxPython/htmlframework/addons.py"
			],
			[
				"modal",
				"dryx_assets/js/_dryx_modals.js"
			],
			[
				"typ",
				"dryxPython/dryxPython/htmlframework/typography.py"
			],
			[
				"astrot",
				"dryxPython/dryxPython/astrotools/__init__.py"
			],
			[
				"astro",
				"dryxPython/dryxPython/astrotools/__init__.py"
			],
			[
				"rasex",
				"dryxPython/dryxPython/astrotools/tests/test_ra_sexegesimal_to_decimal.py"
			],
			[
				"testdec",
				"dryxPython/dryxPython/astrotools/tests/test_declination_sexegesimal_to_decimal.py"
			],
			[
				"astrotool",
				"dryxPython/dryxPython/astrotools/__init__.py"
			],
			[
				"mysql",
				"dryxPython/dryxPython/mysql/__init__.py"
			],
			[
				"dryxtype",
				"dryx_assets/styles/sass/_dryx_type.scss"
			],
			[
				"htmlframework.p",
				"dryxPython/dryxPython/htmlframework/forms.py"
			],
			[
				"dryxicon",
				"dryx_assets/styles/sass/_dryx_icons.scss"
			],
			[
				"prset",
				"dryxPython/dryxPython/commonutils/tests/input/project_settings.yaml"
			],
			[
				"projec",
				"dryxPython/dryxPython/tests/input/project_settings.yaml"
			],
			[
				".git",
				"dryxPython/.gitignore"
			],
			[
				"_mod",
				"dryx_assets/styles/sass/_modified_variables.scss"
			],
			[
				"_drnav",
				"dryx_assets/styles/sass/_dryx_navigation.scss"
			],
			[
				"test",
				"dryxPython/dryxPython/packagecreator/tests/test_createpythonpackage.py"
			],
			[
				"bread",
				"/Users/Dave/Dropbox/templates/web/twitter_bootstrap/assets/styles/sass/_breadcrumbs.scss"
			],
			[
				"main",
				"dryxPython/dryxPython/tests/output/htdocs/assets/js/main-ck.js"
			],
			[
				"_dryx_navigation",
				"dryx_assets/js/_dryx_navigation.js"
			],
			[
				"com",
				"dryxPython/dryxPython/commonutils.py"
			],
			[
				"mysq",
				"dryxPython/dryxPython/mysql.py"
			],
			[
				"tes",
				"dryxPython/dryxPython/htmlframework/tests/test_htmlframework.py"
			],
			[
				"test_h",
				"dryxPython/dryxPython/htmlframework/tests/test_htmlframework.py"
			],
			[
				"layo",
				"dryxPython/dryxPython/tests/output/htdocs/assets/styles/sass/_dryx_layout.scss"
			],
			[
				"main.sc",
				"dryxPython/dryxPython/tests/output/htdocs/assets/styles/sass/main.scss"
			],
			[
				"screen",
				"dryxPython/tests/output/htdocs/assets/styles/sass/screen.scss"
			],
			[
				"_dryx_l",
				"dryxPython/tests/output/htdocs/assets/styles/sass/_dryx_layout.scss"
			],
			[
				"main.s",
				"dryxPython/tests/output/htdocs/assets/styles/sass/main.scss"
			],
			[
				"setup",
				"dryxPython/htmlframework/setup.py"
			],
			[
				"m",
				"MANIFEST.in"
			],
			[
				"log",
				"dryxPython/dryxPython/logs.py"
			],
			[
				"drtas",
				"taskpaper_projects/dryxPython_modules.taskpaper"
			],
			[
				"os",
				"/Users/Dave/Library/Application Support/Sublime Text 2/Packages/Default/Preferences (OSX).sublime-settings"
			],
			[
				"scaf",
				"dryxHTMLFramework/_dryxHTMLFramework_scaffolding.py"
			],
			[
				"navi",
				"dryxHTMLFramework/_dryxHTMLFramework_navigation.py"
			],
			[
				"to",
				"python/todo"
			],
			[
				"drysc",
				"dryxHTMLFramework/_dryxHTMLFramework_scaffolding.py"
			],
			[
				"in",
				"scripts/index.py"
			],
			[
				"pes",
				"scripts/pesstoMarshallButtons.py"
			],
			[
				"inex",
				"webpages/document_root/pessto/private/marshall/scripts/index.py"
			],
			[
				"pesstomarshallmysql.py",
				"code/common_code/python/pesstoMarshallMySQL.py"
			],
			[
				"dryxm",
				"dependencies/dryx_code/python/dryxMySQL/dryxMySQL.py"
			],
			[
				".log",
				"logs/marshall_debug.log"
			],
			[
				"index",
				"webpages/document_root/pessto/index.py"
			],
			[
				"inde",
				"webpages/document_root/pessto/index.py"
			],
			[
				"dryxht",
				"dependencies/dryx_code/python/dryxHTMLFramework/dryxHTMLFramework.py"
			],
			[
				"logging",
				"settings/templates/logging.yaml"
			],
			[
				"pespyth",
				"pm_common_code/python/pesstoMarshallPythonPath.py"
			],
			[
				"pesspythpy",
				"webpages/document_root/pessto/private/marshall/scripts/pesstoMarshallPythonPath.py"
			],
			[
				"ty",
				"_dryxTBS_typography.py"
			],
			[
				"ad",
				"_dryxTBS_addons.py"
			],
			[
				"image",
				"_dryxTBS_images.py"
			],
			[
				"lab",
				"/Users/Dave/Dropbox/live_projects/work_projects/sandbox_marshall_svn_repo/dependencies/dryx_code/python/dryxLabelsAndBadges.py"
			],
			[
				"nav",
				"_dryxTBS_navigation.py"
			],
			[
				"t",
				"_dryxTBS_typography.py"
			],
			[
				"for",
				"_dryxTBS_forms.py"
			],
			[
				"form",
				"_dryxTBS_forms.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "mars",
		"selected_items":
		[
			[
				"mars",
				"~/git_repos/marshall_webapp/marshall_webapp.sublime-project"
			],
			[
				"fund",
				"~/git_repos/fundamentals/fundamentals.sublime-project"
			],
			[
				"fin",
				"~/git_repos/fundamentals/fundamentals.sublime-project"
			],
			[
				"mar",
				"~/git_repos/marshall_webapp/marshall_webapp.sublime-project"
			],
			[
				"",
				"~/git_repos/fundamentals/fundamentals.sublime-project"
			],
			[
				"fun",
				"~/git_repos/fundamentals/fundamentals.sublime-project"
			],
			[
				"marsha",
				"~/git_repos/marshallEngine/marshallEngine.sublime-project"
			],
			[
				"ma",
				"~/git_repos/marshallEngine/marshallEngine.sublime-project"
			],
			[
				"pes",
				"~/git_repos/pessto_marshall_engine/pessto_marshall_engine.sublime-project"
			],
			[
				"pess",
				"~/git_repos/pessto_marshall_engine/pessto_marshall_engine.sublime-project"
			],
			[
				"brea",
				"~/git_repos/breaker/breaker.sublime-project"
			],
			[
				"bre",
				"~/git_repos/breaker/breaker.sublime-project"
			],
			[
				"sh",
				"~/git_repos/sherlock/sherlock.sublime-project"
			],
			[
				"she",
				"~/git_repos/sherlock/sherlock.sublime-project"
			],
			[
				"shsr",
				"~/git_repos/sherlock/sherlock.sublime-project"
			],
			[
				"break",
				"~/git_repos/breaker/breaker.sublime-project"
			],
			[
				"en",
				"~/git_repos/ENGRAVEAlerts/ENGRAVEAlerts.sublime-project"
			],
			[
				"sher",
				"~/git_repos/sherlock/sherlock.sublime-project"
			],
			[
				"ia",
				"~/Library/Containers/pro.writer.mac/Data/Library/Application Support/iA Writer/Templates/ia-writer-templates.sublime-project"
			],
			[
				"temp",
				"~/Library/Containers/pro.writer.mac/Data/Library/Application Support/iA Writer/Templates/ia-writer-templates.sublime-project"
			],
			[
				"sherlo",
				"~/git_repos/sherlock/sherlock.sublime-project"
			],
			[
				"engr",
				"~/git_repos/ENGRAVEAlerts/ENGRAVEAlerts.sublime-project"
			],
			[
				"pm",
				"~/git_repos/pessto_marshall_engine/pessto_marshall_engine.sublime-project"
			],
			[
				"atel",
				"~/git_repos/atelParser/atelParser.sublime-project"
			],
			[
				"rock",
				"~/git_repos/rockAtlas/rockAtlas.sublime-project"
			],
			[
				"b",
				"~/git_repos/bygone/bygone.sublime-project"
			],
			[
				"by",
				"~/git_repos/bygone/bygone.sublime-project"
			],
			[
				"dec",
				"~/git_repos/deckster/deckster.sublime-project"
			],
			[
				"roc",
				"~/git_repos/rockAtlas/rockAtlas.sublime-project"
			],
			[
				"ro",
				"~/git_repos/rockAtlas/rockAtlas.sublime-project"
			],
			[
				"ht",
				"~/git_repos/HMpTy/HMpTy.sublime-project"
			],
			[
				"htmp",
				"~/git_repos/HMpTy/HMpTy.sublime-project"
			],
			[
				"sherl",
				"~/git_repos/sherlock/sherlock.sublime-project"
			],
			[
				"rocka",
				"~/git_repos/rockAtlas/rockAtlas.sublime-project"
			],
			[
				"f",
				"~/git_repos/fundamentals/fundamentals.sublime-project"
			],
			[
				"orb",
				"~/git_repos/Orbfit5.0-fork/orbfit5-fork.sublime-workspace"
			],
			[
				"rockfin",
				"~/git_repos/rockfinder/rockfinder.sublime-project"
			],
			[
				"rockA",
				"~/git_repos/rockAtlas/rockAtlas.sublime-project"
			],
			[
				"lv",
				"~/git_repos/lv_pesstovm03_settings/lv_pesstovm03_settings.sublime-project"
			],
			[
				"or",
				"~/git_repos/Orbfit5.0-fork/Orbfit5.0-fork.sublime-project"
			],
			[
				"pin",
				"~/git_repos/pinboard.py/pinboard.sublime-project"
			],
			[
				"rockas",
				"~/git_repos/rockAtlas/rockAtlas.sublime-project"
			],
			[
				"ol",
				"~/git_repos/polyglot/polyglot.sublime-project"
			],
			[
				"polo",
				"~/git_repos/polygot/polygot.sublime-workspace"
			],
			[
				"orbf",
				"~/git_repos/Orbfit5.0-fork/orbfit5-fork.sublime-workspace"
			],
			[
				"poly",
				"~/git_repos/polyglot/polyglot.sublime-project"
			],
			[
				"pol",
				"~/git_repos/polyglot/polyglot.sublime-project"
			],
			[
				"theme",
				"~/git_repos/jekyll-themes/jekyll-themes.sublime-project"
			],
			[
				"pans",
				"~/git_repos/panstamps/panstamps.sublime-project"
			],
			[
				"pan",
				"~/git_repos/panstamps/panstamps.sublime-project"
			],
			[
				"head",
				"~/git_repos/headjack/headjack.sublime-project"
			],
			[
				"pic",
				"~/git_repos/picaxe/picaxe.sublime-project"
			],
			[
				"p",
				"~/git_repos/picaxe/picaxe.sublime-project"
			],
			[
				"thes",
				"~/git_repos/dryx_thespacedoctor_settings/dryx_thespacedoctor_settings.sublime-project"
			],
			[
				"shersh",
				"~/git_repos/sherlock/sherlock.sublime-project"
			],
			[
				"all",
				"~/git_repos/ALL_PROJECT_FILES.sublime-project"
			],
			[
				"pna",
				"~/git_repos/panstamps/panstamps.sublime-project"
			],
			[
				"bil",
				"~/git_repos/bilbo/bilbo.sublime-project"
			],
			[
				"thespace",
				"~/git_repos/dryx_thespacedoctor_settings/dryx_thespacedoctor_settings.sublime-project"
			],
			[
				"sheer",
				"~/git_repos/sherlock/sherlock.sublime-project"
			],
			[
				"tast",
				"~/git_repos/tastic/tastic.sublime-project"
			],
			[
				"h",
				"~/git_repos/HMpTy/HMpTy.sublime-project"
			],
			[
				"tas",
				"~/git_repos/tastic/tastic.sublime-project"
			],
			[
				"pica",
				"~/git_repos/picaxe/picaxe.sublime-project"
			],
			[
				"htm",
				"~/git_repos/HMpTy/HMpTy.sublime-project"
			],
			[
				"trans",
				"~/git_repos/transientNamer/transientNamer.sublime-project"
			],
			[
				"polyg",
				"~/git_repos/polyglot/polyglot.sublime-project"
			],
			[
				"hm",
				"~/git_repos/HMpTy/HMpTy.sublime-project"
			],
			[
				"marsh",
				"~/git_repos/marshallEngine/marshallEngine.sublime-project"
			],
			[
				"sim",
				"~/git_repos/simpdf/simpdf.sublime-project"
			],
			[
				"as",
				"~/git_repos/astrocalc/astrocalc.sublime-project"
			],
			[
				"tra",
				"~/git_repos/transientNamer/transientNamer.sublime-project"
			],
			[
				"rep",
				"~/git_repos/repster/repster.sublime-project"
			],
			[
				"tran",
				"~/git_repos/transientNamer/transientNamer.sublime-project"
			],
			[
				"fran",
				"~/git_repos/frankenstein/frankenstein.sublime-project"
			],
			[
				"tr",
				"~/git_repos/transientNamer/transientNamer.sublime-project"
			],
			[
				"slo",
				"~/git_repos/sloancone/sloancone.sublime-project"
			],
			[
				"astro",
				"~/git_repos/astrocalc/astrocalc.sublime-project"
			],
			[
				"tph",
				"~/git_repos/tphorce/tphorce.sublime-project"
			],
			[
				"dry",
				"~/git_repos/dryxPython/dryxPython.sublime-project"
			],
			[
				"gol",
				"~/git_repos/gollum/gollum-code.sublime-project"
			],
			[
				"sloa",
				"~/git_repos/sloancone/sloancone.sublime-project"
			],
			[
				"dryx",
				"~/git_repos/dryxPython/dryxPython.sublime-project"
			],
			[
				"python",
				"~/git_repos/Python-Package-Development-Tools/Python-Package-Development-Tools.sublime-project"
			],
			[
				"bib",
				"~/git_repos/bilbo/bilbo.sublime-project"
			],
			[
				"tmp",
				"~/git_repos/templates/templates.sublime-project"
			],
			[
				"dryxPy",
				"~/git_repos/dryxPython/dryxPython.sublime-project"
			],
			[
				"ned",
				"~/git_repos/neddy/neddy.sublime-project"
			],
			[
				"note",
				"~/Dropbox/notes/notes.sublime-project"
			],
			[
				"bi",
				"~/git_repos/bilbo/bilbo.sublime-project"
			],
			[
				"esp",
				"~/git_repos/pessto_marshall_engine/pessto_marshall_engine.sublime-project"
			],
			[
				"pa",
				"~/git_repos/panstamps/panstamps.sublime-project"
			],
			[
				"te",
				"~/git_repos/templates/templates.sublime-project"
			],
			[
				"th",
				"~/git_repos/blog_thespacedoctor/blog_thespacedoctor.sublime-workspace"
			],
			[
				"no",
				"~/Dropbox/notes/notes.sublime-project"
			],
			[
				"mu",
				"~/git_repos/muppet/muppet.sublime-project"
			],
			[
				"marwe",
				"/Users/Dave/git_repos/webapps/marshall_webapp/marshall_webapp.sublime-project"
			],
			[
				"peswe",
				"/Users/Dave/git_repos/pessto_webapp/pessto_webapp.sublime-project"
			],
			[
				"the",
				"/Users/Dave/Desktop/thespacedoctor_exports/_thespacedoctor_to_mysql.sublime-project"
			],
			[
				"mark",
				"/Users/Dave/Dropbox/bitbucket_projects/markdownWiki/markdownWiki.sublime-project"
			],
			[
				"pesma",
				"/Users/Dave/Dropbox/github_projects/pessto_marshall_engine/pm_engine.sublime-project"
			],
			[
				"vo",
				"/Users/Dave/Dropbox/github_projects/voodoopad/voodoopad.sublime-project"
			],
			[
				"wo",
				"/Users/Dave/Dropbox/bitbucket_projects/dryx_project_workflow/dryx_project_workflow.sublime-project"
			],
			[
				"\n",
				"/Users/Dave/Dropbox/github_projects/pessto_marshall_webapp/pessto_marshall_webapp.sublime-project"
			],
			[
				"sub",
				"/Users/Dave/Dropbox/github_projects/sublimeAutoSnippets/sublimeAutoSnippets.sublime-project"
			],
			[
				"voo",
				"/Users/Dave/Dropbox/github_projects/voodoopad/voodoopad.sublime-project"
			],
			[
				"qub",
				"/Users/Dave/Dropbox/bitbucket_projects/dryx_qub_webpages/dryx_qub_webpages.sublime-project"
			],
			[
				"thespa",
				"/Users/Dave/Dropbox/bitbucket_projects/thespacedoctor.co.uk/thespacedoctor.sublime-project"
			],
			[
				"weba",
				"/Users/Dave/Dropbox/github_projects/pessto_marshall_webapp/pessto_marshall_webapp.sublime-project"
			],
			[
				"spa",
				"/Users/Dave/Dropbox/bitbucket_projects/thespacedoctor.co.uk/thespacedoctor.sublime-project"
			],
			[
				"sas",
				"/Users/Dave/Dropbox/templates/web/dryx_assets/styles/sass/marshall_sass.sublime-project"
			],
			[
				"sass",
				"/Users/Dave/Dropbox/templates/web/dryx_assets/styles/sass/marshall_sass.sublime-project"
			],
			[
				"jav",
				"/Users/Dave/Dropbox/bitbucket_projects/pessto_marshall/marshall_javascript.sublime-project"
			],
			[
				"java",
				"/Users/Dave/Dropbox/bitbucket_projects/pessto_marshall/marshall_javascript.sublime-project"
			],
			[
				"su",
				"/Users/Dave/Dropbox/github_projects/sublimeAutoSnippets/sublimeAutoSnippets.sublime-project"
			],
			[
				"marh",
				"/Users/Dave/Dropbox/bitbucket_projects/pessto_marshall/pessto_marshall.sublime-project"
			],
			[
				"sa",
				"/Users/Dave/Dropbox/templates/web/dryx_assets/styles/sass/marshall_sass.sublime-project"
			],
			[
				"tb",
				"/Users/Dave/Dropbox/github_projects/python/twitterBootstrap/twitterBootstrap_python.sublime-project"
			],
			[
				"sand",
				"/Users/Dave/Dropbox/WORKSPACES/WORK/sandbox_marshall_svn_repo/sublime_sandbox_workspace.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 518.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
