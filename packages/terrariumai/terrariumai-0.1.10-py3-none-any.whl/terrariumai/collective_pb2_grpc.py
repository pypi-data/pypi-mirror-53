# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import collective_pb2 as collective__pb2


class CollectiveStub(object):
  """Service to manage remote models
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ConnectRemoteModel = channel.stream_stream(
        '/endpoints.terrariumai.collective.Collective/ConnectRemoteModel',
        request_serializer=collective__pb2.ActionPacket.SerializeToString,
        response_deserializer=collective__pb2.ObservationPacket.FromString,
        )


class CollectiveServicer(object):
  """Service to manage remote models
  """

  def ConnectRemoteModel(self, request_iterator, context):
    """Connect a new RM
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CollectiveServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ConnectRemoteModel': grpc.stream_stream_rpc_method_handler(
          servicer.ConnectRemoteModel,
          request_deserializer=collective__pb2.ActionPacket.FromString,
          response_serializer=collective__pb2.ObservationPacket.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'endpoints.terrariumai.collective.Collective', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
