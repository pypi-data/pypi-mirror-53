." Copyright (C) 1999-2015 Free Software Foundation, Inc.

." Permission is granted to copy, distribute and/or modify this document
." under the terms of the GNU Free Documentation License, Version 1.3 or
." any later version published by the Free Software Foundation; with the
." Invariant Sections being ``Funding Free Software'', the Front-Cover
." Texts being (a) (see below), and with the Back-Cover Texts being (b)
." (see below).  A copy of the license is included in the section entitled
." ``GNU Free Documentation License''.

." (a) The FSF's Front-Cover Text is:

."      A GNU Manual

." (b) The FSF's Back-Cover Text is:

."      You have freedom to copy and modify this GNU Manual, like GNU
."      software.  Copies published by the Free Software Foundation raise
."      funds for GNU development.
.PP


.TH "ETIME" "3f" "Sun Mar 27 2016" "Intrinsic Fortran procedures" "Intrinsic Fortran procedures"

     
.SH DESCRIPTION
\fIETIME(VALUES, TIME)\fP returns the number of seconds of runtime
since the start of the process's execution in \fITIME\fP.  \fIVALUES\fP
returns the user and system components of this time in \fIVALUES(1)\fP and
\fIVALUES(2)\fP respectively. \fITIME\fP is equal to \fIVALUES(1) + VALUES(2)\fP.

.PP
On some systems, the underlying timings are represented using types with
sufficiently small limits that overflows (wrap around) are possible, such as
32-bit types. Therefore, the values returned by this intrinsic might be, or
become, negative, or numerically less than previous values, during a single
run of the compiled program.

.PP
This intrinsic is provided in both subroutine and function forms; however,
only one form can be used in any given program unit.

.PP
\fIVALUES\fP and \fITIME\fP are \fIINTENT(OUT)\fP and provide the following:

.PP
\fIVALUES(1)\fP: User time in seconds. 
\fIVALUES(2)\fP: System time in seconds. 
\fITIME\fP: Run time since start in seconds.

.SH STANDARD
GNU extension

.SH CLASS
Subroutine, function

.SH SYNTAX

.PP
\fICALL ETIME(VALUES, TIME)\fP. 
\fITIME = ETIME(VALUES)\fP, (not recommended).

.SH ARGUMENTS

.PP
\fIVALUES\fPThe type shall be \fIREAL(4), DIMENSION(2)\fP. 
\fITIME\fPThe type shall be \fIREAL(4)\fP.

.SH RETURN VALUE
Elapsed time in seconds since the start of program execution.

.SH EXAMPLE

          program test_etime
              integer(8) :: i, j
              real, dimension(2) :: tarray
              real :: result
              call ETIME(tarray, result)
              print *, result
              print *, tarray(1)
              print *, tarray(2)
              do i=1,100000000    ! Just a delay
                  j = i * i - i
              end do
              call ETIME(tarray, result)
              print *, result
              print *, tarray(1)
              print *, tarray(2)
          end program test_etime
.SH SEE ALSO
CPU_TIME

   

.SH AUTHOR
.PP
This information was taken from the GFortran documentation (\fBhttps://gcc.gnu.org/onlinedocs/gcc-5.3.0/gfortran/\fP) and converted to a manpage by AstroFloyd (\fBhttp://astrofloyd.org\fP).

