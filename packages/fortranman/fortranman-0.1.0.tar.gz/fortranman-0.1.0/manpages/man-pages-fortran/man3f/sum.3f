." Copyright (C) 1999-2015 Free Software Foundation, Inc.

." Permission is granted to copy, distribute and/or modify this document
." under the terms of the GNU Free Documentation License, Version 1.3 or
." any later version published by the Free Software Foundation; with the
." Invariant Sections being ``Funding Free Software'', the Front-Cover
." Texts being (a) (see below), and with the Back-Cover Texts being (b)
." (see below).  A copy of the license is included in the section entitled
." ``GNU Free Documentation License''.

." (a) The FSF's Front-Cover Text is:

."      A GNU Manual

." (b) The FSF's Back-Cover Text is:

."      You have freedom to copy and modify this GNU Manual, like GNU
."      software.  Copies published by the Free Software Foundation raise
."      funds for GNU development.
.PP


.TH "SUM" "3f" "Sun Mar 27 2016" "Intrinsic Fortran procedures" "Intrinsic Fortran procedures"

     
.SH DESCRIPTION
Adds the elements of \fIARRAY\fP along dimension \fIDIM\fP if
the corresponding element in \fIMASK\fP is \fITRUE\fP.

.SH STANDARD
Fortran 95 and later

.SH CLASS
Transformational function

.SH SYNTAX

.PP
\fIRESULT = SUM(ARRAY[, MASK])\fP
\fIRESULT = SUM(ARRAY, DIM[, MASK])\fP

.SH ARGUMENTS

.PP
\fIARRAY\fP Shall be an array of type \fIINTEGER\fP,
\fIREAL\fP or \fICOMPLEX\fP. 
\fIDIM\fP   (Optional) shall be a scalar of type
\fIINTEGER\fP with a value in the range from 1 to n, where n
equals the rank of \fIARRAY\fP. 
\fIMASK\fP  (Optional) shall be of type \fILOGICAL\fP
and either be a scalar or an array of the same shape as \fIARRAY\fP.

.SH RETURN VALUE
The result is of the same type as \fIARRAY\fP.

.PP
If \fIDIM\fP is absent, a scalar with the sum of all elements in \fIARRAY\fP
is returned. Otherwise, an array of rank n-1, where n equals the rank of
\fIARRAY\fP, and a shape similar to that of \fIARRAY\fP with dimension \fIDIM\fP
dropped is returned.

.SH EXAMPLE

          PROGRAM test_sum
            INTEGER :: x(5) = (/ 1, 2, 3, 4 ,5 /)
            print *, SUM(x)                        ! all elements, sum = 15
            print *, SUM(x, MASK=MOD(x, 2)==1)     ! odd elements, sum = 9
          END PROGRAM
.SH SEE ALSO
PRODUCT


.SH AUTHOR
.PP
This information was taken from the GFortran documentation (\fBhttps://gcc.gnu.org/onlinedocs/gcc-5.3.0/gfortran/\fP) and converted to a manpage by AstroFloyd (\fBhttp://astrofloyd.org\fP).

