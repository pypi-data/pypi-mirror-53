." Copyright (C) 1999-2015 Free Software Foundation, Inc.

." Permission is granted to copy, distribute and/or modify this document
." under the terms of the GNU Free Documentation License, Version 1.3 or
." any later version published by the Free Software Foundation; with the
." Invariant Sections being ``Funding Free Software'', the Front-Cover
." Texts being (a) (see below), and with the Back-Cover Texts being (b)
." (see below).  A copy of the license is included in the section entitled
." ``GNU Free Documentation License''.

." (a) The FSF's Front-Cover Text is:

."      A GNU Manual

." (b) The FSF's Back-Cover Text is:

."      You have freedom to copy and modify this GNU Manual, like GNU
."      software.  Copies published by the Free Software Foundation raise
."      funds for GNU development.
.PP


.TH "FSEEK" "3f" "Sun Mar 27 2016" "Intrinsic Fortran procedures" "Intrinsic Fortran procedures"

     
.SH DESCRIPTION
Moves \fIUNIT\fP to the specified \fIOFFSET\fP. If \fIWHENCE\fP
is set to 0, the \fIOFFSET\fP is taken as an absolute value \fISEEK_SET\fP,
if set to 1, \fIOFFSET\fP is taken to be relative to the current position
\fISEEK_CUR\fP, and if set to 2 relative to the end of the file \fISEEK_END\fP. 
On error, \fISTATUS\fP is set to a nonzero value. If \fISTATUS\fP the seek
fails silently.

.PP
This intrinsic routine is not fully backwards compatible with \fIg77\fP. 
In \fIg77\fP, the \fIFSEEK\fP takes a statement label instead of a
\fISTATUS\fP variable. If FSEEK is used in old code, change
            CALL FSEEK(UNIT, OFFSET, WHENCE, *label)
.PP
to
            INTEGER :: status
            CALL FSEEK(UNIT, OFFSET, WHENCE, status)
            IF (status /= 0) GOTO label
.PP
Please note that GNU Fortran provides the Fortran 2003 Stream facility. 
Programmers should consider the use of new stream IO feature in new code
for future portability.

.SH STANDARD
GNU extension

.SH CLASS
Subroutine

.SH SYNTAX
\fICALL FSEEK(UNIT, OFFSET, WHENCE[, STATUS])\fP

.SH ARGUMENTS

.PP
\fIUNIT\fP   Shall be a scalar of type \fIINTEGER\fP. 
\fIOFFSET\fP Shall be a scalar of type \fIINTEGER\fP. 
\fIWHENCE\fP Shall be a scalar of type \fIINTEGER\fP. 
Its value shall be either 0, 1 or 2. 
\fISTATUS\fP (Optional) shall be a scalar of type
\fIINTEGER(4)\fP.

.SH EXAMPLE

          PROGRAM test_fseek
            INTEGER, PARAMETER :: SEEK_SET = 0, SEEK_CUR = 1, SEEK_END = 2
            INTEGER :: fd, offset, ierr
          
            ierr   = 0
            offset = 5
            fd     = 10
          
            OPEN(UNIT=fd, FILE="fseek.test")
            CALL FSEEK(fd, offset, SEEK_SET, ierr)  ! move to OFFSET
            print *, FTELL(fd), ierr
          
            CALL FSEEK(fd, 0, SEEK_END, ierr)       ! move to end
            print *, FTELL(fd), ierr
          
            CALL FSEEK(fd, 0, SEEK_SET, ierr)       ! move to beginning
            print *, FTELL(fd), ierr
          
            CLOSE(UNIT=fd)
          END PROGRAM
.SH SEE ALSO
FTELL


.SH AUTHOR
.PP
This information was taken from the GFortran documentation (\fBhttps://gcc.gnu.org/onlinedocs/gcc-5.3.0/gfortran/\fP) and converted to a manpage by AstroFloyd (\fBhttp://astrofloyd.org\fP).

