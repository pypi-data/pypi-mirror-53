." Copyright (C) 1999-2015 Free Software Foundation, Inc.

." Permission is granted to copy, distribute and/or modify this document
." under the terms of the GNU Free Documentation License, Version 1.3 or
." any later version published by the Free Software Foundation; with the
." Invariant Sections being ``Funding Free Software'', the Front-Cover
." Texts being (a) (see below), and with the Back-Cover Texts being (b)
." (see below).  A copy of the license is included in the section entitled
." ``GNU Free Documentation License''.

." (a) The FSF's Front-Cover Text is:

."      A GNU Manual

." (b) The FSF's Back-Cover Text is:

."      You have freedom to copy and modify this GNU Manual, like GNU
."      software.  Copies published by the Free Software Foundation raise
."      funds for GNU development.
.PP


.TH "EOSHIFT" "3f" "Sun Mar 27 2016" "Intrinsic Fortran procedures" "Intrinsic Fortran procedures"

     
.SH DESCRIPTION
\fIEOSHIFT(ARRAY, SHIFT[, BOUNDARY, DIM])\fP performs an end-off shift on
elements of \fIARRAY\fP along the dimension of \fIDIM\fP.  If \fIDIM\fP is
omitted it is taken to be \fI1\fP.  \fIDIM\fP is a scalar of type
\fIINTEGER\fP in the range of 1 <=q DIM <=q n) where n is the
rank of \fIARRAY\fP.  If the rank of \fIARRAY\fP is one, then all elements of
\fIARRAY\fP are shifted by \fISHIFT\fP places.  If rank is greater than one,
then all complete rank one sections of \fIARRAY\fP along the given dimension are
shifted.  Elements shifted out one end of each rank one section are dropped.  If
\fIBOUNDARY\fP is present then the corresponding value of from \fIBOUNDARY\fP
is copied back in the other end.  If \fIBOUNDARY\fP is not present then the
following are copied in depending on the type of \fIARRAY\fP.

.PP
\fIArray Type\fP \fIBoundary Value\fP
Numeric  0 of the type and kind of \fIARRAY\fP. 
Logical  \fI.FALSE.\fP. 
Character(\fIlen\fP) \fIlen\fP blanks.

.SH STANDARD
Fortran 95 and later

.SH CLASS
Transformational function

.SH SYNTAX
\fIRESULT = EOSHIFT(ARRAY, SHIFT [, BOUNDARY, DIM])\fP

.SH ARGUMENTS

.PP
\fIARRAY\fP  May be any type, not scalar. 
\fISHIFT\fP  The type shall be \fIINTEGER\fP. 
\fIBOUNDARY\fP Same type as \fIARRAY\fP. 
\fIDIM\fP    The type shall be \fIINTEGER\fP.

.SH RETURN VALUE
Returns an array of same type and rank as the \fIARRAY\fP argument.

.SH EXAMPLE

          program test_eoshift
              integer, dimension(3,3) :: a
              a = reshape( (/ 1, 2, 3, 4, 5, 6, 7, 8, 9 /), (/ 3, 3 /))
              print '(3i3)', a(1,:)
              print '(3i3)', a(2,:)
              print '(3i3)', a(3,:)
              a = EOSHIFT(a, SHIFT=(/1, 2, 1/), BOUNDARY=-5, DIM=2)
              print *
              print '(3i3)', a(1,:)
              print '(3i3)', a(2,:)
              print '(3i3)', a(3,:)
          end program test_eoshift
     

.SH AUTHOR
.PP
This information was taken from the GFortran documentation (\fBhttps://gcc.gnu.org/onlinedocs/gcc-5.3.0/gfortran/\fP) and converted to a manpage by AstroFloyd (\fBhttp://astrofloyd.org\fP).

