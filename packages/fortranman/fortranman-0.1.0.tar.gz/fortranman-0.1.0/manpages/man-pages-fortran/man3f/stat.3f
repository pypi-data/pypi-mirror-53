." Copyright (C) 1999-2015 Free Software Foundation, Inc.

." Permission is granted to copy, distribute and/or modify this document
." under the terms of the GNU Free Documentation License, Version 1.3 or
." any later version published by the Free Software Foundation; with the
." Invariant Sections being ``Funding Free Software'', the Front-Cover
." Texts being (a) (see below), and with the Back-Cover Texts being (b)
." (see below).  A copy of the license is included in the section entitled
." ``GNU Free Documentation License''.

." (a) The FSF's Front-Cover Text is:

."      A GNU Manual

." (b) The FSF's Back-Cover Text is:

."      You have freedom to copy and modify this GNU Manual, like GNU
."      software.  Copies published by the Free Software Foundation raise
."      funds for GNU development.
.PP


.TH "STAT" "3f" "Sun Mar 27 2016" "Intrinsic Fortran procedures" "Intrinsic Fortran procedures"

     
.SH DESCRIPTION
This function returns information about a file. No permissions are required on
the file itself, but execute (search) permission is required on all of the
directories in path that lead to the file.

.PP
The elements that are obtained and stored in the array \fIVALUES\fP:
.PP
\fIVALUES(1)\fP   Device ID
\fIVALUES(2)\fP   Inode number
\fIVALUES(3)\fP   File mode
\fIVALUES(4)\fP   Number of links
\fIVALUES(5)\fP   Owner's uid
\fIVALUES(6)\fP   Owner's gid
\fIVALUES(7)\fP   ID of device containing directory entry for file (0 if not available)
\fIVALUES(8)\fP   File size (bytes)
\fIVALUES(9)\fP   Last access time
\fIVALUES(10)\fP  Last modification time
\fIVALUES(11)\fP  Last file status change time
\fIVALUES(12)\fP  Preferred I/O block size (-1 if not available)
\fIVALUES(13)\fP  Number of blocks allocated (-1 if not available)

.PP
Not all these elements are relevant on all systems. 
If an element is not relevant, it is returned as 0.

.PP
This intrinsic is provided in both subroutine and function forms; however,
only one form can be used in any given program unit.

.SH STANDARD
GNU extension

.SH CLASS
Subroutine, function

.SH SYNTAX

.PP
\fICALL STAT(NAME, VALUES [, STATUS])\fP
\fISTATUS = STAT(NAME, VALUES)\fP

.SH ARGUMENTS

.PP
\fINAME\fP   The type shall be \fICHARACTER\fP, of the
default kind and a valid path within the file system. 
\fIVALUES\fP The type shall be \fIINTEGER(4), DIMENSION(13)\fP. 
\fISTATUS\fP (Optional) status flag of type \fIINTEGER(4)\fP. Returns 0
on success and a system specific error code otherwise.

.SH EXAMPLE

          PROGRAM test_stat
            INTEGER, DIMENSION(13) :: buff
            INTEGER :: status
          
            CALL STAT("/etc/passwd", buff, status)
          
            IF (status == 0) THEN
              WRITE (*, FMT="('Device ID:',               T30, I19)") buff(1)
              WRITE (*, FMT="('Inode number:',            T30, I19)") buff(2)
              WRITE (*, FMT="('File mode (octal):',       T30, O19)") buff(3)
              WRITE (*, FMT="('Number of links:',         T30, I19)") buff(4)
              WRITE (*, FMT="('Owner''s uid:',            T30, I19)") buff(5)
              WRITE (*, FMT="('Owner''s gid:',            T30, I19)") buff(6)
              WRITE (*, FMT="('Device where located:',    T30, I19)") buff(7)
              WRITE (*, FMT="('File size:',               T30, I19)") buff(8)
              WRITE (*, FMT="('Last access time:',        T30, A19)") CTIME(buff(9))
              WRITE (*, FMT="('Last modification time',   T30, A19)") CTIME(buff(10))
              WRITE (*, FMT="('Last status change time:', T30, A19)") CTIME(buff(11))
              WRITE (*, FMT="('Preferred block size:',    T30, I19)") buff(12)
              WRITE (*, FMT="('No. of blocks allocated:', T30, I19)") buff(13)
            END IF
          END PROGRAM
.SH SEE ALSO
To stat an open file: FSTAT, to stat a link: LSTAT


.SH AUTHOR
.PP
This information was taken from the GFortran documentation (\fBhttps://gcc.gnu.org/onlinedocs/gcc-5.3.0/gfortran/\fP) and converted to a manpage by AstroFloyd (\fBhttp://astrofloyd.org\fP).

