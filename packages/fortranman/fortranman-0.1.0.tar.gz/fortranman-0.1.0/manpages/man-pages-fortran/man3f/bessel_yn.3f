." Copyright (C) 1999-2015 Free Software Foundation, Inc.

." Permission is granted to copy, distribute and/or modify this document
." under the terms of the GNU Free Documentation License, Version 1.3 or
." any later version published by the Free Software Foundation; with the
." Invariant Sections being ``Funding Free Software'', the Front-Cover
." Texts being (a) (see below), and with the Back-Cover Texts being (b)
." (see below).  A copy of the license is included in the section entitled
." ``GNU Free Documentation License''.

." (a) The FSF's Front-Cover Text is:

."      A GNU Manual

." (b) The FSF's Back-Cover Text is:

."      You have freedom to copy and modify this GNU Manual, like GNU
."      software.  Copies published by the Free Software Foundation raise
."      funds for GNU development.
.PP


.TH "BESSEL_YN" "3f" "Sun Mar 27 2016" "Intrinsic Fortran procedures" "Intrinsic Fortran procedures"

     
.SH DESCRIPTION
\fIBESSEL_YN(N, X)\fP computes the Bessel function of the second kind of
order \fIN\fP of \fIX\fP. This function is available under the name
\fIBESYN\fP as a GNU extension.  If \fIN\fP and \fIX\fP are arrays,
their ranks and shapes shall conform.

.PP
\fIBESSEL_YN(N1, N2, X)\fP returns an array with the Bessel functions
of the first kind of the orders \fIN1\fP to \fIN2\fP.

.SH STANDARD
Fortran 2008 and later, negative \fIN\fP is allowed as GNU extension

.SH CLASS
Elemental function, except for the transformational function
\fIBESSEL_YN(N1, N2, X)\fP

.SH SYNTAX

.PP
\fIRESULT = BESSEL_YN(N, X)\fP
\fIRESULT = BESSEL_YN(N1, N2, X)\fP

.SH ARGUMENTS

.PP
\fIN\fP Shall be a scalar or an array of type  \fIINTEGER\fP . 
\fIN1\fP Shall be a non-negative scalar of type  \fIINTEGER\fP. 
\fIN2\fP Shall be a non-negative scalar of type  \fIINTEGER\fP. 
\fIX\fP Shall be a scalar or an array of type  \fIREAL\fP;
for \fIBESSEL_YN(N1, N2, X)\fP it shall be scalar.

.SH RETURN VALUE
The return value is a scalar of type \fIREAL\fP. It has the same
kind as \fIX\fP.

.SH NOTE
The transformational function uses a recurrence algorithm which might,
for some values of \fIX\fP, lead to different results than calls to
the elemental function.

.SH EXAMPLE

          program test_besyn
            real(8) :: x = 1.0_8
            x = bessel_yn(5,x)
          end program test_besyn
.SH SPECIFIC NAMES

.PP
Name               Argument            Return type     Standard
\fIDBESYN(N,X)\fP \fIINTEGER N\fP \fIREAL(8)\fP  GNU extension
\fIREAL(8) X\fP 


.SH AUTHOR
.PP
This information was taken from the GFortran documentation (\fBhttps://gcc.gnu.org/onlinedocs/gcc-5.3.0/gfortran/\fP) and converted to a manpage by AstroFloyd (\fBhttp://astrofloyd.org\fP).

