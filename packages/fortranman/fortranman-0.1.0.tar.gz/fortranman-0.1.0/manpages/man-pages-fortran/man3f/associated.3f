." Copyright (C) 1999-2015 Free Software Foundation, Inc.

." Permission is granted to copy, distribute and/or modify this document
." under the terms of the GNU Free Documentation License, Version 1.3 or
." any later version published by the Free Software Foundation; with the
." Invariant Sections being ``Funding Free Software'', the Front-Cover
." Texts being (a) (see below), and with the Back-Cover Texts being (b)
." (see below).  A copy of the license is included in the section entitled
." ``GNU Free Documentation License''.

." (a) The FSF's Front-Cover Text is:

."      A GNU Manual

." (b) The FSF's Back-Cover Text is:

."      You have freedom to copy and modify this GNU Manual, like GNU
."      software.  Copies published by the Free Software Foundation raise
."      funds for GNU development.
.PP


.TH "ASSOCIATED" "3f" "Sun Mar 27 2016" "Intrinsic Fortran procedures" "Intrinsic Fortran procedures"

     
.SH DESCRIPTION
\fIASSOCIATED(POINTER [, TARGET])\fP determines the status of the pointer
\fIPOINTER\fP or if \fIPOINTER\fP is associated with the target \fITARGET\fP.

.SH STANDARD
Fortran 95 and later

.SH CLASS
Inquiry function

.SH SYNTAX
\fIRESULT = ASSOCIATED(POINTER [, TARGET])\fP

.SH ARGUMENTS

.PP
\fIPOINTER\fP \fIPOINTER\fP shall have the \fIPOINTER\fP attribute
and it can be of any type. 
\fITARGET\fP (Optional) \fITARGET\fP shall be a pointer or
a target.  It must have the same type, kind type parameter, and
array rank as \fIPOINTER\fP.
The association status of neither \fIPOINTER\fP nor \fITARGET\fP shall be
undefined.

.SH RETURN VALUE
\fIASSOCIATED(POINTER)\fP returns a scalar value of type \fILOGICAL(4)\fP. 
There are several cases:
          

\fB(A) When the optional \fITARGET\fP is not present then\fP \fIASSOCIATED(POINTER)\fP is true if \fIPOINTER\fP is associated with a target; otherwise, it returns false. 

\fB(B) If \fITARGET\fP is present and a scalar target, the result is true if\fP \fITARGET\fP is not a zero-sized storage sequence and the target associated with \fIPOINTER\fP occupies the same storage units.  If \fIPOINTER\fP is
disassociated, the result is false. 

\fB(C) If \fITARGET\fP is present and an array target, the result is true if\fP \fITARGET\fP and \fIPOINTER\fP have the same shape, are not zero-sized arrays,
are arrays whose elements are not zero-sized storage sequences, and
\fITARGET\fP and \fIPOINTER\fP occupy the same storage units in array element
order. 
As in case(B), the result is false, if \fIPOINTER\fP is disassociated. 

\fB(D) If \fITARGET\fP is present and an scalar pointer, the result is true\fP if \fITARGET\fP is associated with \fIPOINTER\fP, the target associated with
\fITARGET\fP are not zero-sized storage sequences and occupy the same storage
units. 
The result is false, if either \fITARGET\fP or \fIPOINTER\fP is disassociated. 

\fB(E) If \fITARGET\fP is present and an array pointer, the result is true if\fP target associated with \fIPOINTER\fP and the target associated with \fITARGET\fP
have the same shape, are not zero-sized arrays, are arrays whose elements are
not zero-sized storage sequences, and \fITARGET\fP and \fIPOINTER\fP occupy
the same storage units in array element order. 
The result is false, if either \fITARGET\fP or \fIPOINTER\fP is disassociated. 


.SH EXAMPLE

          program test_associated
             implicit none
             real, target  :: tgt(2) = (/1., 2./)
             real, pointer :: ptr(:)
             ptr => tgt
             if (associated(ptr)     .eqv. .false.) call abort
             if (associated(ptr,tgt) .eqv. .false.) call abort
          end program test_associated
.SH SEE ALSO
NULL


.SH AUTHOR
.PP
This information was taken from the GFortran documentation (\fBhttps://gcc.gnu.org/onlinedocs/gcc-5.3.0/gfortran/\fP) and converted to a manpage by AstroFloyd (\fBhttp://astrofloyd.org\fP).

