." Copyright (C) 1999-2015 Free Software Foundation, Inc.

." Permission is granted to copy, distribute and/or modify this document
." under the terms of the GNU Free Documentation License, Version 1.3 or
." any later version published by the Free Software Foundation; with the
." Invariant Sections being ``Funding Free Software'', the Front-Cover
." Texts being (a) (see below), and with the Back-Cover Texts being (b)
." (see below).  A copy of the license is included in the section entitled
." ``GNU Free Documentation License''.

." (a) The FSF's Front-Cover Text is:

."      A GNU Manual

." (b) The FSF's Back-Cover Text is:

."      You have freedom to copy and modify this GNU Manual, like GNU
."      software.  Copies published by the Free Software Foundation raise
."      funds for GNU development.
.PP


.TH "C_F_PROCPOINTER" "3f" "Sun Mar 27 2016" "Intrinsic Fortran procedures" "Intrinsic Fortran procedures"

     
.SH DESCRIPTION
\fIC_F_PROCPOINTER(CPTR, FPTR)\fP Assign the target of the C function pointer
\fICPTR\fP to the Fortran procedure pointer \fIFPTR\fP.

.SH STANDARD
Fortran 2003 and later

.SH CLASS
Subroutine

.SH SYNTAX
\fICALL C_F_PROCPOINTER(cptr, fptr)\fP

.SH ARGUMENTS

.PP
\fICPTR\fP  scalar of the type \fIC_FUNPTR\fP. It is
\fIINTENT(IN)\fP. 
\fIFPTR\fP  procedure pointer interoperable with \fIcptr\fP. It is
\fIINTENT(OUT)\fP.

.SH EXAMPLE

          program main
            use iso_c_binding
            implicit none
            abstract interface
              function func(a)
                import :: c_float
                real(c_float), intent(in) :: a
                real(c_float) :: func
              end function
            end interface
            interface
               function getIterFunc() bind(c,name="getIterFunc")
                 import :: c_funptr
                 type(c_funptr) :: getIterFunc
               end function
            end interface
            type(c_funptr) :: cfunptr
            procedure(func), pointer :: myFunc
            cfunptr = getIterFunc()
            call c_f_procpointer(cfunptr, myFunc)
          end program main
.SH SEE ALSO
C_LOC, C_F_POINTER


.SH AUTHOR
.PP
This information was taken from the GFortran documentation (\fBhttps://gcc.gnu.org/onlinedocs/gcc-5.3.0/gfortran/\fP) and converted to a manpage by AstroFloyd (\fBhttp://astrofloyd.org\fP).

