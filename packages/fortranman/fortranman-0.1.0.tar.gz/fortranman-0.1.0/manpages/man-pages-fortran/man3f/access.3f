." Copyright (C) 1999-2015 Free Software Foundation, Inc.

." Permission is granted to copy, distribute and/or modify this document
." under the terms of the GNU Free Documentation License, Version 1.3 or
." any later version published by the Free Software Foundation; with the
." Invariant Sections being ``Funding Free Software'', the Front-Cover
." Texts being (a) (see below), and with the Back-Cover Texts being (b)
." (see below).  A copy of the license is included in the section entitled
." ``GNU Free Documentation License''.

." (a) The FSF's Front-Cover Text is:

."      A GNU Manual

." (b) The FSF's Back-Cover Text is:

."      You have freedom to copy and modify this GNU Manual, like GNU
."      software.  Copies published by the Free Software Foundation raise
."      funds for GNU development.
.PP


.TH "ACCESS" "3f" "Sun Mar 27 2016" "Intrinsic Fortran procedures" "Intrinsic Fortran procedures"

     
.SH DESCRIPTION
\fIACCESS(NAME, MODE)\fP checks whether the file \fINAME\fP
exists, is readable, writable or executable. Except for the
executable check, \fIACCESS\fP can be replaced by
Fortran 95's \fIINQUIRE\fP.

.SH STANDARD
GNU extension

.SH CLASS
Inquiry function

.SH SYNTAX
\fIRESULT = ACCESS(NAME, MODE)\fP

.SH ARGUMENTS

.PP
\fINAME\fP Scalar \fICHARACTER\fP of default kind with the
file name. Tailing blank are ignored unless the character \fIachar(0)\fP
is present, then all characters up to and excluding \fIachar(0)\fP are
used as file name. 
\fIMODE\fP Scalar \fICHARACTER\fP of default kind with the
file access mode, may be any concatenation of \fI"r"\fP (readable),
\fI"w"\fP (writable) and \fI"x"\fP (executable), or \fI" "\fP to check
for existence.

.SH RETURN VALUE
Returns a scalar \fIINTEGER\fP, which is \fI0\fP if the file is
accessible in the given mode; otherwise or if an invalid argument
has been given for \fIMODE\fP the value \fI1\fP is returned.

.SH EXAMPLE

          program access_test
            implicit none
            character(len=*), parameter :: file  = 'test.dat'
            character(len=*), parameter :: file2 = 'test.dat  '//achar(0)
            if(access(file,' ') == 0) print *, trim(file),' is exists'
            if(access(file,'r') == 0) print *, trim(file),' is readable'
            if(access(file,'w') == 0) print *, trim(file),' is writable'
            if(access(file,'x') == 0) print *, trim(file),' is executable'
            if(access(file2,'rwx') == 0) &
              print *, trim(file2),' is readable, writable and executable'
          end program access_test
.SH SEE ALSO



.SH AUTHOR
.PP
This information was taken from the GFortran documentation (\fBhttps://gcc.gnu.org/onlinedocs/gcc-5.3.0/gfortran/\fP) and converted to a manpage by AstroFloyd (\fBhttp://astrofloyd.org\fP).

