." Copyright (C) 1999-2015 Free Software Foundation, Inc.

." Permission is granted to copy, distribute and/or modify this document
." under the terms of the GNU Free Documentation License, Version 1.3 or
." any later version published by the Free Software Foundation; with the
." Invariant Sections being ``Funding Free Software'', the Front-Cover
." Texts being (a) (see below), and with the Back-Cover Texts being (b)
." (see below).  A copy of the license is included in the section entitled
." ``GNU Free Documentation License''.

." (a) The FSF's Front-Cover Text is:

."      A GNU Manual

." (b) The FSF's Back-Cover Text is:

."      You have freedom to copy and modify this GNU Manual, like GNU
."      software.  Copies published by the Free Software Foundation raise
."      funds for GNU development.
.PP


.TH "MALLOC" "3f" "Sun Mar 27 2016" "Intrinsic Fortran procedures" "Intrinsic Fortran procedures"

     
.SH DESCRIPTION
\fIMALLOC(SIZE)\fP allocates \fISIZE\fP bytes of dynamic memory and
returns the address of the allocated memory. The \fIMALLOC\fP intrinsic
is an extension intended to be used with Cray pointers, and is provided
in GNU Fortran to allow the user to compile legacy code. For new code
using Fortran 95 pointers, the memory allocation intrinsic is
\fIALLOCATE\fP.

.SH STANDARD
GNU extension

.SH CLASS
Function

.SH SYNTAX
\fIPTR = MALLOC(SIZE)\fP

.SH ARGUMENTS

.PP
\fISIZE\fP The type shall be \fIINTEGER\fP.

.SH RETURN VALUE
The return value is of type \fIINTEGER(K)\fP, with \fIK\fP such that
variables of type \fIINTEGER(K)\fP have the same size as
C pointers (\fIsizeof(void *)\fP).

.SH EXAMPLE
The following example demonstrates the use of \fIMALLOC\fP and
\fIFREE\fP with Cray pointers.

          program test_malloc
            implicit none
            integer i
            real*8 x(*), z
            pointer(ptr_x,x)
          
            ptr_x = malloc(20*8)
            do i = 1, 20
              x(i) = sqrt(1.0d0 / i)
            end do
            z = 0
            do i = 1, 20
              z = z + x(i)
              print *, z
            end do
            call free(ptr_x)
          end program test_malloc
.SH SEE ALSO
FREE


.SH AUTHOR
.PP
This information was taken from the GFortran documentation (\fBhttps://gcc.gnu.org/onlinedocs/gcc-5.3.0/gfortran/\fP) and converted to a manpage by AstroFloyd (\fBhttp://astrofloyd.org\fP).

