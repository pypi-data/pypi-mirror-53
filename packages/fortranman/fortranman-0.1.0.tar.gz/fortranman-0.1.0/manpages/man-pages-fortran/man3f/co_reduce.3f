." Copyright (C) 1999-2015 Free Software Foundation, Inc.

." Permission is granted to copy, distribute and/or modify this document
." under the terms of the GNU Free Documentation License, Version 1.3 or
." any later version published by the Free Software Foundation; with the
." Invariant Sections being ``Funding Free Software'', the Front-Cover
." Texts being (a) (see below), and with the Back-Cover Texts being (b)
." (see below).  A copy of the license is included in the section entitled
." ``GNU Free Documentation License''.

." (a) The FSF's Front-Cover Text is:

."      A GNU Manual

." (b) The FSF's Back-Cover Text is:

."      You have freedom to copy and modify this GNU Manual, like GNU
."      software.  Copies published by the Free Software Foundation raise
."      funds for GNU development.
.PP


.TH "CO_REDUCE" "3f" "Sun Mar 27 2016" "Intrinsic Fortran procedures" "Intrinsic Fortran procedures"

     
.SH DESCRIPTION
\fICO_REDUCE\fP determines element-wise the reduction of the value of \fIA\fP
on all images of the current team.  The pure function passed as \fIOPERATOR\fP
is used to pairwise reduce the values of \fIA\fP by passing either the value
of \fIA\fP of different images or the result values of such a reduction as
argument.  If \fIA\fP is an array, the deduction is done element wise. If
\fIRESULT_IMAGE\fP is present, the result values are returned in \fIA\fP on
the specified image only and the value of \fIA\fP on the other images become
undefined.  If \fIRESULT_IMAGE\fP is not present, the value is returned on all
images.  If the execution was successful and \fISTAT\fP is present, it is
assigned the value zero.  If the execution failed, \fISTAT\fP gets assigned
a nonzero value and, if present, \fIERRMSG\fP gets assigned a value describing
the occurred error.

.SH STANDARD
Technical Specification (TS) 18508 or later

.SH CLASS
Collective subroutine

.SH SYNTAX
\fICALL CO_REDUCE(A, OPERATOR, [, RESULT_IMAGE, STAT, ERRMSG])\fP

.SH ARGUMENTS

.PP
\fIA\fP            is an \fIINTENT(INOUT)\fP argument and shall be
nonpolymorphic. If it is allocatable, it shall be allocated; if it is a pointer,
it shall be associated.  \fIA\fP shall have the same type and type parameters on
all images of the team; if it is an array, it shall have the same shape on all
images. 
\fIOPERATOR\fP     pure function with two scalar nonallocatable
arguments, which shall be nonpolymorphic and have the same type and type
parameters as \fIA\fP.  The function shall return a nonallocatable scalar of
the same type and type parameters as \fIA\fP.  The function shall be the same on
all images and with regards to the arguments mathematically commutative and
associative.  Note that \fIOPERATOR\fP may not be an elemental function, unless
it is an intrisic function. 
\fIRESULT_IMAGE\fP (optional) a scalar integer expression; if
present, it shall have the same the same value on all images and refer to an
image of the current team. 
\fISTAT\fP         (optional) a scalar integer variable
\fIERRMSG\fP       (optional) a scalar character variable

.SH EXAMPLE

          program test
            integer :: val
            val = this_image ()
            call co_reduce (val, result_image=1, operator=myprod)
            if (this_image() == 1) then
              write(*,*) "Product value", val  ! prints num_images() factorial
            end if
          contains
            pure function myprod(a, b)
              integer, value :: a, b
              integer :: myprod
              myprod = a * b
            end function myprod
          end program test
.SH NOTE
While the rules permit in principle an intrinsic function, none of the
intrinsics in the standard fulfill the criteria of having a specific
function, which takes two arguments of the same type and returning that
type as result.

.SH SEE ALSO
CO_MIN, CO_MAX, CO_SUM, CO_BROADCAST


.SH AUTHOR
.PP
This information was taken from the GFortran documentation (\fBhttps://gcc.gnu.org/onlinedocs/gcc-5.3.0/gfortran/\fP) and converted to a manpage by AstroFloyd (\fBhttp://astrofloyd.org\fP).

