." Copyright (C) 1999-2015 Free Software Foundation, Inc.

." Permission is granted to copy, distribute and/or modify this document
." under the terms of the GNU Free Documentation License, Version 1.3 or
." any later version published by the Free Software Foundation; with the
." Invariant Sections being ``Funding Free Software'', the Front-Cover
." Texts being (a) (see below), and with the Back-Cover Texts being (b)
." (see below).  A copy of the license is included in the section entitled
." ``GNU Free Documentation License''.

." (a) The FSF's Front-Cover Text is:

."      A GNU Manual

." (b) The FSF's Back-Cover Text is:

."      You have freedom to copy and modify this GNU Manual, like GNU
."      software.  Copies published by the Free Software Foundation raise
."      funds for GNU development.
.PP


.TH "TRANSFER" "3f" "Sun Mar 27 2016" "Intrinsic Fortran procedures" "Intrinsic Fortran procedures"

     
.SH DESCRIPTION
Interprets the bitwise representation of \fISOURCE\fP in memory as if it
is the representation of a variable or array of the same type and type
parameters as \fIMOLD\fP.

.PP
This is approximately equivalent to the C concept of \fIcasting\fP one
type to another.

.SH STANDARD
Fortran 95 and later

.SH CLASS
Transformational function

.SH SYNTAX
\fIRESULT = TRANSFER(SOURCE, MOLD[, SIZE])\fP

.SH ARGUMENTS

.PP
\fISOURCE\fP Shall be a scalar or an array of any type. 
\fIMOLD\fP   Shall be a scalar or an array of any type. 
\fISIZE\fP   (Optional) shall be a scalar of type
\fIINTEGER\fP.

.SH RETURN VALUE
The result has the same type as \fIMOLD\fP, with the bit level
representation of \fISOURCE\fP.  If \fISIZE\fP is present, the result is
a one-dimensional array of length \fISIZE\fP.  If \fISIZE\fP is absent
but \fIMOLD\fP is an array (of any size or shape), the result is a one-
dimensional array of the minimum length needed to contain the entirety
of the bitwise representation of \fISOURCE\fP.   If \fISIZE\fP is absent
and \fIMOLD\fP is a scalar, the result is a scalar.

.PP
If the bitwise representation of the result is longer than that of
\fISOURCE\fP, then the leading bits of the result correspond to those of
\fISOURCE\fP and any trailing bits are filled arbitrarily.

.PP
When the resulting bit representation does not correspond to a valid
representation of a variable of the same type as \fIMOLD\fP, the results
are undefined, and subsequent operations on the result cannot be
guaranteed to produce sensible behavior.  For example, it is possible to
create \fILOGICAL\fP variables for which \fIVAR\fP and
\fI.NOT.\fP\fIVAR\fP both appear to be true.

.SH EXAMPLE

          PROGRAM test_transfer
            integer :: x = 2143289344
            print *, transfer(x, 1.0)    ! prints "NaN" on i686
          END PROGRAM
     

.SH AUTHOR
.PP
This information was taken from the GFortran documentation (\fBhttps://gcc.gnu.org/onlinedocs/gcc-5.3.0/gfortran/\fP) and converted to a manpage by AstroFloyd (\fBhttp://astrofloyd.org\fP).

