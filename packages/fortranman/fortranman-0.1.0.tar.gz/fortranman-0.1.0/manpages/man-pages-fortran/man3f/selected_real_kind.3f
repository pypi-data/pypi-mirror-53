." Copyright (C) 1999-2015 Free Software Foundation, Inc.

." Permission is granted to copy, distribute and/or modify this document
." under the terms of the GNU Free Documentation License, Version 1.3 or
." any later version published by the Free Software Foundation; with the
." Invariant Sections being ``Funding Free Software'', the Front-Cover
." Texts being (a) (see below), and with the Back-Cover Texts being (b)
." (see below).  A copy of the license is included in the section entitled
." ``GNU Free Documentation License''.

." (a) The FSF's Front-Cover Text is:

."      A GNU Manual

." (b) The FSF's Back-Cover Text is:

."      You have freedom to copy and modify this GNU Manual, like GNU
."      software.  Copies published by the Free Software Foundation raise
."      funds for GNU development.
.PP


.TH "SELECTED_REAL_KIND" "3f" "Sun Mar 27 2016" "Intrinsic Fortran procedures" "Intrinsic Fortran procedures"

     
.SH DESCRIPTION
\fISELECTED_REAL_KIND(P,R)\fP returns the kind value of a real data type
with decimal precision of at least \fIP\fP digits, exponent range of
at least \fIR\fP, and with a radix of \fIRADIX\fP.

.SH STANDARD
Fortran 95 and later, with \fIRADIX\fP Fortran 2008 or later

.SH CLASS
Transformational function

.SH SYNTAX
\fIRESULT = SELECTED_REAL_KIND([P, R, RADIX])\fP

.SH ARGUMENTS

.PP
\fIP\fP (Optional) shall be a scalar and of type \fIINTEGER\fP. 
\fIR\fP (Optional) shall be a scalar and of type \fIINTEGER\fP. 
\fIRADIX\fP (Optional) shall be a scalar and of type \fIINTEGER\fP.
Before Fortran 2008, at least one of the arguments \fIR\fP or \fIP\fP shall
be present; since Fortran 2008, they are assumed to be zero if absent.

.SH RETURN VALUE

\fISELECTED_REAL_KIND\fP returns the value of the kind type parameter of
a real data type with decimal precision of at least \fIP\fP digits, a
decimal exponent range of at least \fIR\fP, and with the requested
\fIRADIX\fP. If the \fIRADIX\fP parameter is absent, real kinds with
any radix can be returned. If more than one real data type meet the
criteria, the kind of the data type with the smallest decimal precision
is returned. If no real data type matches the criteria, the result is
          

\fB-1 if the processor does not support a real data type with a\fP precision greater than or equal to \fIP\fP, but the \fIR\fP and
\fIRADIX\fP requirements can be fulfilled

\fB-2 if the processor does not support a real type with an exponent\fP range greater than or equal to \fIR\fP, but \fIP\fP and \fIRADIX\fP
are fulfillable

\fB-3 if \fIRADIX\fP but not \fIP\fP and \fIR\fP requirements\fP are fulfillable

\fB-4 if \fIRADIX\fP and either \fIP\fP or \fIR\fP requirements\fP are fulfillable

\fB-5 if there is no real type with the given \fIRADIX\fP\fP 

.SH SEE ALSO
PRECISION, RANGE, RADIX

.SH EXAMPLE

          program real_kinds
            integer,parameter :: p6 = selected_real_kind(6)
            integer,parameter :: p10r100 = selected_real_kind(10,100)
            integer,parameter :: r400 = selected_real_kind(r=400)
            real(kind=p6) :: x
            real(kind=p10r100) :: y
            real(kind=r400) :: z
          
            print *, precision(x), range(x)
            print *, precision(y), range(y)
            print *, precision(z), range(z)
          end program real_kinds
     

.SH AUTHOR
.PP
This information was taken from the GFortran documentation (\fBhttps://gcc.gnu.org/onlinedocs/gcc-5.3.0/gfortran/\fP) and converted to a manpage by AstroFloyd (\fBhttp://astrofloyd.org\fP).

