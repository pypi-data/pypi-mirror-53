diff --git a/node_modules/vue-timers/index.js b/node_modules/vue-timers/index.js
index 6087584..b131fd6 100644
--- a/node_modules/vue-timers/index.js
+++ b/node_modules/vue-timers/index.js
@@ -1,5 +1,5 @@
-import VueTimers from './mixin'
-import { assign } from './utils'
+import VueTimers from './mixin.js'
+import { assign } from './utils.js'
 
 export default function(Vue) {
   Vue.config.optionMergeStrategies.timers = Vue.config.optionMergeStrategies.methods
@@ -11,3 +11,5 @@ export function timer(name, time, options) {
 }
 
 export const mixin = VueTimers
+
+window.VueTimers = VueTimers
diff --git a/node_modules/vue-timers/mixin.js b/node_modules/vue-timers/mixin.js
index 0244c66..dda447c 100644
--- a/node_modules/vue-timers/mixin.js
+++ b/node_modules/vue-timers/mixin.js
@@ -1,4 +1,4 @@
-import { set, isArray } from './utils'
+import { set, isArray } from './utils.js'
 
 function generateData(timers) {
   return Object.keys(timers).reduce(function(acc, cur) {
@@ -30,23 +30,23 @@ function generateTimer(options, vm) {
 }
 
 function normalizeConfig(config, vm) {
-  if (process.env.NODE_ENV !== 'production') {
-    if (!config.name) {
-      throw new Error('[vue-timers.create] name is required')
-    }
-    if (!config.callback && typeof vm[config.name] !== 'function') {
-      throw new ReferenceError(
-        '[vue-timers.create] Cannot find method ' + config.name
-      )
-    }
-    if (config.callback && typeof config.callback !== 'function') {
-      throw new TypeError(
-        '[vue-timers.create] Timer callback should be a function, ' +
-          typeof config.callback +
-          ' given'
-      )
-    }
-  }
+//  if (process.env.NODE_ENV !== 'production') {
+//    if (!config.name) {
+//      throw new Error('[vue-timers.create] name is required')
+//    }
+//    if (!config.callback && typeof vm[config.name] !== 'function') {
+//      throw new ReferenceError(
+//        '[vue-timers.create] Cannot find method ' + config.name
+//      )
+//    }
+//    if (config.callback && typeof config.callback !== 'function') {
+//      throw new TypeError(
+//        '[vue-timers.create] Timer callback should be a function, ' +
+//          typeof config.callback +
+//          ' given'
+//      )
+//    }
+//  }
   return {
     name: config.name,
     time: config.time || 0,
@@ -88,11 +88,11 @@ export default {
     var options = vm.$options.timers
     vm.$timer = {
       start: function(name) {
-        if (process.env.NODE_ENV !== 'production' && !(name in options)) {
-          throw new ReferenceError(
-            '[vue-timers.start] Cannot find timer ' + name
-          )
-        }
+//        if (process.env.NODE_ENV !== 'production' && !(name in options)) {
+//          throw new ReferenceError(
+//            '[vue-timers.start] Cannot find timer ' + name
+//          )
+//        }
         if (data[name].isRunning) return
         data[name].isRunning = true
         data[name].instance = generateTimer(
@@ -107,11 +107,11 @@ export default {
       },
 
       stop: function(name) {
-        if (process.env.NODE_ENV !== 'production' && !(name in options)) {
-          throw new ReferenceError(
-            '[vue-timers.stop] Cannot find timer ' + name
-          )
-        }
+//        if (process.env.NODE_ENV !== 'production' && !(name in options)) {
+//          throw new ReferenceError(
+//            '[vue-timers.stop] Cannot find timer ' + name
+//          )
+//        }
         if (!data[name].isRunning) return
         clearTimer(options[name].repeat)(data[name].instance)
         data[name].isRunning = false
@@ -119,11 +119,11 @@ export default {
       },
 
       restart: function(name) {
-        if (process.env.NODE_ENV !== 'production' && !(name in options)) {
-          throw new ReferenceError(
-            '[vue-timers.restart] Cannot find timer ' + name
-          )
-        }
+//        if (process.env.NODE_ENV !== 'production' && !(name in options)) {
+//          throw new ReferenceError(
+//            '[vue-timers.restart] Cannot find timer ' + name
+//          )
+//        }
         this.stop(name)
         this.start(name)
         vm.$emit('timer-restart:' + name)
