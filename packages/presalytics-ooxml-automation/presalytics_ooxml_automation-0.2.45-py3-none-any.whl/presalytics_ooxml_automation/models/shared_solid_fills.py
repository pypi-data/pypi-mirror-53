# coding: utf-8

"""
    OOXML Automation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.1.0-no-tags
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class SharedSolidFills(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'hex_value': 'str',
        'is_user_color': 'bool',
        'color_type_id': 'int',
        'theme_fill_map_id': 'str',
        'theme_fill_map': 'SharedFillMap',
        'color_transformations_id': 'str',
        'color_transformations': 'SharedColorTransformations',
        'id': 'str',
        'date_created': 'datetime',
        'user_created': 'str',
        'date_modified': 'datetime',
        'user_modified': 'str'
    }

    attribute_map = {
        'hex_value': 'hexValue',
        'is_user_color': 'isUserColor',
        'color_type_id': 'colorTypeId',
        'theme_fill_map_id': 'themeFillMapId',
        'theme_fill_map': 'themeFillMap',
        'color_transformations_id': 'colorTransformationsId',
        'color_transformations': 'colorTransformations',
        'id': 'id',
        'date_created': 'dateCreated',
        'user_created': 'userCreated',
        'date_modified': 'dateModified',
        'user_modified': 'userModified'
    }

    def __init__(self, hex_value=None, is_user_color=None, color_type_id=None, theme_fill_map_id=None, theme_fill_map=None, color_transformations_id=None, color_transformations=None, id=None, date_created=None, user_created=None, date_modified=None, user_modified=None):  # noqa: E501
        """SharedSolidFills - a model defined in OpenAPI"""  # noqa: E501

        self._hex_value = None
        self._is_user_color = None
        self._color_type_id = None
        self._theme_fill_map_id = None
        self._theme_fill_map = None
        self._color_transformations_id = None
        self._color_transformations = None
        self._id = None
        self._date_created = None
        self._user_created = None
        self._date_modified = None
        self._user_modified = None
        self.discriminator = None

        self.hex_value = hex_value
        if is_user_color is not None:
            self.is_user_color = is_user_color
        self.color_type_id = color_type_id
        self.theme_fill_map_id = theme_fill_map_id
        if theme_fill_map is not None:
            self.theme_fill_map = theme_fill_map
        self.color_transformations_id = color_transformations_id
        if color_transformations is not None:
            self.color_transformations = color_transformations
        if id is not None:
            self.id = id
        if date_created is not None:
            self.date_created = date_created
        if user_created is not None:
            self.user_created = user_created
        if date_modified is not None:
            self.date_modified = date_modified
        if user_modified is not None:
            self.user_modified = user_modified

    @property
    def hex_value(self):
        """Gets the hex_value of this SharedSolidFills.  # noqa: E501


        :return: The hex_value of this SharedSolidFills.  # noqa: E501
        :rtype: str
        """
        return self._hex_value

    @hex_value.setter
    def hex_value(self, hex_value):
        """Sets the hex_value of this SharedSolidFills.


        :param hex_value: The hex_value of this SharedSolidFills.  # noqa: E501
        :type: str
        """

        self._hex_value = hex_value

    @property
    def is_user_color(self):
        """Gets the is_user_color of this SharedSolidFills.  # noqa: E501


        :return: The is_user_color of this SharedSolidFills.  # noqa: E501
        :rtype: bool
        """
        return self._is_user_color

    @is_user_color.setter
    def is_user_color(self, is_user_color):
        """Sets the is_user_color of this SharedSolidFills.


        :param is_user_color: The is_user_color of this SharedSolidFills.  # noqa: E501
        :type: bool
        """

        self._is_user_color = is_user_color

    @property
    def color_type_id(self):
        """Gets the color_type_id of this SharedSolidFills.  # noqa: E501


        :return: The color_type_id of this SharedSolidFills.  # noqa: E501
        :rtype: int
        """
        return self._color_type_id

    @color_type_id.setter
    def color_type_id(self, color_type_id):
        """Sets the color_type_id of this SharedSolidFills.


        :param color_type_id: The color_type_id of this SharedSolidFills.  # noqa: E501
        :type: int
        """

        self._color_type_id = color_type_id

    @property
    def theme_fill_map_id(self):
        """Gets the theme_fill_map_id of this SharedSolidFills.  # noqa: E501


        :return: The theme_fill_map_id of this SharedSolidFills.  # noqa: E501
        :rtype: str
        """
        return self._theme_fill_map_id

    @theme_fill_map_id.setter
    def theme_fill_map_id(self, theme_fill_map_id):
        """Sets the theme_fill_map_id of this SharedSolidFills.


        :param theme_fill_map_id: The theme_fill_map_id of this SharedSolidFills.  # noqa: E501
        :type: str
        """

        self._theme_fill_map_id = theme_fill_map_id

    @property
    def theme_fill_map(self):
        """Gets the theme_fill_map of this SharedSolidFills.  # noqa: E501


        :return: The theme_fill_map of this SharedSolidFills.  # noqa: E501
        :rtype: SharedFillMap
        """
        return self._theme_fill_map

    @theme_fill_map.setter
    def theme_fill_map(self, theme_fill_map):
        """Sets the theme_fill_map of this SharedSolidFills.


        :param theme_fill_map: The theme_fill_map of this SharedSolidFills.  # noqa: E501
        :type: SharedFillMap
        """

        self._theme_fill_map = theme_fill_map

    @property
    def color_transformations_id(self):
        """Gets the color_transformations_id of this SharedSolidFills.  # noqa: E501


        :return: The color_transformations_id of this SharedSolidFills.  # noqa: E501
        :rtype: str
        """
        return self._color_transformations_id

    @color_transformations_id.setter
    def color_transformations_id(self, color_transformations_id):
        """Sets the color_transformations_id of this SharedSolidFills.


        :param color_transformations_id: The color_transformations_id of this SharedSolidFills.  # noqa: E501
        :type: str
        """

        self._color_transformations_id = color_transformations_id

    @property
    def color_transformations(self):
        """Gets the color_transformations of this SharedSolidFills.  # noqa: E501


        :return: The color_transformations of this SharedSolidFills.  # noqa: E501
        :rtype: SharedColorTransformations
        """
        return self._color_transformations

    @color_transformations.setter
    def color_transformations(self, color_transformations):
        """Sets the color_transformations of this SharedSolidFills.


        :param color_transformations: The color_transformations of this SharedSolidFills.  # noqa: E501
        :type: SharedColorTransformations
        """

        self._color_transformations = color_transformations

    @property
    def id(self):
        """Gets the id of this SharedSolidFills.  # noqa: E501


        :return: The id of this SharedSolidFills.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SharedSolidFills.


        :param id: The id of this SharedSolidFills.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def date_created(self):
        """Gets the date_created of this SharedSolidFills.  # noqa: E501


        :return: The date_created of this SharedSolidFills.  # noqa: E501
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this SharedSolidFills.


        :param date_created: The date_created of this SharedSolidFills.  # noqa: E501
        :type: datetime
        """

        self._date_created = date_created

    @property
    def user_created(self):
        """Gets the user_created of this SharedSolidFills.  # noqa: E501


        :return: The user_created of this SharedSolidFills.  # noqa: E501
        :rtype: str
        """
        return self._user_created

    @user_created.setter
    def user_created(self, user_created):
        """Sets the user_created of this SharedSolidFills.


        :param user_created: The user_created of this SharedSolidFills.  # noqa: E501
        :type: str
        """

        self._user_created = user_created

    @property
    def date_modified(self):
        """Gets the date_modified of this SharedSolidFills.  # noqa: E501


        :return: The date_modified of this SharedSolidFills.  # noqa: E501
        :rtype: datetime
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this SharedSolidFills.


        :param date_modified: The date_modified of this SharedSolidFills.  # noqa: E501
        :type: datetime
        """

        self._date_modified = date_modified

    @property
    def user_modified(self):
        """Gets the user_modified of this SharedSolidFills.  # noqa: E501


        :return: The user_modified of this SharedSolidFills.  # noqa: E501
        :rtype: str
        """
        return self._user_modified

    @user_modified.setter
    def user_modified(self, user_modified):
        """Sets the user_modified of this SharedSolidFills.


        :param user_modified: The user_modified of this SharedSolidFills.  # noqa: E501
        :type: str
        """

        self._user_modified = user_modified

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SharedSolidFills):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
