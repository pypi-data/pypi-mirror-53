Metadata-Version: 1.1
Name: grimoirelab
Version: 0.2.31
Summary: Tool set for software development analytics
Home-page: https://github.com/chaoss/grimoirelab
Author: Bitergia
Author-email: jgb@bitergia.com
License: GPLv3
Description: GrimoireLab
        ===========
        
        GrimoireLab is a toolset for software development analytics. It includes
        a coordinated set of tools to retrieve data from systems used to support
        software development (repositories), store it in databases, enrich it by
        computing relevant metrics, and making it easy to run analytics and
        visualizations on it.
        
        You can learn more about GrimoireLab in the `GrimoireLab
        tutorial <https://grimoirelab.gitbooks.io/tutorial>`__, or visit the
        `GrimoireLab website <https://grimoirelab.github.io>`__.
        
        Currently, GrimoireLab is organized in the following repositories:
        
        -  `Perceval <https://github.com/chaoss/grimoirelab-perceval>`__:
           retrieval of data from data sources
        -  `Perceval (bundle for
           OPNFV) <https://github.com/chaoss/grimoirelab-perceval-opnfv>`__
        -  `Perceval (bundle for
           Mozilla) <https://github.com/chaoss/grimoirelab-perceval-mozilla>`__
        -  `Perceval (bundle for
           Puppet) <https://github.com/chaoss/grimoirelab-perceval-puppet>`__
        -  `Perceval (bundle for
           FINOS) <https://github.com/Bitergia/grimoirelab-perceval-finos>`__
        -  `Graal <https://github.com/chaoss/grimoirelab-graal>`__: source data
           analysis with external tools
        -  `KingArthur <https://github.com/chaoss/grimoirelab-kingarthur>`__:
           batch processing for massive retrieval
        -  `GrimoireElk <https://github.com/chaoss/grimoirelab-elk>`__: storage
           and enrichment of data
        -  `GrimoireLab
           Toolkit <https://github.com/chaoss/grimoirelab-toolkit>`__: common
           utilities
        -  `SortingHat <https://github.com/chaoss/grimoirelab-sortinghat>`__:
           identity management
        -  `Mordred <https://github.com/chaoss/grimoirelab-mordred>`__:
           orchestration
        -  `Kibiter <https://github.com/chaoss/grimoirelab-kibiter>`__:
           dashboard, downstream version of Kibana
        -  `Sigils <https://github.com/chaoss/grimoirelab-sigils>`__:
           visualizations and dashboards
        -  `Manuscripts <https://github.com/chaoss/grimoirelab-manuscripts>`__:
           reporting
        -  `Bestiary <https://github.com/chaoss/grimoirelab-bestiary>`__:
           web-based user interface to manage repositories and projects for
           Mordred
        -  `Hatstall <https://github.com/chaoss/grimoirelab-hatstall>`__:
           web-based user interface to manage SortingHat identities
        -  `Tutorial <https://github.com/chaoss/grimoirelab-tutorial>`__
        -  `GrimoireLab as a whole <https://github.com/chaoss/grimoirelab>`__
        
        GrimoireLab is a `CHAOSS <https://chaoss.community>`__ project.
        
        There are also some `components built by the GrimoreLab
        community <community_components.md>`__, which can be useful for you.
        
        Contents of this repository
        ---------------------------
        
        This repository is for stuff relevant to GrimoireLab as a whole. For
        example:
        
        -  Issues for new features or bug reports that affect more than one
           GrimoireLab module. In this case, let's open an issue here, and when
           implementing the fix or the feature, letÂ´s comment about the specific
           tickets in the specific modules that are used. For example, when
           supporting a new datasource, we will need patches (at least) in
           ``Perceval``, ``GrimoireELK`` and panels. We would open here the
           feature request (or the user story) for the whole case, an issue (and
           later a pull request) in ``Perceval`` for the data retriever, same
           for ``GrimoireELK`` for the enriching code, and same for ``panels``
           for the Kibiter panels.
        
        -  Information about "coordinated releases" for most of GrimoireLab
           components (directory `releases <releases>`__). Coordinated releases
           are snapshots (specific commits) of most of the GrimoireLab
           components that are expected to work together. See more information
           in the `releases README.md file <releases/README.md>`__.
        
        -  Utils (directory `utils <utils>`__) for doing stuff relevant to
           GrimoireLab as a whole. Includes a script to produce Python packages
           for a coordinated release, etc.
        
        -  Docker containers for showcasing GrimoireLab (directory
           `docker <docker>`__). Includes dockerfiles and configuration files
           for the GrimoireLab containers that can be used to demo the
           technology, and can be the basis for real deployments. See more
           information in the `docker README.md file <docker/README.md>`__.
        
        -  How releases of GrimoireLab are built and tested:
           `Building <BUILDING.md>`__
        
Keywords: development repositories analytics
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
