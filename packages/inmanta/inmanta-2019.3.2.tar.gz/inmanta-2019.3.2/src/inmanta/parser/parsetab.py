
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTrightMLSrightMLS_ENDAND AS CID CMP_OP DEFINED DICT END ENTITY EXTENDS FALSE FLOAT FOR ID IMPLEMENT IMPLEMENTATION IMPORT IN INDEX INT IS MATCHING MLS MLS_END NOT NULL OR PARENTS PEQ REGEX REL SEP STRING TRUE TYPEDEF UNDEF USING WHENmain : top_stmt mainmain : top_stmttop_stmt : mls\n                | entity_def\n                | implement_def\n                | implementation_def\n                | relation\n                | statement\n                | typedef\n                | index\n                | import import : IMPORT ns_refimport : IMPORT ns_ref AS IDstatement : assign\n                | constructor\n                | function_call\n                | forstmt_list : statement stmt_liststmt_list : statementassign : var_ref \'=\' operandassign : var_ref PEQ operandfor : FOR ID IN operand \':\' blockentity_def : ENTITY CID \':\' entity_body_outer entity_def : ENTITY ID \':\' entity_body_outer entity_def : ENTITY CID EXTENDS class_ref_list \':\' entity_body_outer entity_def : ENTITY ID EXTENDS class_ref_list \':\' entity_body_outer entity_body_outer : mls entity_body ENDentity_body_outer : entity_body END entity_body_outer : END entity_body_outer : mls END entity_body : entity_body attr entity_body : attrattr_type : ns_refattr_type : ns_ref \'?\'attr : attr_type IDattr : attr_type ID \'=\' constant\n           | attr_type ID \'=\' constant_listattr : attr_type ID \'=\' UNDEFattr_type_multi : ns_ref \'[\' \']\'attr_type_multi : ns_ref \'[\' \']\' \'?\'attr : attr_type_multi IDattr : attr_type_multi ID \'=\' constant_listattr : attr_type_multi ID \'=\' UNDEFattr : attr_type_multi ID \'=\' NULLattr : DICT IDattr : DICT ID \'=\' map_defattr : DICT ID \'=\' NULLattr : DICT \'?\' IDattr : DICT \'?\'  ID \'=\' map_defattr : DICT \'?\'  ID \'=\' NULLimplement_def : IMPLEMENT class_ref USING PARENTSimplement_def : IMPLEMENT class_ref USING ns_listimplement_def : IMPLEMENT class_ref USING ns_list WHEN conditionimplement_def : IMPLEMENT class_ref USING ns_list mlsimplement_def : IMPLEMENT class_ref USING PARENTS mlsimplement_def : IMPLEMENT class_ref USING ns_list WHEN condition mlsimplementation_def : IMPLEMENTATION ID FOR class_ref implementationimplementation : \':\' mls blockimplementation : \':\' blockblock : stmt_list ENDblock : ENDrelation : class_ref ID multi REL multi class_ref IDrelation : class_ref ID multi REL multi class_ref ID mlsrelation : relationnew mlsrelation : relationnewrelationnew : class_ref \'.\' ID multi REL class_ref \'.\' ID multirelationnew : class_ref \'.\' ID multi REL class_refrelationnew : class_ref \'.\' ID multi operand_list class_ref \'.\' ID multirelationnew : class_ref \'.\' ID multi operand_list class_refmulti : \'[\' INT \']\' multi : \'[\' INT \':\' \']\' multi : \'[\' INT \':\' INT \']\' multi : \'[\'  \':\' INT \']\' typedef : typedef_innertypedef : typedef_inner mlstypedef_inner : TYPEDEF ID AS ns_ref MATCHING REGEX\n                | TYPEDEF ID AS ns_ref MATCHING conditiontypedef_inner : TYPEDEF CID AS constructorindex : INDEX class_ref \'(\' id_list \')\' condition : \'(\' condition \')\'condition : operand CMP_OP operand\n                | operand IN list_def\n                | operand IN var_ref\n                | condition AND condition\n                | condition OR condition condition : function_call\n                | var_refcondition : NOT conditioncondition : var_ref \'.\' ID IS DEFINEDcondition : ID IS DEFINEDcondition : TRUE\n                | FALSE operand : constant\n              | function_call\n              | constructor\n              | list_def\n              | map_def\n              | var_ref\n              | index_lookup\n              | map_lookup map_lookup : attr_ref \'[\' operand \']\'\n                   | local_var \'[\' operand \']\'\n                   | map_lookup \'[\' operand \']\' constructor : class_ref \'(\' param_list \')\'  function_call : ns_ref \'(\' operand_list \')\' list_def : \'[\' operand_list \']\'pair_list : STRING \':\' operand \',\' pair_listpair_list : STRING \':\' operandpair_list :  map_def : \'{\' pair_list \'}\' map_def : \'{\' \'}\' index_lookup : class_ref \'[\' param_list \']\' index_lookup : attr_ref \'[\' param_list \']\' constant : mls  constant : INT\n    | FLOAT\n     constant : NULL\n     constant : REGEX\n     constant : TRUE\n     constant : FALSE\n     constant : STRING  constant_list : \'[\' constants \']\' constants : constantconstants : constants : constant \',\' constantsparam_list : ID \'=\' operand \',\' param_listparam_list : ID \'=\' operandparam_list : operand_list : operand \',\' operand_listoperand_list : operandoperand_list :ns_list : ns_ref \',\' ns_listns_list : ns_refvar_ref : attr_refattr_ref : var_ref \'.\' IDlocal_var : ns_refvar_ref : ns_refclass_ref : CIDclass_ref : ns_ref SEP CIDclass_ref_list : class_ref \',\' class_ref_listclass_ref_list : var_ref \',\' class_ref_listclass_ref_list : class_refclass_ref_list : var_refns_ref : ns_ref SEP IDns_ref : IDid_list : ID "," id_listid_list : IDmls : MLS_ENDmls : MLS mls'
    
_lr_action_items = {'MLS_END':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,21,22,23,24,25,26,32,34,44,45,47,49,50,51,55,57,66,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,94,96,97,98,101,104,114,116,117,118,122,123,124,129,131,132,133,137,139,140,142,145,146,154,157,158,159,160,163,169,170,172,177,178,179,184,185,186,191,194,195,196,198,199,200,201,202,203,204,207,208,209,210,213,215,218,220,221,223,224,225,226,227,231,239,240,241,243,246,248,249,253,254,261,262,263,264,265,266,267,268,269,270,275,277,278,280,],[12,12,-3,-4,-5,-6,-7,-8,-9,-10,-11,-148,12,-138,-145,12,-14,-15,-16,-17,12,-134,-149,-64,-75,-12,12,12,12,12,12,12,-139,-144,-137,-93,-94,-95,-96,-97,-98,-99,-100,-114,-115,-116,-117,-118,-119,-120,-121,12,-134,-20,-21,-135,-23,-29,-24,12,12,-133,12,-104,12,-13,-105,12,12,-111,12,12,-78,-30,-28,12,12,-55,12,-54,-70,-57,12,-79,-106,-110,12,12,-27,12,-25,-26,12,12,-87,-86,12,-145,-91,-92,-132,-71,-73,-67,-69,-59,-61,-22,-103,-112,-113,-101,-102,-76,-77,12,-56,12,12,12,-88,12,-72,-58,-60,-84,-85,-80,-81,-82,-83,-137,-135,-90,-63,12,-66,-68,-89,]),'MLS':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,21,22,23,24,25,26,32,34,44,45,47,49,50,51,55,57,66,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,94,96,97,98,101,104,114,116,117,118,122,123,124,129,131,132,133,137,139,140,142,145,146,154,157,158,159,160,163,169,170,172,177,178,179,184,185,186,191,194,195,196,198,199,200,201,202,203,204,207,208,209,210,213,215,218,220,221,223,224,225,226,227,231,239,240,241,243,246,248,249,253,254,261,262,263,264,265,266,267,268,269,270,275,277,278,280,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-148,13,-138,-145,13,-14,-15,-16,-17,13,-134,-149,-64,-75,-12,13,13,13,13,13,13,-139,-144,-137,-93,-94,-95,-96,-97,-98,-99,-100,-114,-115,-116,-117,-118,-119,-120,-121,13,-134,-20,-21,-135,-23,-29,-24,13,13,-133,13,-104,13,-13,-105,13,13,-111,13,13,-78,-30,-28,13,13,-55,13,-54,-70,-57,13,-79,-106,-110,13,13,-27,13,-25,-26,13,13,-87,-86,13,-145,-91,-92,-132,-71,-73,-67,-69,-59,-61,-22,-103,-112,-113,-101,-102,-76,-77,13,-56,13,13,13,-88,13,-72,-58,-60,-84,-85,-80,-81,-82,-83,-137,-135,-90,-63,13,-66,-68,-89,]),'ENTITY':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,21,22,23,24,25,26,32,34,44,45,47,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,96,97,98,101,104,114,116,117,118,123,129,131,137,142,145,146,158,160,163,169,172,177,178,185,191,194,195,198,199,201,202,203,204,207,208,209,210,213,215,218,220,221,223,224,225,226,227,239,246,248,249,253,254,261,262,263,264,265,266,267,268,269,270,277,278,280,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-148,-138,-145,-65,-14,-15,-16,-17,-74,-134,-149,-64,-75,-12,-139,-144,-137,-93,-94,-95,-96,-97,-98,-99,-100,-114,-115,-116,-117,-118,-119,-120,-121,-134,-20,-21,-135,-23,-29,-24,-51,-52,-133,-104,-13,-105,-111,-78,-30,-28,-55,-54,-70,-57,-79,-106,-110,-27,-25,-26,-53,-87,-86,-145,-91,-92,-132,-71,-73,-67,-69,-59,-61,-22,-103,-112,-113,-101,-102,-76,-77,-56,-88,-62,-72,-58,-60,-84,-85,-80,-81,-82,-83,-137,-135,-90,-63,-66,-68,-89,]),'IMPLEMENT':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,21,22,23,24,25,26,32,34,44,45,47,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,96,97,98,101,104,114,116,117,118,123,129,131,137,142,145,146,158,160,163,169,172,177,178,185,191,194,195,198,199,201,202,203,204,207,208,209,210,213,215,218,220,221,223,224,225,226,227,239,246,248,249,253,254,261,262,263,264,265,266,267,268,269,270,277,278,280,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-148,-138,-145,-65,-14,-15,-16,-17,-74,-134,-149,-64,-75,-12,-139,-144,-137,-93,-94,-95,-96,-97,-98,-99,-100,-114,-115,-116,-117,-118,-119,-120,-121,-134,-20,-21,-135,-23,-29,-24,-51,-52,-133,-104,-13,-105,-111,-78,-30,-28,-55,-54,-70,-57,-79,-106,-110,-27,-25,-26,-53,-87,-86,-145,-91,-92,-132,-71,-73,-67,-69,-59,-61,-22,-103,-112,-113,-101,-102,-76,-77,-56,-88,-62,-72,-58,-60,-84,-85,-80,-81,-82,-83,-137,-135,-90,-63,-66,-68,-89,]),'IMPLEMENTATION':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,21,22,23,24,25,26,32,34,44,45,47,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,96,97,98,101,104,114,116,117,118,123,129,131,137,142,145,146,158,160,163,169,172,177,178,185,191,194,195,198,199,201,202,203,204,207,208,209,210,213,215,218,220,221,223,224,225,226,227,239,246,248,249,253,254,261,262,263,264,265,266,267,268,269,270,277,278,280,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-148,-138,-145,-65,-14,-15,-16,-17,-74,-134,-149,-64,-75,-12,-139,-144,-137,-93,-94,-95,-96,-97,-98,-99,-100,-114,-115,-116,-117,-118,-119,-120,-121,-134,-20,-21,-135,-23,-29,-24,-51,-52,-133,-104,-13,-105,-111,-78,-30,-28,-55,-54,-70,-57,-79,-106,-110,-27,-25,-26,-53,-87,-86,-145,-91,-92,-132,-71,-73,-67,-69,-59,-61,-22,-103,-112,-113,-101,-102,-76,-77,-56,-88,-62,-72,-58,-60,-84,-85,-80,-81,-82,-83,-137,-135,-90,-63,-66,-68,-89,]),'INDEX':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,21,22,23,24,25,26,32,34,44,45,47,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,96,97,98,101,104,114,116,117,118,123,129,131,137,142,145,146,158,160,163,169,172,177,178,185,191,194,195,198,199,201,202,203,204,207,208,209,210,213,215,218,220,221,223,224,225,226,227,239,246,248,249,253,254,261,262,263,264,265,266,267,268,269,270,277,278,280,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-148,-138,-145,-65,-14,-15,-16,-17,-74,-134,-149,-64,-75,-12,-139,-144,-137,-93,-94,-95,-96,-97,-98,-99,-100,-114,-115,-116,-117,-118,-119,-120,-121,-134,-20,-21,-135,-23,-29,-24,-51,-52,-133,-104,-13,-105,-111,-78,-30,-28,-55,-54,-70,-57,-79,-106,-110,-27,-25,-26,-53,-87,-86,-145,-91,-92,-132,-71,-73,-67,-69,-59,-61,-22,-103,-112,-113,-101,-102,-76,-77,-56,-88,-62,-72,-58,-60,-84,-85,-80,-81,-82,-83,-137,-135,-90,-63,-66,-68,-89,]),'IMPORT':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,21,22,23,24,25,26,32,34,44,45,47,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,96,97,98,101,104,114,116,117,118,123,129,131,137,142,145,146,158,160,163,169,172,177,178,185,191,194,195,198,199,201,202,203,204,207,208,209,210,213,215,218,220,221,223,224,225,226,227,239,246,248,249,253,254,261,262,263,264,265,266,267,268,269,270,277,278,280,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-148,-138,-145,-65,-14,-15,-16,-17,-74,-134,-149,-64,-75,-12,-139,-144,-137,-93,-94,-95,-96,-97,-98,-99,-100,-114,-115,-116,-117,-118,-119,-120,-121,-134,-20,-21,-135,-23,-29,-24,-51,-52,-133,-104,-13,-105,-111,-78,-30,-28,-55,-54,-70,-57,-79,-106,-110,-27,-25,-26,-53,-87,-86,-145,-91,-92,-132,-71,-73,-67,-69,-59,-61,-22,-103,-112,-113,-101,-102,-76,-77,-56,-88,-62,-72,-58,-60,-84,-85,-80,-81,-82,-83,-137,-135,-90,-63,-66,-68,-89,]),'CID':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,21,22,23,24,25,26,27,31,32,34,44,45,47,48,49,50,51,56,58,65,66,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,94,96,97,98,100,101,104,114,116,117,118,122,123,124,129,130,131,132,133,137,139,140,142,145,146,155,156,158,159,160,162,163,166,167,169,170,171,172,174,177,178,179,184,185,191,194,195,196,198,199,200,201,202,203,204,207,208,209,210,212,213,215,216,218,220,221,223,224,225,226,227,239,240,241,243,246,248,249,253,254,261,262,263,264,265,266,267,268,269,270,277,278,280,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-148,35,-138,-145,15,-65,-14,-15,-16,-17,-74,15,54,-134,-149,-64,-75,-12,70,15,15,15,15,15,15,15,-139,-144,-137,-130,-93,-94,-95,-96,-97,-98,-99,-100,-114,-115,-116,-117,-118,-119,-120,-121,15,-134,-20,-21,-135,15,-23,-29,-24,-51,-52,-133,15,-104,15,-13,70,-105,15,15,-111,15,15,-78,-30,-28,15,15,-55,15,-54,15,-70,15,15,-57,15,15,-79,-129,-106,-110,15,15,-27,-25,-26,-53,15,-87,-86,15,-145,-91,-92,-132,-71,-73,-67,-69,15,-59,-61,15,-22,-103,-112,-113,-101,-102,-76,-77,-56,15,15,15,-88,-62,-72,-58,-60,-84,-85,-80,-81,-82,-83,-137,-135,-90,-63,-66,-68,-89,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,21,22,23,24,25,26,32,34,42,44,45,47,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,96,97,98,101,104,114,116,117,118,123,129,131,137,142,145,146,158,160,163,169,170,171,172,177,178,185,191,194,195,198,199,201,202,203,204,207,208,209,210,212,213,215,216,218,220,221,223,224,225,226,227,239,246,248,249,253,254,261,262,263,264,265,266,267,268,269,270,277,278,280,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-148,-138,-145,-65,-14,-15,-16,-17,-74,-134,-149,65,-64,-75,-12,-139,-144,-137,-93,-94,-95,-96,-97,-98,-99,-100,-114,-115,-116,-117,-118,-119,-120,-121,-134,-20,-21,-135,-23,-29,-24,-51,-52,-133,-104,-13,-105,-111,-78,-30,-28,-55,-54,-70,-57,20,20,-79,-106,-110,-27,-25,-26,-53,-87,-86,-145,-91,-92,-132,-71,-73,-67,-69,20,-59,-61,20,-22,-103,-112,-113,-101,-102,-76,-77,-56,-88,-62,-72,-58,-60,-84,-85,-80,-81,-82,-83,-137,-135,-90,-63,-66,-68,-89,]),'TYPEDEF':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,21,22,23,24,25,26,32,34,44,45,47,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,96,97,98,101,104,114,116,117,118,123,129,131,137,142,145,146,158,160,163,169,172,177,178,185,191,194,195,198,199,201,202,203,204,207,208,209,210,213,215,218,220,221,223,224,225,226,227,239,246,248,249,253,254,261,262,263,264,265,266,267,268,269,270,277,278,280,],[31,31,-3,-4,-5,-6,-7,-8,-9,-10,-11,-148,-138,-145,-65,-14,-15,-16,-17,-74,-134,-149,-64,-75,-12,-139,-144,-137,-93,-94,-95,-96,-97,-98,-99,-100,-114,-115,-116,-117,-118,-119,-120,-121,-134,-20,-21,-135,-23,-29,-24,-51,-52,-133,-104,-13,-105,-111,-78,-30,-28,-55,-54,-70,-57,-79,-106,-110,-27,-25,-26,-53,-87,-86,-145,-91,-92,-132,-71,-73,-67,-69,-59,-61,-22,-103,-112,-113,-101,-102,-76,-77,-56,-88,-62,-72,-58,-60,-84,-85,-80,-81,-82,-83,-137,-135,-90,-63,-66,-68,-89,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,34,40,41,44,45,47,48,49,50,51,52,55,56,57,58,59,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,116,117,118,122,123,124,129,130,131,132,133,134,137,139,140,142,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,166,167,169,170,171,172,173,174,177,178,179,184,185,189,190,191,194,195,196,198,199,200,201,202,203,204,205,207,208,209,210,211,212,213,215,216,218,220,221,223,224,225,226,227,228,229,230,232,233,234,235,236,238,239,240,241,243,244,245,246,248,249,250,251,253,254,259,260,261,262,263,264,265,266,267,268,269,270,274,277,278,280,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-148,36,-138,-145,16,39,42,43,-65,-14,-15,-16,-17,-74,16,16,53,-134,-149,62,64,-64,-75,-12,71,16,16,16,98,16,16,16,16,16,16,16,128,129,71,-139,-144,-137,-130,-93,-94,-95,-96,-97,-98,-99,-100,-114,-115,-116,-117,-118,-119,-120,-121,16,-134,-20,-21,-135,16,16,-23,16,16,-29,-32,148,149,150,-33,-24,-51,-52,-133,16,-104,16,-13,71,-105,16,16,64,-111,182,16,-78,16,-30,-28,-31,-35,-41,-45,189,-34,16,16,16,16,-55,201,-54,16,16,-70,16,16,-57,16,16,-79,128,-129,-106,-110,16,201,-27,-48,-39,-25,-26,-53,201,-87,-86,201,-145,-91,-92,-132,248,-71,-73,-67,-69,64,16,-59,-61,16,-22,-103,-112,-113,-101,-102,-76,-77,-36,-37,-38,-42,-43,-44,-46,-47,-40,-56,201,201,16,16,268,-88,-62,-72,271,272,-58,-60,-49,-50,-84,-85,-80,-81,-82,-83,-137,-135,-90,-63,-122,-66,-68,-89,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,15,16,21,22,23,24,25,26,32,33,34,44,45,47,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,96,97,98,101,104,114,116,117,118,123,129,131,137,142,145,146,158,160,163,169,172,177,178,185,191,194,195,198,199,201,202,203,204,207,208,209,210,213,215,218,220,221,223,224,225,226,227,239,246,248,249,253,254,261,262,263,264,265,266,267,268,269,270,277,278,280,],[0,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-148,-138,-145,-65,-14,-15,-16,-17,-74,-134,-1,-149,-64,-75,-12,-139,-144,-137,-93,-94,-95,-96,-97,-98,-99,-100,-114,-115,-116,-117,-118,-119,-120,-121,-134,-20,-21,-135,-23,-29,-24,-51,-52,-133,-104,-13,-105,-111,-78,-30,-28,-55,-54,-70,-57,-79,-106,-110,-27,-25,-26,-53,-87,-86,-145,-91,-92,-132,-71,-73,-67,-69,-59,-61,-22,-103,-112,-113,-101,-102,-76,-77,-56,-88,-62,-72,-58,-60,-84,-85,-80,-81,-82,-83,-137,-135,-90,-63,-66,-68,-89,]),',':([12,15,16,32,34,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,98,111,112,113,118,123,128,131,137,168,177,178,220,221,222,223,224,225,258,],[-148,-138,-145,-134,-149,-139,-144,-137,132,-93,-94,-95,-96,-97,-98,-99,-100,-114,-115,-116,-117,-118,-119,-120,-121,-134,-135,155,156,-137,161,-104,173,-105,-111,211,-106,-110,-103,-112,256,-113,-101,-102,275,]),')':([12,16,32,34,41,49,63,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,98,123,127,128,131,132,137,168,174,177,178,198,199,201,202,203,211,219,220,221,223,224,225,242,246,252,261,262,263,264,265,266,267,268,269,280,],[-148,-145,-134,-149,-128,-131,123,-144,-137,131,-130,-93,-94,-95,-96,-97,-98,-99,-100,-114,-115,-116,-117,-118,-119,-120,-121,-134,-135,-104,172,-147,-105,-131,-111,-127,-129,-106,-110,-87,-86,-145,-91,-92,-128,-146,-103,-112,-113,-101,-102,263,-88,-126,-84,-85,-80,-81,-82,-83,-137,-135,-90,-89,]),'END':([12,16,22,23,24,25,34,55,57,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,96,97,98,102,103,105,123,131,137,144,147,148,149,150,154,157,170,171,177,178,189,212,214,215,216,218,220,221,223,224,225,228,229,230,232,233,234,235,236,254,255,259,260,274,],[-148,-145,-14,-15,-16,-17,-149,104,104,-144,-137,-93,-94,-95,-96,-97,-98,-99,-100,-114,-115,-116,-117,-118,-119,-120,-121,-134,-20,-21,-135,145,146,-32,-104,-105,-111,185,-31,-35,-41,-45,104,104,215,215,-106,-110,-48,215,254,-61,-19,-22,-103,-112,-113,-101,-102,-36,-37,-38,-42,-43,-44,-46,-47,-60,-18,-49,-50,-122,]),'DICT':([12,34,55,57,83,84,85,86,87,88,89,90,102,103,105,137,144,147,148,149,150,154,157,178,189,228,229,230,232,233,234,235,236,259,260,274,],[-148,-149,108,108,-114,-115,-116,-117,-118,-119,-120,-121,108,108,-32,-111,108,-31,-35,-41,-45,108,108,-110,-48,-36,-37,-38,-42,-43,-44,-46,-47,-49,-50,-122,]),':':([12,15,16,32,34,35,36,61,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,98,110,111,112,113,115,120,123,125,126,131,137,138,177,178,192,193,220,221,223,224,225,],[-148,-138,-145,-134,-149,55,57,121,-139,-144,-137,-93,-94,-95,-96,-97,-98,-99,-100,-114,-115,-116,-117,-118,-119,-120,-121,-134,-135,154,-142,-143,-137,157,164,-104,170,171,-105,-111,179,-106,-110,-140,-141,-103,-112,-113,-101,-102,]),']':([12,16,34,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,94,98,120,123,131,132,134,135,137,139,153,164,165,168,174,175,176,177,178,180,181,182,183,206,211,220,221,223,224,225,231,252,257,258,275,279,],[-148,-145,-149,-144,-137,-130,-93,-94,-95,-96,-97,-98,-99,-100,-114,-115,-116,-117,-118,-119,-120,-121,-131,-134,-135,163,-104,-105,-131,-128,177,-111,-128,190,207,208,-127,-129,220,221,-106,-110,223,224,-145,225,249,-128,-103,-112,-113,-101,-102,-124,-126,274,-123,-124,-125,]),'CMP_OP':([12,34,71,72,75,77,78,79,81,82,83,84,85,86,87,90,94,123,131,137,177,178,197,198,199,201,202,203,220,221,223,224,225,226,268,],[-148,-149,-144,-137,-93,-95,-96,-97,-99,-100,-114,-115,-116,-117,-118,-121,-134,-104,-105,-111,-106,-110,243,-98,-94,-145,-119,-120,-103,-112,-113,-101,-102,-118,-135,]),'IN':([12,34,43,71,72,75,77,78,79,81,82,83,84,85,86,87,90,94,123,131,137,177,178,197,198,199,201,202,203,220,221,223,224,225,226,268,],[-148,-149,66,-144,-137,-93,-95,-96,-97,-99,-100,-114,-115,-116,-117,-118,-121,-134,-104,-105,-111,-106,-110,244,-98,-94,-145,-119,-120,-103,-112,-113,-101,-102,-118,-135,]),'}':([12,16,34,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,94,98,123,131,136,137,177,178,220,221,222,223,224,225,256,273,],[-148,-145,-149,-144,-137,-93,-94,-95,-96,-97,-98,-99,-100,-114,-115,-116,-117,-118,-119,-120,-121,137,-134,-135,-104,-105,178,-111,-106,-110,-103,-112,-108,-113,-101,-102,-109,-107,]),'AND':([12,16,32,34,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,98,123,131,137,177,178,195,198,199,201,202,203,220,221,223,224,225,227,242,246,261,262,263,264,265,266,267,268,269,280,],[-148,-145,-134,-149,-144,-137,-93,-94,-95,-96,-97,-98,-99,-100,-114,-115,-116,-117,-118,-119,-120,-121,-134,-135,-104,-105,-111,-106,-110,240,-87,-86,-145,-91,-92,-103,-112,-113,-101,-102,240,240,-88,-84,240,-80,-81,-82,-83,-137,-135,-90,-89,]),'OR':([12,16,32,34,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,98,123,131,137,177,178,195,198,199,201,202,203,220,221,223,224,225,227,242,246,261,262,263,264,265,266,267,268,269,280,],[-148,-145,-134,-149,-144,-137,-93,-94,-95,-96,-97,-98,-99,-100,-114,-115,-116,-117,-118,-119,-120,-121,-134,-135,-104,-105,-111,-106,-110,241,-87,-86,-145,-91,-92,-103,-112,-113,-101,-102,241,241,-88,-84,-85,-80,-81,-82,-83,-137,-135,-90,-89,]),'.':([15,16,18,29,30,32,70,71,72,80,94,98,112,113,182,198,201,209,210,217,266,267,268,],[-138,-145,40,-137,52,-134,-139,-144,-137,52,-134,-135,52,-137,-145,245,-145,250,251,-137,52,-137,-135,]),'(':([15,16,18,29,46,70,71,72,91,143,159,182,184,196,200,201,217,240,241,],[-138,-145,41,49,67,-139,-144,49,41,41,196,-145,196,196,196,-145,49,196,196,]),'USING':([15,37,70,],[-138,59,-139,]),'[':([15,16,39,49,50,51,62,66,70,71,72,82,91,92,94,95,98,109,119,122,124,132,133,139,140,159,163,179,182,184,186,187,196,200,201,207,208,220,224,225,240,241,243,244,249,268,271,272,],[-138,-145,61,92,92,92,61,92,-139,-144,-136,133,134,92,139,140,-135,153,61,92,92,92,92,92,92,92,-70,92,-145,92,231,231,92,92,-145,-71,-73,-103,-101,-102,92,92,92,92,-72,-135,61,61,]),'SEP':([16,29,38,47,71,72,109,113,118,141,182,201,217,267,],[-145,48,48,69,-144,130,69,48,69,69,-145,-145,48,69,]),'=':([16,29,30,32,64,71,98,148,149,150,182,189,217,],[-145,-137,50,-134,124,-144,-135,186,187,188,124,237,-137,]),'PEQ':([16,29,30,32,71,98,217,],[-145,-137,51,-134,-144,-135,-137,]),'AS':([16,47,53,54,71,],[-145,68,99,100,-144,]),'?':([16,71,108,109,190,],[-145,-144,151,152,238,]),'WHEN':([16,71,117,118,204,],[-145,-144,159,-133,-132,]),'MATCHING':([16,71,141,],[-145,-144,184,]),'EXTENDS':([35,36,],[56,58,]),'INT':([49,50,51,61,66,92,121,122,124,132,133,139,140,159,163,164,179,184,186,196,200,207,208,231,240,241,243,249,275,],[84,84,84,120,84,84,165,84,84,84,84,84,84,84,-70,206,84,84,84,84,84,-71,-73,84,84,84,84,-72,84,]),'FLOAT':([49,50,51,66,92,122,124,132,133,139,140,159,163,179,184,186,196,200,207,208,231,240,241,243,249,275,],[85,85,85,85,85,85,85,85,85,85,85,85,-70,85,85,85,85,85,-71,-73,85,85,85,85,-72,85,]),'NULL':([49,50,51,66,92,122,124,132,133,139,140,159,163,179,184,186,187,188,196,200,207,208,231,237,240,241,243,249,275,],[86,86,86,86,86,86,86,86,86,86,86,86,-70,86,86,86,234,236,86,86,-71,-73,86,260,86,86,86,-72,86,]),'REGEX':([49,50,51,66,92,122,124,132,133,139,140,159,163,179,184,186,196,200,207,208,231,240,241,243,249,275,],[87,87,87,87,87,87,87,87,87,87,87,87,-70,87,226,87,87,87,-71,-73,87,87,87,87,-72,87,]),'TRUE':([49,50,51,66,92,122,124,132,133,139,140,159,163,179,184,186,196,200,207,208,231,240,241,243,249,275,],[88,88,88,88,88,88,88,88,88,88,88,202,-70,88,202,88,202,202,-71,-73,88,202,202,88,-72,88,]),'FALSE':([49,50,51,66,92,122,124,132,133,139,140,159,163,179,184,186,196,200,207,208,231,240,241,243,249,275,],[89,89,89,89,89,89,89,89,89,89,89,203,-70,89,203,89,203,203,-71,-73,89,203,203,89,-72,89,]),'STRING':([49,50,51,66,92,93,122,124,132,133,139,140,159,163,179,184,186,196,200,207,208,231,240,241,243,249,256,275,],[90,90,90,90,90,138,90,90,90,90,90,90,90,-70,90,90,90,90,90,-71,-73,90,90,90,90,-72,138,90,]),'{':([49,50,51,66,92,122,124,132,133,139,140,159,163,179,184,188,196,200,207,208,237,240,241,243,249,],[93,93,93,93,93,93,93,93,93,93,93,93,-70,93,93,93,93,93,-71,-73,93,93,93,93,-72,]),'PARENTS':([59,],[116,]),'REL':([60,122,163,207,208,249,],[119,166,-70,-71,-73,-72,]),'NOT':([159,184,196,200,240,241,],[200,200,200,200,200,200,]),'UNDEF':([186,187,],[230,233,]),'IS':([201,268,],[247,276,]),'DEFINED':([247,276,],[269,280,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main':([0,2,],[1,33,]),'top_stmt':([0,2,],[2,2,]),'mls':([0,2,13,21,26,49,50,51,55,57,66,92,116,117,122,124,132,133,139,140,154,157,159,170,179,184,186,195,196,200,231,240,241,243,248,275,],[3,3,34,44,45,83,83,83,102,102,83,83,158,160,83,83,83,83,83,83,102,102,83,212,83,83,83,239,83,83,83,83,83,83,270,83,]),'entity_def':([0,2,],[4,4,]),'implement_def':([0,2,],[5,5,]),'implementation_def':([0,2,],[6,6,]),'relation':([0,2,],[7,7,]),'statement':([0,2,170,171,212,216,],[8,8,216,216,216,216,]),'typedef':([0,2,],[9,9,]),'index':([0,2,],[10,10,]),'import':([0,2,],[11,11,]),'class_ref':([0,2,17,27,49,50,51,56,58,65,66,92,100,122,124,132,133,139,140,155,156,159,162,166,167,170,171,179,184,196,200,212,216,240,241,243,],[18,18,37,46,91,91,91,111,111,125,91,91,143,91,91,91,91,91,91,111,111,91,205,209,210,143,143,91,91,91,91,143,143,91,91,91,]),'relationnew':([0,2,],[21,21,]),'assign':([0,2,170,171,212,216,],[22,22,22,22,22,22,]),'constructor':([0,2,49,50,51,66,92,100,122,124,132,133,139,140,159,170,171,179,184,196,200,212,216,240,241,243,],[23,23,77,77,77,77,77,142,77,77,77,77,77,77,77,23,23,77,77,77,77,23,23,77,77,77,]),'function_call':([0,2,49,50,51,66,92,122,124,132,133,139,140,159,170,171,179,184,196,200,212,216,240,241,243,],[24,24,76,76,76,76,76,76,76,76,76,76,76,199,24,24,76,199,199,199,24,24,199,199,76,]),'for':([0,2,170,171,212,216,],[25,25,25,25,25,25,]),'typedef_inner':([0,2,],[26,26,]),'ns_ref':([0,2,17,27,28,49,50,51,55,56,57,58,59,65,66,92,99,100,102,103,122,124,132,133,139,140,144,154,155,156,157,159,161,162,166,167,170,171,179,184,196,200,212,216,240,241,243,244,],[29,29,38,38,47,72,72,72,109,113,109,113,118,38,72,72,141,38,109,109,72,72,72,72,72,72,109,109,113,113,109,72,118,38,38,38,217,217,72,72,72,72,217,217,72,72,72,267,]),'var_ref':([0,2,49,50,51,56,58,66,92,122,124,132,133,139,140,155,156,159,170,171,179,184,196,200,212,216,240,241,243,244,],[30,30,80,80,80,112,112,80,80,80,80,80,80,80,80,112,112,198,30,30,80,198,198,198,30,30,198,198,80,266,]),'attr_ref':([0,2,49,50,51,56,58,66,92,122,124,132,133,139,140,155,156,159,170,171,179,184,196,200,212,216,240,241,243,244,],[32,32,94,94,94,32,32,94,94,94,94,94,94,94,94,32,32,94,32,32,94,94,94,94,32,32,94,94,94,32,]),'multi':([39,62,119,271,272,],[60,122,162,277,278,]),'param_list':([41,134,139,211,],[63,176,180,252,]),'operand_list':([49,92,122,132,],[73,135,167,174,]),'operand':([49,50,51,66,92,122,124,132,133,139,140,159,179,184,196,200,240,241,243,],[74,96,97,126,74,74,168,74,175,181,183,197,222,197,197,197,197,197,264,]),'constant':([49,50,51,66,92,122,124,132,133,139,140,159,179,184,186,196,200,231,240,241,243,275,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,228,75,75,258,75,75,75,258,]),'list_def':([49,50,51,66,92,122,124,132,133,139,140,159,179,184,196,200,240,241,243,244,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,265,]),'map_def':([49,50,51,66,92,122,124,132,133,139,140,159,179,184,188,196,200,237,240,241,243,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,235,79,79,259,79,79,79,]),'index_lookup':([49,50,51,66,92,122,124,132,133,139,140,159,179,184,196,200,240,241,243,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'map_lookup':([49,50,51,66,92,122,124,132,133,139,140,159,179,184,196,200,240,241,243,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'local_var':([49,50,51,66,92,122,124,132,133,139,140,159,179,184,196,200,240,241,243,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'entity_body_outer':([55,57,154,157,],[101,114,191,194,]),'entity_body':([55,57,102,154,157,],[103,103,144,103,103,]),'attr':([55,57,102,103,144,154,157,],[105,105,105,147,147,105,105,]),'attr_type':([55,57,102,103,144,154,157,],[106,106,106,106,106,106,106,]),'attr_type_multi':([55,57,102,103,144,154,157,],[107,107,107,107,107,107,107,]),'class_ref_list':([56,58,155,156,],[110,115,192,193,]),'ns_list':([59,161,],[117,204,]),'id_list':([67,173,],[127,219,]),'pair_list':([93,256,],[136,273,]),'implementation':([125,],[169,]),'condition':([159,184,196,200,240,241,],[195,227,242,246,261,262,]),'block':([170,171,212,],[213,218,253,]),'stmt_list':([170,171,212,216,],[214,214,214,255,]),'constant_list':([186,187,],[229,232,]),'constants':([231,275,],[257,279,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> top_stmt main','main',2,'p_main_collect','plyInmantaParser.py',103),
  ('main -> top_stmt','main',1,'p_main_term','plyInmantaParser.py',110),
  ('top_stmt -> mls','top_stmt',1,'p_top_stmt','plyInmantaParser.py',115),
  ('top_stmt -> entity_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',116),
  ('top_stmt -> implement_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',117),
  ('top_stmt -> implementation_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',118),
  ('top_stmt -> relation','top_stmt',1,'p_top_stmt','plyInmantaParser.py',119),
  ('top_stmt -> statement','top_stmt',1,'p_top_stmt','plyInmantaParser.py',120),
  ('top_stmt -> typedef','top_stmt',1,'p_top_stmt','plyInmantaParser.py',121),
  ('top_stmt -> index','top_stmt',1,'p_top_stmt','plyInmantaParser.py',122),
  ('top_stmt -> import','top_stmt',1,'p_top_stmt','plyInmantaParser.py',123),
  ('import -> IMPORT ns_ref','import',2,'p_import','plyInmantaParser.py',133),
  ('import -> IMPORT ns_ref AS ID','import',4,'p_import_1','plyInmantaParser.py',139),
  ('statement -> assign','statement',1,'p_stmt','plyInmantaParser.py',150),
  ('statement -> constructor','statement',1,'p_stmt','plyInmantaParser.py',151),
  ('statement -> function_call','statement',1,'p_stmt','plyInmantaParser.py',152),
  ('statement -> for','statement',1,'p_stmt','plyInmantaParser.py',153),
  ('stmt_list -> statement stmt_list','stmt_list',2,'p_stmt_list_collect','plyInmantaParser.py',167),
  ('stmt_list -> statement','stmt_list',1,'p_stmt_list_term','plyInmantaParser.py',174),
  ('assign -> var_ref = operand','assign',3,'p_assign','plyInmantaParser.py',179),
  ('assign -> var_ref PEQ operand','assign',3,'p_assign_extend','plyInmantaParser.py',185),
  ('for -> FOR ID IN operand : block','for',6,'p_for','plyInmantaParser.py',191),
  ('entity_def -> ENTITY CID : entity_body_outer','entity_def',4,'p_entity','plyInmantaParser.py',202),
  ('entity_def -> ENTITY ID : entity_body_outer','entity_def',4,'p_entity_err_1','plyInmantaParser.py',208),
  ('entity_def -> ENTITY CID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends','plyInmantaParser.py',213),
  ('entity_def -> ENTITY ID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends_err','plyInmantaParser.py',219),
  ('entity_body_outer -> mls entity_body END','entity_body_outer',3,'p_entity_body_outer','plyInmantaParser.py',224),
  ('entity_body_outer -> entity_body END','entity_body_outer',2,'p_entity_body_outer_1','plyInmantaParser.py',229),
  ('entity_body_outer -> END','entity_body_outer',1,'p_entity_body_outer_none','plyInmantaParser.py',234),
  ('entity_body_outer -> mls END','entity_body_outer',2,'p_entity_body_outer_4','plyInmantaParser.py',239),
  ('entity_body -> entity_body attr','entity_body',2,'p_entity_body_collect','plyInmantaParser.py',244),
  ('entity_body -> attr','entity_body',1,'p_entity_body','plyInmantaParser.py',250),
  ('attr_type -> ns_ref','attr_type',1,'p_attribute_type','plyInmantaParser.py',255),
  ('attr_type -> ns_ref ?','attr_type',2,'p_attribute_type_opt','plyInmantaParser.py',260),
  ('attr -> attr_type ID','attr',2,'p_attr','plyInmantaParser.py',265),
  ('attr -> attr_type ID = constant','attr',4,'p_attr_cte','plyInmantaParser.py',272),
  ('attr -> attr_type ID = constant_list','attr',4,'p_attr_cte','plyInmantaParser.py',273),
  ('attr -> attr_type ID = UNDEF','attr',4,'p_attr_undef','plyInmantaParser.py',280),
  ('attr_type_multi -> ns_ref [ ]','attr_type_multi',3,'p_attribute_type_multi','plyInmantaParser.py',287),
  ('attr_type_multi -> ns_ref [ ] ?','attr_type_multi',4,'p_attribute_type_multi_opt','plyInmantaParser.py',292),
  ('attr -> attr_type_multi ID','attr',2,'p_attr_list','plyInmantaParser.py',297),
  ('attr -> attr_type_multi ID = constant_list','attr',4,'p_attr_list_cte','plyInmantaParser.py',304),
  ('attr -> attr_type_multi ID = UNDEF','attr',4,'p_attr_list_undef','plyInmantaParser.py',311),
  ('attr -> attr_type_multi ID = NULL','attr',4,'p_attr_list_null','plyInmantaParser.py',318),
  ('attr -> DICT ID','attr',2,'p_attr_dict','plyInmantaParser.py',325),
  ('attr -> DICT ID = map_def','attr',4,'p_attr_list_dict','plyInmantaParser.py',331),
  ('attr -> DICT ID = NULL','attr',4,'p_attr_list_dict_null_err','plyInmantaParser.py',337),
  ('attr -> DICT ? ID','attr',3,'p_attr_dict_nullable','plyInmantaParser.py',342),
  ('attr -> DICT ? ID = map_def','attr',5,'p_attr_list_dict_nullable','plyInmantaParser.py',348),
  ('attr -> DICT ? ID = NULL','attr',5,'p_attr_list_dict_null','plyInmantaParser.py',354),
  ('implement_def -> IMPLEMENT class_ref USING PARENTS','implement_def',4,'p_implement_inh','plyInmantaParser.py',361),
  ('implement_def -> IMPLEMENT class_ref USING ns_list','implement_def',4,'p_implement','plyInmantaParser.py',367),
  ('implement_def -> IMPLEMENT class_ref USING ns_list WHEN condition','implement_def',6,'p_implement_when','plyInmantaParser.py',373),
  ('implement_def -> IMPLEMENT class_ref USING ns_list mls','implement_def',5,'p_implement_comment','plyInmantaParser.py',379),
  ('implement_def -> IMPLEMENT class_ref USING PARENTS mls','implement_def',5,'p_implement_inh_comment','plyInmantaParser.py',385),
  ('implement_def -> IMPLEMENT class_ref USING ns_list WHEN condition mls','implement_def',7,'p_implement_when_comment','plyInmantaParser.py',391),
  ('implementation_def -> IMPLEMENTATION ID FOR class_ref implementation','implementation_def',5,'p_implementation_def','plyInmantaParser.py',400),
  ('implementation -> : mls block','implementation',3,'p_implementation','plyInmantaParser.py',413),
  ('implementation -> : block','implementation',2,'p_implementation_1','plyInmantaParser.py',418),
  ('block -> stmt_list END','block',2,'p_block','plyInmantaParser.py',423),
  ('block -> END','block',1,'p_block_empty','plyInmantaParser.py',428),
  ('relation -> class_ref ID multi REL multi class_ref ID','relation',7,'p_relation','plyInmantaParser.py',436),
  ('relation -> class_ref ID multi REL multi class_ref ID mls','relation',8,'p_relation_comment','plyInmantaParser.py',446),
  ('relation -> relationnew mls','relation',2,'p_relation_new_outer_comment','plyInmantaParser.py',458),
  ('relation -> relationnew','relation',1,'p_relation_new_outer','plyInmantaParser.py',465),
  ('relationnew -> class_ref . ID multi REL class_ref . ID multi','relationnew',9,'p_relation_new','plyInmantaParser.py',470),
  ('relationnew -> class_ref . ID multi REL class_ref','relationnew',6,'p_relation_new_unidir','plyInmantaParser.py',476),
  ('relationnew -> class_ref . ID multi operand_list class_ref . ID multi','relationnew',9,'p_relation_new_annotated','plyInmantaParser.py',482),
  ('relationnew -> class_ref . ID multi operand_list class_ref','relationnew',6,'p_relation_new_annotated_unidir','plyInmantaParser.py',488),
  ('multi -> [ INT ]','multi',3,'p_multi_1','plyInmantaParser.py',494),
  ('multi -> [ INT : ]','multi',4,'p_multi_2','plyInmantaParser.py',499),
  ('multi -> [ INT : INT ]','multi',5,'p_multi_3','plyInmantaParser.py',504),
  ('multi -> [ : INT ]','multi',4,'p_multi_4','plyInmantaParser.py',509),
  ('typedef -> typedef_inner','typedef',1,'p_typedef_outer','plyInmantaParser.py',517),
  ('typedef -> typedef_inner mls','typedef',2,'p_typedef_outer_comment','plyInmantaParser.py',522),
  ('typedef_inner -> TYPEDEF ID AS ns_ref MATCHING REGEX','typedef_inner',6,'p_typedef_1','plyInmantaParser.py',529),
  ('typedef_inner -> TYPEDEF ID AS ns_ref MATCHING condition','typedef_inner',6,'p_typedef_1','plyInmantaParser.py',530),
  ('typedef_inner -> TYPEDEF CID AS constructor','typedef_inner',4,'p_typedef_cls','plyInmantaParser.py',536),
  ('index -> INDEX class_ref ( id_list )','index',5,'p_index','plyInmantaParser.py',545),
  ('condition -> ( condition )','condition',3,'p_condition_1','plyInmantaParser.py',555),
  ('condition -> operand CMP_OP operand','condition',3,'p_condition_2','plyInmantaParser.py',560),
  ('condition -> operand IN list_def','condition',3,'p_condition_2','plyInmantaParser.py',561),
  ('condition -> operand IN var_ref','condition',3,'p_condition_2','plyInmantaParser.py',562),
  ('condition -> condition AND condition','condition',3,'p_condition_2','plyInmantaParser.py',563),
  ('condition -> condition OR condition','condition',3,'p_condition_2','plyInmantaParser.py',564),
  ('condition -> function_call','condition',1,'p_condition_3','plyInmantaParser.py',571),
  ('condition -> var_ref','condition',1,'p_condition_3','plyInmantaParser.py',572),
  ('condition -> NOT condition','condition',2,'p_condition_not','plyInmantaParser.py',577),
  ('condition -> var_ref . ID IS DEFINED','condition',5,'p_condition_is_defined','plyInmantaParser.py',583),
  ('condition -> ID IS DEFINED','condition',3,'p_condition_is_defined_short','plyInmantaParser.py',589),
  ('condition -> TRUE','condition',1,'p_condition_term_1','plyInmantaParser.py',597),
  ('condition -> FALSE','condition',1,'p_condition_term_1','plyInmantaParser.py',598),
  ('operand -> constant','operand',1,'p_operand','plyInmantaParser.py',609),
  ('operand -> function_call','operand',1,'p_operand','plyInmantaParser.py',610),
  ('operand -> constructor','operand',1,'p_operand','plyInmantaParser.py',611),
  ('operand -> list_def','operand',1,'p_operand','plyInmantaParser.py',612),
  ('operand -> map_def','operand',1,'p_operand','plyInmantaParser.py',613),
  ('operand -> var_ref','operand',1,'p_operand','plyInmantaParser.py',614),
  ('operand -> index_lookup','operand',1,'p_operand','plyInmantaParser.py',615),
  ('operand -> map_lookup','operand',1,'p_operand','plyInmantaParser.py',616),
  ('map_lookup -> attr_ref [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',621),
  ('map_lookup -> local_var [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',622),
  ('map_lookup -> map_lookup [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',623),
  ('constructor -> class_ref ( param_list )','constructor',4,'p_constructor','plyInmantaParser.py',628),
  ('function_call -> ns_ref ( operand_list )','function_call',4,'p_function_call','plyInmantaParser.py',633),
  ('list_def -> [ operand_list ]','list_def',3,'p_list_def','plyInmantaParser.py',639),
  ('pair_list -> STRING : operand , pair_list','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',645),
  ('pair_list -> STRING : operand','pair_list',3,'p_pair_list_term','plyInmantaParser.py',651),
  ('pair_list -> <empty>','pair_list',0,'p_pair_list_term_2','plyInmantaParser.py',656),
  ('map_def -> { pair_list }','map_def',3,'p_map_def','plyInmantaParser.py',661),
  ('map_def -> { }','map_def',2,'p_map_def_empty','plyInmantaParser.py',667),
  ('index_lookup -> class_ref [ param_list ]','index_lookup',4,'p_index_lookup','plyInmantaParser.py',673),
  ('index_lookup -> attr_ref [ param_list ]','index_lookup',4,'p_short_index_lookup','plyInmantaParser.py',679),
  ('constant -> mls','constant',1,'p_constant_mls','plyInmantaParser.py',690),
  ('constant -> INT','constant',1,'p_constant','plyInmantaParser.py',696),
  ('constant -> FLOAT','constant',1,'p_constant','plyInmantaParser.py',697),
  ('constant -> NULL','constant',1,'p_constant_none','plyInmantaParser.py',704),
  ('constant -> REGEX','constant',1,'p_constant_regex','plyInmantaParser.py',711),
  ('constant -> TRUE','constant',1,'p_constant_t','plyInmantaParser.py',718),
  ('constant -> FALSE','constant',1,'p_constant_f','plyInmantaParser.py',725),
  ('constant -> STRING','constant',1,'p_string','plyInmantaParser.py',736),
  ('constant_list -> [ constants ]','constant_list',3,'p_constant_list','plyInmantaParser.py',771),
  ('constants -> constant','constants',1,'p_constants_term','plyInmantaParser.py',777),
  ('constants -> <empty>','constants',0,'p_constants_term_2','plyInmantaParser.py',782),
  ('constants -> constant , constants','constants',3,'p_constants_collect','plyInmantaParser.py',787),
  ('param_list -> ID = operand , param_list','param_list',5,'p_param_list_collect','plyInmantaParser.py',793),
  ('param_list -> ID = operand','param_list',3,'p_param_list_term','plyInmantaParser.py',799),
  ('param_list -> <empty>','param_list',0,'p_param_list_term_2','plyInmantaParser.py',804),
  ('operand_list -> operand , operand_list','operand_list',3,'p_operand_list_collect','plyInmantaParser.py',809),
  ('operand_list -> operand','operand_list',1,'p_operand_list_term','plyInmantaParser.py',815),
  ('operand_list -> <empty>','operand_list',0,'p_operand_list_term_2','plyInmantaParser.py',820),
  ('ns_list -> ns_ref , ns_list','ns_list',3,'p_ns_list_collect','plyInmantaParser.py',825),
  ('ns_list -> ns_ref','ns_list',1,'p_ns_list_term','plyInmantaParser.py',831),
  ('var_ref -> attr_ref','var_ref',1,'p_var_ref','plyInmantaParser.py',836),
  ('attr_ref -> var_ref . ID','attr_ref',3,'p_attr_ref','plyInmantaParser.py',841),
  ('local_var -> ns_ref','local_var',1,'p_local_var','plyInmantaParser.py',847),
  ('var_ref -> ns_ref','var_ref',1,'p_var_ref_2','plyInmantaParser.py',853),
  ('class_ref -> CID','class_ref',1,'p_class_ref_direct','plyInmantaParser.py',859),
  ('class_ref -> ns_ref SEP CID','class_ref',3,'p_class_ref','plyInmantaParser.py',870),
  ('class_ref_list -> class_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect','plyInmantaParser.py',882),
  ('class_ref_list -> var_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect_err','plyInmantaParser.py',888),
  ('class_ref_list -> class_ref','class_ref_list',1,'p_class_ref_list_term','plyInmantaParser.py',893),
  ('class_ref_list -> var_ref','class_ref_list',1,'p_class_ref_list_term_err','plyInmantaParser.py',898),
  ('ns_ref -> ns_ref SEP ID','ns_ref',3,'p_ns_ref','plyInmantaParser.py',904),
  ('ns_ref -> ID','ns_ref',1,'p_ns_ref_term','plyInmantaParser.py',910),
  ('id_list -> ID , id_list','id_list',3,'p_id_list_collect','plyInmantaParser.py',915),
  ('id_list -> ID','id_list',1,'p_id_list_term','plyInmantaParser.py',921),
  ('mls -> MLS_END','mls',1,'p_mls_term','plyInmantaParser.py',926),
  ('mls -> MLS mls','mls',2,'p_mls_collect','plyInmantaParser.py',931),
]
